{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/assets/logo_anhc-foto-white.svg","webpack:///./src/components/artifact/AdditionalItemTable.vue","webpack:///./src/components/artifact/AdditionalItemTable.vue?c6f8","webpack:///./src/components/artifact/AdditionalItemTable.vue?4b31","webpack:///./src/components/form/ClaimEpisodeForm.vue?88ad","webpack:///./src/components/artifact/ArtifactSummaryChart.vue","webpack:///./src/components/artifact/ArtifactSummaryChart.vue?a16b","webpack:///./src/components/artifact/ArtifactSummaryChart.vue?e891","webpack:///./src/components/artifact/ArtifactSurveys.vue","webpack:///./src/components/artifact/ArtifactSurveys.vue?13cc","webpack:///./src/components/artifact/ArtifactSurveys.vue?fa0c","webpack:///./src/assets/nh_brand_symbol.png","webpack:///./src/index/App.vue","webpack:///./src/components/AppSplash.vue","webpack:///./src/components/AppSplash.vue?9781","webpack:///./src/components/AppDash.vue","webpack:///./src/components/artifact/ArtifactDetail.vue","webpack:///./src/components/artifact/ArtifactDetail.vue?75cd","webpack:///./src/components/AppDash.vue?92fd","webpack:///./src/components/AppDash.vue?a86c","webpack:///./src/components/AppTopBar.vue","webpack:///./src/components/AppTopBar.vue?503f","webpack:///./src/components/AppSidebar.vue","webpack:///./src/components/AppSidebar.vue?9280","webpack:///./src/components/AppSidebar.vue?8eba","webpack:///./src/models/layout.ts","webpack:///./src/components/form/SurveyLaunch.vue","webpack:///./src/models/foto/email.ts","webpack:///./src/models/foto/surveyDetails.ts","webpack:///./src/components/form/SurveyLaunch.vue?f5e4","webpack:///./src/components/form/SurveyLaunch.vue?5698","webpack:///./src/components/form/EpisodeCreationForm.vue","webpack:///./src/components/form/EpisodeCreationForm.vue?8e10","webpack:///./src/components/form/EpisodeCreationForm.vue?faf1","webpack:///./src/components/form/ArtifactVisitCreationForm.vue","webpack:///./src/models/foto/visit.ts","webpack:///./src/components/form/ArtifactVisitCreationForm.vue?3ffa","webpack:///./src/components/form/ArtifactVisitCreationForm.vue?b74e","webpack:///./src/components/form/EpisodeDischargeForm.vue","webpack:///./src/models/foto/discharge.ts","webpack:///./src/components/form/EpisodeDischargeForm.vue?4926","webpack:///./src/components/form/EpisodeDischargeForm.vue?68dd","webpack:///./src/components/form/ClaimEpisodeForm.vue","webpack:///./src/models/code.ts","webpack:///./src/components/form/ClaimEpisodeForm.vue?7921","webpack:///./src/components/form/ClaimEpisodeForm.vue?3cb7","webpack:///./src/index/App.vue?42ea","webpack:///./src/index/App.vue?f90b","webpack:///./src/models/foto/patient.ts","webpack:///./src/services/toastService.ts","webpack:///./src/services/api/apiService.ts","webpack:///./src/services/foto/patientService.ts","webpack:///./src/models/foto/artifact.ts","webpack:///./src/services/foto/artifactService.ts","webpack:///./src/stores/artifactStore.ts","webpack:///./src/models/foto/clinician.ts","webpack:///./src/services/foto/codeService.ts","webpack:///./src/stores/codeListStore.ts","webpack:///./src/services/foto/episodeService.ts","webpack:///./src/stores/episodeStore.ts","webpack:///./src/models/fhir/launchContext.ts","webpack:///./src/services/fhir/fhirService.ts","webpack:///./src/stores/fhirStore.ts","webpack:///./src/stores/applicationStore.ts","webpack:///./src/models/shadowLine.ts","webpack:///./src/index/main.ts","webpack:///./src/services/hl7/hl7Service.ts","webpack:///./src/components/artifact/RiskAdjustmentCriteria.vue","webpack:///./src/components/artifact/RiskAdjustmentCriteria.vue?49ca","webpack:///./src/components/artifact/RiskAdjustmentCriteria.vue?5e14","webpack:///./src/components/artifact/ArtifactDetail.vue?b0cb","webpack:///./src/models/foto/episode.ts","webpack:///./src/models/foto/patientReportType.ts","webpack:///./src/models/foto/episodeInfo.ts","webpack:///./src/components/artifact/FunctionalStatusMeasureTable.vue","webpack:///./src/components/artifact/FunctionalStatusMeasureTable.vue?e838","webpack:///./src/components/artifact/FunctionalStatusMeasureTable.vue?3ddc"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","jsonpScriptSrc","p","exports","module","l","e","promises","installedChunkData","promise","Promise","resolve","reject","onScriptComplete","script","document","createElement","charset","timeout","nc","setAttribute","src","error","Error","event","onerror","onload","clearTimeout","chunk","errorType","type","realSrc","target","message","name","request","undefined","setTimeout","head","appendChild","all","m","c","d","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","oe","err","console","jsonpArray","window","oldJsonpFunction","slice","role","class","tabindex","colspan","getAssessmentAttribute","primaryAssessment","StagingInfo","PredictedStage","Measure","generateInterpretation","props","methods","attribute","this","AssessmentAttributes","filter","aa","Attribute","toLowerCase","Value","predictedChange","parseInt","higherOrLowerTxt","predictedChangeObj","dischargeFsScore","dischargeStage","Stage","render","lineOptions","interaction","plugins","legend","position","fullSize","labels","boxHeight","boxWidth","computed","chartData","mciiVal","MCII","mdcVal","MDC","predicted","PredictedChangeSummary","FunctionalScoreGoal","fotomean","RiskAdjustedStatisticalFOTO","predictedLineVals","mciiVals","mdcVals","labelVals","predictedVals","meanVals","functionalScores","index","FunctionalScoreSummaries","score","Label","FunctionalScore","datasets","label","radius","hoverRadius","fill","backgroundColor","borderColor","pointStyle","borderWidth","borderDash","pointHitRadius","surveys","scrollable","activeIndex","survey","count","header","selectedSurvey","id","autoLayout","scores","responsiveLayout","field","options","basicOptions","surveyValues","paginator","rows","filters","Descriptor","rowspan","sortable","body","slotProps","Indicator","Question","StatusResponse","getPredictedAnswer","artifact","setup","layout","padding","elements","point","display","tooltip","enabled","scales","x","ticks","grid","y","store","global","matchMode","CONTAINS","created","FunctionalAssessments","map","PatientReportedItems","Survey","Set","AddLog","PatientResponses","question","prediction","FunctionalityPredictions","fp","Answer","alt","height","loading","size","containerClass","onWrapperClick","visible","visibleRight","baseZIndex","isSidebarVisible","Episode","State","Episodes","dismissableMask","showSurvey","style","modal","episodeId","selectedId","showEpisodeForm","showVisitForm","externalEpisodeId","showDischargeForm","showClaimEpisodeForm","activeEpisodeFilters","showDischarged","showDischargedEpisodes","toggleCardEpisodeDisplay","toggleDischargeView","displaySurveyModal","displayDischargeModal","displayVisitModal","displayEpisodeClaimModal","Fhir","Context","LaunchedByResource","outboundPatient","Name","tooltipOptions","model","speedDialItems","direction","transitionDelay","buttonClass","vueSplashStyle","logo","imageStyle","Number","String","default","documentElement","setProperty","width","for","d_activeEpisodeFilters","includes","toggleCard","content","episodesWithStatusCount","title","$emit","d_showDischarged","ref","scrollHeight","paginatorTemplate","rowsPerPageOptions","currentPageReportTemplate","episodes","onRowExpand","expandedRows","dataKey","empty","expansion","ExternalEpisodeId","generateEpisodeDetailHeader","toggleExtEpisodeIdOp","Info","icon","toggle","aria-haspopup","aria-controls","EpisodeId","menuItems","popup","showCloseIcon","dismissable","autocomplete","submitExternalEpisodeIdEdit","inContextExternalIdOption","episodesOfCare","optionLabel","epiProps","period","start","end","text","option","updatingExternalId","episode","errorEvent","selectedEpisode","expander","formatDateTime","CreateDate","LatestIntakeTime","LatestStatusTime","DischargeTime","severity","NPId","loadingDetails","artifacts","artifactSelected","createPanelHeader","ReportId","panelBodyHeader","ReportType","toggleArtifactVisitNumOp","inContextArtifact","Visit","artifactVisitValue","updateVisitNumber","showButtons","min","updatingVisitNumber","launchSurvey","components","ArtifactDetail","patient","GetContextValue","EpisodeOfCare","Boolean","Array","FilterLocal","Discharged","items","command","displaySurvey","unshift","displayVisitForm","displayDischargeForm","$refs","stopPropagation","$Progress","DeleteClaim","Claim","extEpisodeIdOp","finish","Alias","CareTypeText","BodyPartText","info","indexOf","date","newDate","Date","getFullYear","getMonth","getDate","Get","eoc","startsWith","SetContextValue","initials","firstName","practitioner","Practitioner","lastName","family","given","gender","shape","footer","age","multiple","demographics","address","capitalizeFirstLetter","use","line","city","state","postalCode","telecom","system","d_store","ep","populateEpisodeDetails","encounter","lists","list","emptyReason","Allergies","a","status","useFullRow","Immunizations","Medications","Problems","Patient","mounted","forEach","entry","generateListTableBody","today","birthDate","getIdentifierValue","getExtensionValue","Encounter","encounterDetails","location","listName","sort","b","item","localeCompare","tBody","querySelector","innerHTML","episodeDetails","join","condition","diagnosis","identifier","ext","extension","url","valueCc","ombCat","valueString","valueCode","valueCodeableConcept","coding","valueCoding","code","dispaly","string","charAt","toUpperCase","userid","InProgress","IntakeOverdue","StatusOverdue","Close","Inactive","userId","menuActive","overlayMenuActive","mobileMenuActive","menuClick","staticMenuInactive","colorMode","localStorage","getItem","activeEpiFilters","split","f","setDark","setLight","setItem","toString","themeElement","getElementById","getAttribute","replace","classList","remove","add","surveyDetails","QrCode","LobbyCode","disabled","validEmail","sending","sendEmail","ToAddress","ToName","Url","GetSurvey","open","Email","email","Artifact","ForEpisode","Artifacts","Content","EmailSurveyInformation","submit","v$","$invalid","processSelection","SiteId","Code","Clinic","optionValue","submitted","$pending","$response","TherapistId","Clinician","placeholder","CareTypeId","CareType","isLoadingOptions","BodyPartId","BodyPart","ImpairmentId","Impairment","SurgeryTypeId","SurgeryType","PayerSourceId","PayerSource","PrimaryMeasureId","PrimaryMeasure","showToggleAll","selectedSecondaryMeasures","SecondaryMeasure","Display","selectedExternalIdOption","SetClinics","SetClinicians","SetCareTypes","SetPayerSource","codeSet","codeTextField","episodeIdField","episodeTextField","updateOptions","Id","externalId","existingEp","SecondaryBallotText","SecondaryMeasureIds","sp","ExternalPatientId","ExternalID","Add","updatedField","toLocaleLowerCase","impairments","SetBodyParts","SetImpairments","SetSurgeryTypes","SetPrimaryMeasure","primaryMeasures","SetSecondaryMeasure","validations","required","visit","ClinicianType","clinicianType","VisitDate","showIcon","MinutesSpent","suffix","Revenue","currency","locale","AddVisit","discharge","LastVisit","InterruptionDays","autoResize","ClinicianComments","Discharge","episodeOptions","selection","loadEpisodes","selectedType","types","selectionMode","headerStyle","codes","ValueSet","EpisodeOfCareType","contains","EpisodeSearch","resource","resourceType","er","SurveyLaunch","EpisodeCreationForm","ArtifactVisitCreationForm","EpisodeDischargeForm","ClaimEpisodeForm","AppSplash","AppTopBar","AppDash","AppSidebar","fhirClient","user","Window","$toast","$progress","started","performance","now","InitAsync","stopped","removeLoaderAfterElapsed","provide","toggleMode","toggleColorMode","Refresh","elapsed","onCardToggle","innerWidth","internalID","middleIntial","dateOfBirth","language","externalID","externalSiteID","alias","al","reference","lang","substring","em","toDateString","getTime","nameParts","fName","lName","mInitial","JSON","stringify","FirstName","LastName","DateOfBirth","ExternalId","ExternalSiteId","ExternalSiteID","Gender","Language","MiddleInitial","pat","locationName","communication","managingOrganization","summary","detail","life","cacheKey","_cacheKey","cache","successMessage","SearchCache","fetch","response","ok","clonedResp","clone","json","successful","errorMessage","Success","PutCache","caches","put","match","cachesKey","_apiService","Fetch","Request","method","headers","ToJSON","useCache","assign","SurveyDateTimeCompleted","VisitNumber","GetArtifacts","changed_index","findIndex","Response","externalPatientId","ArtifactState","_externalPatientId","_artifactService","reportId","SetVisit","GetReport","Key","locationId","_codeState","_locationId","_codeService","GetCodes","careTypeId","bodyPartId","uri","impairmentId","GetClinics","GetClinicians","siteId","bodypartId","primaryMeasureId","GetAll","episode_index","Text","patientExternalId","details","ResultCode","Warning","epiIndex","Json","ValidEpisode","EpisodeCreationResponse","InvalidEpisodeReasons","EpisodeState","_episodeService","filterFunc","existingEpisodes","Create","GetByExternalId","client","FhirClient","read","getState","log","FhirState","FhirService","UpdateState","SetPractitioner","SetPatient","SetEncounter","GetState","SetEpisodeOfCare","SetLocation","Location","SetList","GetValueSet","errorIfNotFound","ReadUser","ReadPatient","encounterId","enc","episodeOfCare","eocRef","_context","Log","FromResource","patientService","ForPatient","LaunchedBy","FotoPatient","ApplicationStore","keys","cache_keys","delete","serialize","toLocaleString","chart","ctx","_stroke","stroke","save","shadowColor","strokeStyle","shadowBlur","shadowOffsetX","shadowOffsetY","arguments","restore","register","app","App","ripple","inputStyle","color","failedColor","thickness","autoRevert","inverse","autoFinish","transition","speed","opacity","termination","component","directive","applicationStore","session","sessionStorage","SMART_KEY","launchContext","parse","oauth2","ready","config","errorHandler","vm","fail","addEventListener","reason","mount","HL7","Hl7Service","Mdm","Build","patientId","pFName","pLName","base64","dateTime","toISOString","createSegment","set","build","Send","num","RiskAdjustedItems","AdditionalItemTable","ArtifactSummaryChart","FunctionalStatusMeasureTable","ArtifactSurveys","RiskAdjustmentCriteria","getformattedDate","primaryMeasureAssessment","fa","scoreArrLen","viewReport","downloadReport","uploadReport","report","endsWith","Buffer","from","blob","Blob","Uint8Array","link","reportType","dateCompleted","dateStarted","SurveyDateTimeStarted","dateStr","href","URL","createObjectURL","download","click","tab","focus","datetime","ImpairmentText","SurgeryTypeText","PayerSourceText","PrimaryMeasureText","SiteText","TherapistName","SecondaryMeasureText","StatusCount","NPDescription","ClinicianId","latestIntake","latestStatus","DateHasValue","timeDiff","dayDiff","PatientReportType","EpisodeInfo","CurrentStage","IntakeStage","PatientFunctionText","StagingLevels","Title","RiskAdjustedStage"],"mappings":"aACE,SAASA,EAAqBC,GAQ7B,IAPA,IAMIC,EAAUC,EANVC,EAAWH,EAAK,GAChBI,EAAcJ,EAAK,GACnBK,EAAiBL,EAAK,GAIHM,EAAI,EAAGC,EAAW,GACpCD,EAAIH,EAASK,OAAQF,IACzBJ,EAAUC,EAASG,GAChBG,OAAOC,UAAUC,eAAeC,KAAKC,EAAiBX,IAAYW,EAAgBX,IACpFK,EAASO,KAAKD,EAAgBX,GAAS,IAExCW,EAAgBX,GAAW,EAE5B,IAAID,KAAYG,EACZK,OAAOC,UAAUC,eAAeC,KAAKR,EAAaH,KACpDc,EAAQd,GAAYG,EAAYH,IAG/Be,GAAqBA,EAAoBhB,GAE5C,MAAMO,EAASC,OACdD,EAASU,OAATV,GAOD,OAHAW,EAAgBJ,KAAKK,MAAMD,EAAiBb,GAAkB,IAGvDe,IAER,SAASA,IAER,IADA,IAAIC,EACIf,EAAI,EAAGA,EAAIY,EAAgBV,OAAQF,IAAK,CAG/C,IAFA,IAAIgB,EAAiBJ,EAAgBZ,GACjCiB,GAAY,EACRC,EAAI,EAAGA,EAAIF,EAAed,OAAQgB,IAAK,CAC9C,IAAIC,EAAQH,EAAeE,GACG,IAA3BX,EAAgBY,KAAcF,GAAY,GAE3CA,IACFL,EAAgBQ,OAAOpB,IAAK,GAC5Be,EAASM,EAAoBA,EAAoBC,EAAIN,EAAe,KAItE,OAAOD,EAIR,IAAIQ,EAAmB,GAKnBhB,EAAkB,CACrB,MAAS,GAGNK,EAAkB,GAGtB,SAASY,EAAe5B,GACvB,OAAOyB,EAAoBI,EAAI,OAAS,GAAG7B,IAAUA,GAAW,IAAM,CAAC,iBAAiB,YAAYA,GAAW,MAIhH,SAASyB,EAAoB1B,GAG5B,GAAG4B,EAAiB5B,GACnB,OAAO4B,EAAiB5B,GAAU+B,QAGnC,IAAIC,EAASJ,EAAiB5B,GAAY,CACzCK,EAAGL,EACHiC,GAAG,EACHF,QAAS,IAUV,OANAjB,EAAQd,GAAUW,KAAKqB,EAAOD,QAASC,EAAQA,EAAOD,QAASL,GAG/DM,EAAOC,GAAI,EAGJD,EAAOD,QAKfL,EAAoBQ,EAAI,SAAuBjC,GAC9C,IAAIkC,EAAW,GAKXC,EAAqBxB,EAAgBX,GACzC,GAA0B,IAAvBmC,EAGF,GAAGA,EACFD,EAAStB,KAAKuB,EAAmB,QAC3B,CAEN,IAAIC,EAAU,IAAIC,SAAQ,SAASC,EAASC,GAC3CJ,EAAqBxB,EAAgBX,GAAW,CAACsC,EAASC,MAE3DL,EAAStB,KAAKuB,EAAmB,GAAKC,GAGtC,IACII,EADAC,EAASC,SAASC,cAAc,UAGpCF,EAAOG,QAAU,QACjBH,EAAOI,QAAU,IACbpB,EAAoBqB,IACvBL,EAAOM,aAAa,QAAStB,EAAoBqB,IAElDL,EAAOO,IAAMpB,EAAe5B,GAG5B,IAAIiD,EAAQ,IAAIC,MAChBV,EAAmB,SAAUW,GAE5BV,EAAOW,QAAUX,EAAOY,OAAS,KACjCC,aAAaT,GACb,IAAIU,EAAQ5C,EAAgBX,GAC5B,GAAa,IAAVuD,EAAa,CACf,GAAGA,EAAO,CACT,IAAIC,EAAYL,IAAyB,SAAfA,EAAMM,KAAkB,UAAYN,EAAMM,MAChEC,EAAUP,GAASA,EAAMQ,QAAUR,EAAMQ,OAAOX,IACpDC,EAAMW,QAAU,iBAAmB5D,EAAU,cAAgBwD,EAAY,KAAOE,EAAU,IAC1FT,EAAMY,KAAO,iBACbZ,EAAMQ,KAAOD,EACbP,EAAMa,QAAUJ,EAChBH,EAAM,GAAGN,GAEVtC,EAAgBX,QAAW+D,IAG7B,IAAIlB,EAAUmB,YAAW,WACxBxB,EAAiB,CAAEiB,KAAM,UAAWE,OAAQlB,MAC1C,MACHA,EAAOW,QAAUX,EAAOY,OAASb,EACjCE,SAASuB,KAAKC,YAAYzB,GAG5B,OAAOJ,QAAQ8B,IAAIjC,IAIpBT,EAAoB2C,EAAIvD,EAGxBY,EAAoB4C,EAAI1C,EAGxBF,EAAoB6C,EAAI,SAASxC,EAAS+B,EAAMU,GAC3C9C,EAAoB+C,EAAE1C,EAAS+B,IAClCtD,OAAOkE,eAAe3C,EAAS+B,EAAM,CAAEa,YAAY,EAAMC,IAAKJ,KAKhE9C,EAAoBmD,EAAI,SAAS9C,GACX,qBAAX+C,QAA0BA,OAAOC,aAC1CvE,OAAOkE,eAAe3C,EAAS+C,OAAOC,YAAa,CAAEC,MAAO,WAE7DxE,OAAOkE,eAAe3C,EAAS,aAAc,CAAEiD,OAAO,KAQvDtD,EAAoBuD,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQtD,EAAoBsD,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,kBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAK5E,OAAO6E,OAAO,MAGvB,GAFA3D,EAAoBmD,EAAEO,GACtB5E,OAAOkE,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOtD,EAAoB6C,EAAEa,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIR1D,EAAoB8D,EAAI,SAASxD,GAChC,IAAIwC,EAASxC,GAAUA,EAAOmD,WAC7B,WAAwB,OAAOnD,EAAO,YACtC,WAA8B,OAAOA,GAEtC,OADAN,EAAoB6C,EAAEC,EAAQ,IAAKA,GAC5BA,GAIR9C,EAAoB+C,EAAI,SAASgB,EAAQC,GAAY,OAAOlF,OAAOC,UAAUC,eAAeC,KAAK8E,EAAQC,IAGzGhE,EAAoBI,EAAI,IAGxBJ,EAAoBiE,GAAK,SAASC,GAA2B,MAApBC,QAAQ3C,MAAM0C,GAAYA,GAEnE,IAAIE,EAAaC,OAAO,gBAAkBA,OAAO,iBAAmB,GAChEC,EAAmBF,EAAWjF,KAAK0E,KAAKO,GAC5CA,EAAWjF,KAAOf,EAClBgG,EAAaA,EAAWG,QACxB,IAAI,IAAI5F,EAAI,EAAGA,EAAIyF,EAAWvF,OAAQF,IAAKP,EAAqBgG,EAAWzF,IAC3E,IAAIU,EAAsBiF,EAI1B/E,EAAgBJ,KAAK,CAAC,EAAE,kBAEjBM,K,gEC5NTa,EAAOD,QAAU,IAA0B,yC,uDCChCmE,KAAK,QAAQC,MAAM,0C,EACtB,yBAKQ,SALDA,MAAM,oBAAoBD,KAAK,Y,CAClC,yBAGK,MAHDA,KAAK,OAAK,CACV,yBAAsD,MAAlDA,KAAK,QAAO,qCAChB,yBAAoC,MAAhCA,KAAK,QAAO,uB,MAGjBC,MAAM,oBAAoBD,KAAK,Y,GAC9BC,MAAM,GAAGC,SAAS,IAAIF,KAAK,O,EAC3B,yBAAiD,MAA7CA,KAAK,QAAO,gCAA4B,G,GACxCA,KAAK,Q,GAETC,MAAM,GAAGC,SAAS,IAAIF,KAAK,O,EAC3B,yBAAuC,MAAnCA,KAAK,QAAO,sBAAkB,G,GAC9BA,KAAK,Q,GAETC,MAAM,GAAGC,SAAS,IAAIF,KAAK,O,EAC3B,yBAAuC,MAAnCA,KAAK,QAAO,sBAAkB,G,GAC9BA,KAAK,Q,GAETC,MAAM,GAAGC,SAAS,IAAIF,KAAK,O,EAC3B,yBAAqC,MAAjCA,KAAK,QAAO,oBAAgB,G,GAC5BA,KAAK,Q,GAETC,MAAM,GAAGC,SAAS,IAAIF,KAAK,O,EAC3B,yBAA+C,MAA3CA,KAAK,QAAO,8BAA0B,G,GACtCA,KAAK,Q,GAKdA,KAAK,QAAQC,MAAM,gD,EACtB,yBAIQ,SAJDA,MAAM,oBAAoBD,KAAK,Y,CAClC,yBAEK,MAFDA,KAAK,OAAK,CACV,yBAAmE,MAA/DA,KAAK,OAAOG,QAAQ,MAAK,yC,MAG9BF,MAAM,oBAAoBD,KAAK,Y,GAClCE,SAAS,IAAIF,KAAK,O,GACdA,KAAK,OAAOG,QAAQ,M,qGAvChC,yBA6BQ,QA7BR,EA6BQ,CA5BJ,EAMA,yBAqBQ,QArBR,EAqBQ,CApBJ,yBAGK,KAHL,EAGK,CAFD,EACA,yBAAkE,KAAlE,EAAkE,6BAAhD,EAAAC,uBAAsB,yBAE5C,yBAGK,KAHL,EAGK,CAFD,EACA,yBAA6E,KAA7E,EAA6E,6BAA3D,EAAAC,kBAAkBC,YAAYC,eAAeC,SAAO,KAE1E,yBAGK,KAHL,EAGK,CAFD,EACA,yBAAyD,KAAzD,EAAyD,6BAAvC,EAAAJ,uBAAsB,gBAE5C,yBAGK,KAHL,EAGK,CAFD,EACA,yBAA2D,KAA3D,EAA2D,6BAAzC,EAAAA,uBAAsB,kBAE5C,yBAGK,KAHL,EAGK,CAFD,EACA,yBAAgE,KAAhE,EAAgE,6BAA9C,EAAAA,uBAAsB,iBAAkB,IAAC,SAKvE,yBAWQ,QAXR,EAWQ,CAVJ,EAKA,yBAIQ,QAJR,EAIQ,CAHR,yBAEK,KAFL,EAEK,CADD,yBAA8D,KAA9D,EAA8D,6BAA/B,EAAAK,0BAAsB,U,wCClClD,iBAAgB,CAC3B7C,KAAM,sBACN8C,MAAO,CACHL,kBAAmB/F,QAEvBqG,QAAS,CACLP,uBADK,SACkBhB,GACnB,IAAMwB,EAAwCC,KAAKR,kBAAkBS,qBAAqBC,QACtF,SAACC,GAAD,OAA6BA,EAAGC,UAAUC,eAAiB9B,EAAI8B,iBAGnE,OAAON,EAAUvG,OAAS,EAAIuG,EAAU,GAAGO,MAAQ,IAEvDV,uBARK,WASD,IAAMW,EAA0BC,SAASR,KAAKT,uBAAuB,oBAC/DkB,EAA2BF,EAAkB,EAAI,SAAW,QAC5DG,EAAqBV,KAAKR,kBAAkBC,YAAYC,eACxDiB,EAAmBD,EAAmBf,QACtCiB,EAAiBF,EAAmBG,MAE1C,wKAC+D,WAArBJ,EAAgC,WAAa,WADvF,6CAEkBF,EAFlB,uBAEgDI,EAFhD,eAEuEF,EAFvE,0DAGgBG,EAHhB,qBAG2CH,EAH3C,sBCvBZ,EAAOK,OAASA,EAED,U,oCCLf,W,uJCCA,yBAA6D,GAAtD,KAAK,MAAO,KAAM,YAAY,QAAS,e,2CCI/B,iBAAgB,CAC3B/D,KAAM,uBACN8C,MAAO,CACHL,kBAAmB/F,QAEvBT,KAL2B,WAMvB,MAAO,CACH+H,YAAa,CACTC,YAAa,CACT7C,KAAM,SAEV8C,QAAS,CACLC,OAAQ,CACJC,SAAU,MACVC,UAAU,EACVC,OAAQ,CACJC,UAAW,EACXC,SAAU,SAOlCC,SAAU,CACNC,UADM,WAeF,IAbA,IAAIC,EAAU1B,KAAKR,kBAAkBmC,KACjCC,EAAS5B,KAAKR,kBAAkBqC,IAChCC,EAAY9B,KAAKR,kBAAkBuC,uBAAuBC,oBAC1DC,EAAWjC,KAAKR,kBAAkB0C,4BAEhCC,EAAmC,GACnCC,EAA0B,GAC1BC,EAAyB,GACzBC,EAA2B,CAAC,IAC5BC,EAA+B,CAAC,MAChCC,EAA0B,CAACP,GAC3BQ,EAAkC,CAAC,MAEhCC,EAAQ,EAAGA,EAAQ1C,KAAKR,kBAAkBmD,yBAAyBnJ,OAAQkJ,IAAS,CACzF,IAAME,EAAQ5C,KAAKR,kBAAkBmD,yBAAyBD,GAE5B,WAA9BE,EAAMC,MAAMxC,gBACZqB,GAAWkB,EAAME,gBACjBlB,GAAUgB,EAAME,iBAGpBX,EAAkBrI,KAAK,MACvByI,EAAczI,KAAK,MACnBsI,EAAStI,KAAK4H,GACdW,EAAQvI,KAAK8H,GACbU,EAAUxI,KAAK8I,EAAMC,OACrBJ,EAAiB3I,KAAK8I,EAAME,iBAC5BN,EAAS1I,KAAKmI,GAEVS,IAAU1C,KAAKR,kBAAkBmD,yBAAyBnJ,OAAS,IACnE2I,EAAkBrI,KAAK8I,EAAME,iBAC7BX,EAAkBrI,KAAKgI,GACvBS,EAAczI,KAAKgI,GACnBQ,EAAUxI,KAAK,YAAa,IAC5BsI,EAAStI,KAAK4H,EAASA,EAASA,GAChCW,EAAQvI,KAAK8H,EAAQA,EAAQA,GAC7BY,EAAS1I,KAAKmI,EAAUA,IAIhC,MAAO,CACHZ,OAAQiB,EACRS,SAAU,CACN,CACIC,MAAO,iBACPrG,KAAM,OACNsG,OAAQ,EACRC,YAAa,EACblK,KAAMyJ,EACNU,MAAM,EACNC,gBAAiB,QACjBC,YAAa,QACbC,WAAY,UAEhB,CACIN,MAAO,OACPrG,KAAM,OACN3D,KAAMoJ,EACNe,MAAM,EACNF,OAAQ,EACRC,YAAa,EACbK,YAAa,EACbF,YAAa,OACbC,WAAY,OACZE,WAAY,CAAC,EAAG,IAEpB,CACIR,MAAO,MACPrG,KAAM,OACN3D,KAAMqJ,EACNc,MAAM,EACNF,OAAQ,EACRC,YAAa,EACbK,YAAa,EACbF,YAAa,SACbC,WAAY,OACZE,WAAY,CAAC,EAAG,IAEpB,CACIR,MAAO,iBACPrG,KAAM,OACNsG,OAAQ,EACRC,YAAa,EACblK,KAAMuJ,EACNY,MAAM,EACNC,gBAAiB,SACjBC,YAAa,SACbC,WAAY,QAEhB,CACIN,MAAO,GACPrG,KAAM,OACNsG,OAAQ,EACRC,YAAa,EACbO,eAAgB,EAChBzK,KAAMmJ,EACNgB,MAAM,EACNC,gBAAiB,SACjBC,YAAa,SACbG,WAAY,CAAC,EAAG,IAEpB,CACIR,MAAO,YACPrG,KAAM,OACNsG,OAAQ,EACRC,YAAa,EACblK,KAAMwJ,EACNW,MAAM,EACNE,YAAa,MACbD,gBAAiB,UACjBE,WAAY,gBC1IpC,EAAOxC,OAASA,EAED,U,sDCHP,yBAEM,OAFD1B,MAAM,kBAAgB,CACvB,yBAA+C,MAA3CA,MAAM,0BAAyB,a,MAElCA,MAAM,mC,GAGUb,IAAI,IAA2Ba,MAAM,U,GACjCA,MAAM,Y,GAUVb,IAAI,IAAIa,MAAM,U,SAQVA,MAAM,W,GAmBWA,MAAM,Y,gVA7CpC,EAAAsE,QAAQlK,OAAM,G,yBAA9B,yBAiEW,uBAhEP,EAGA,yBA4DM,MA5DN,EA4DM,CA3DF,yBA0DU,GA1DAmK,YAAY,EAAcC,YAAa,EAAAA,Y,sDAAA,EAAAA,YAAW,K,+BAC9C,iBAAkC,E,2BAA5C,yBAwDW,2CAxDyB,EAAAF,SAAO,SAAzBG,EAAQC,G,gCAA1B,yBAwDW,GAxDmCvF,IAAKsF,EAASE,OAAQF,G,+BAC5D,uBAUM,CAVc,EAAAG,gB,yBAWpB,yBA2CM,MA3CN,EA2CM,CA1CF,yBAMM,OAND5E,MAAM,UAAW6E,GAAE,+BAA0BH,I,CAC9C,yBAGY,GAHD1E,MAAM,iBAAkB8E,YAAY,EAAOjG,MAAO,EAAAkG,OAAQC,iBAAiB,U,+BAClF,iBAAuD,CAAvD,yBAAuD,GAA/CC,MAAM,QAAQN,OAAO,mBAC7B,yBAAmD,GAA3CM,MAAM,kBAAkBN,OAAO,S,mBAE9B,YAAAI,cAAA,eAAQ3K,QAAM,G,yBAA3B,yBAAyF,G,MAAxDmD,KAAK,OAAQ3D,KAAM,EAAAyI,UAAY6C,QAAS,EAAAC,c,8EAElD,EAAAC,aAAahL,OAAM,G,yBAA9C,yBAkCM,MAlCN,EAkCM,CAjCF,yBAgCY,GAhCD4F,MAAM,iBAAkB8E,YAAY,EAAOjG,MAAO,EAAAuG,aAAcT,OAAO,YAAYK,iBAAiB,SAAUK,WAAW,EAAOC,KAAM,EAAIC,QAAS,EAAAA,S,CAC/IZ,OAAM,sBAAC,iBACO,C,6BADP,yBACO,6BAAE,EAAAC,eAAeY,YAAY,oBACtD,O,8BACA,iBAUc,CAVd,yBAUc,GAVDjI,KAAK,UAAQ,C,8BACtB,iBAGM,CAHN,yBAGM,Q,8BAFF,iBAAsF,CAAtF,yBAAsF,GAA9EoH,OAAO,sBAAuBc,QAAS,EAAIC,UAAU,EAAMT,MAAM,aACzE,yBAA4C,GAApCN,OAAO,cAAezE,QAAS,Q,MAE3C,yBAIM,Q,8BAHF,iBAA0B,CAA1B,yBAA0B,GAAlByE,OAAO,WACf,yBAA0B,GAAlBA,OAAO,WACf,yBAA6B,GAArBA,OAAO,kB,gBAIvB,yBAIS,GAJDM,MAAM,WAAYS,UAAU,G,CACrBC,KAAI,sBACX,SADsB,GACtB,MADsB,CACtB,yBAAsF,OAAtF,EAAsF,6BAA7DC,EAAUhM,KAAKiM,WAAW,IAAC,6BAAED,EAAUhM,KAAKkM,UAAQ,O,MAGrF,yBAAiC,GAAzBb,MAAM,mBACd,yBAIS,GAJDA,MAAM,kBAAgB,CACfU,KAAI,sBACX,SADsB,GACtB,MADsB,C,0DACS,OAA7BC,EAAUhM,KAAKmM,eAAc,KAAmBH,EAAUhM,KAAKmM,gBAAc,O,MAGvF,yBAIS,QAHMJ,KAAI,sBACX,SADsB,GACtB,MADsB,C,0DACpB,EAAAK,mBAAmBJ,EAAUhM,KAAKkM,WAAQ,O,6GAjDhE,yBAUM,MAVN,EAUM,CATF,yBAQM,MARN,EAQM,CAPF,yBAMY,GAND9F,MAAM,iBAAkB8E,YAAY,EAAOjG,MAAO,EAAAuG,aAAeC,WAAW,EAAOC,KAAM,EAAIC,QAAS,EAAAA,S,CAClGZ,OAAM,sBAAC,iBACO,C,6BADP,yBACO,6BAAEF,GAAQ,oBACnC,O,8BACA,iBAAuE,CAAvE,yBAAuE,GAA9DiB,UAAU,EAAMT,MAAM,YAAYN,OAAO,cAClD,yBAAgE,GAAvDe,UAAU,EAAMT,MAAM,QAAQN,OAAO,e,oQCLnE,iBAAgB,CAC3BhH,KAAM,eACN8C,MAAO,CACHwF,SAAU5L,QAEd6L,MAL2B,WAMvB,IAAMf,EAAe,eAAI,CACrBgB,OAAQ,CACJC,QAAS,GAEbC,SAAU,CACNC,MAAO,CACHzC,OAAQ,IAGhBhC,QAAS,CACLC,OAAQ,CACJyE,SAAS,GAEbC,QAAS,CACLC,SAAS,EACTL,QAAS,IAGjBM,OAAQ,CACJC,EAAG,CACCC,MAAO,CACHL,SAAS,GAEbM,KAAM,CACFN,SAAS,EACTpC,YAAa,IAGrB2C,EAAG,CACCF,MAAO,CACHL,SAAS,GAEbM,KAAM,CACFN,SAAS,EACTpC,YAAa,OAM7B,MAAO,CACHgB,eACA4B,MAAO,eAAO,WAGtBnN,KAnD2B,WAoDvB,MAAO,CACH0K,QAAS,GACTE,YAAa,EACbe,QAAS,CACLyB,OAAQ,CAAEnI,MAAO,KAAMoI,UAAW,OAAgBC,aAI9DC,QA5D2B,WA6DvB,IAAI7C,EAAU1D,KAAKqF,SAASmB,sBAAsBC,KAAI,SAACnN,GAAD,OAA6BA,EAAEsL,cAErFlB,EAAQ5J,KAAR,MAAA4J,EAAO,eACA1D,KAAKqF,SAASqB,qBAAqBxG,QAAO,SAAC5G,GAAD,MAAmD,OAA3BA,EAAEqN,OAAOtG,iBAAwBoG,KAClG,SAACnN,GAAD,OAAwBA,EAAEqN,YAIlC3G,KAAK0D,QAAL,eAAmB,IAAIkD,IAAIlD,KAE/BlC,SAAU,CACNwC,eADM,WACQ,WAGV,OAFAhE,KAAKmG,MAAMU,OAAX,yBAAoC7G,KAAK0D,QAAQ1D,KAAK4D,eAE/C5D,KAAKqF,SAASmB,sBAAsBtG,QACvC,SAAC5G,GAAD,OACIA,EAAEsL,WAAWvE,gBAAkB,EAAKqD,QAAQ,EAAKE,aAAavD,iBACpE,IAENmE,aATM,WASM,WACR,OAAOxE,KAAKgE,eACNhE,KAAKgE,eAAe8C,iBACpB9G,KAAKqF,SAASqB,qBAAqBxG,QAC/B,SAAC5G,GAAD,OAAwBA,EAAEqN,OAAOtG,gBAAkB,EAAKqD,QAAQ,EAAKE,aAAavD,kBAGhG8D,OAhBM,WAgBA,MACF,iBAAOnE,KAAKgE,sBAAZ,aAAO,EAAqBrB,0BAEhClB,UAnBM,WAmBG,QACC0C,EAAM,UAAGnE,KAAKmE,cAAR,aAAG,EAAasC,KAAI,SAAC7L,GAAD,OAAYA,EAAEkI,mBAC1CO,EAAc,GACdD,EAAkB,GAUtB,OARIe,EAAO3K,OAAS,GAAK2K,EAAO,GAAKA,EAAOA,EAAO3K,OAAS,IACxD6J,EAAc,UACdD,EAAkB,YAElBC,EAAc,UACdD,EAAkB,WAGf,CACH/B,OAAM,UAAErB,KAAKmE,cAAP,aAAE,EAAasC,KAAI,iBAAM,MAC/B1D,SAAU,CACN,CACIC,MAAO,GACPrG,KAAM,aACN3D,KAAMmL,EACNhB,MAAM,EACNI,YAAa,EACbF,YAAaA,EACbD,gBAAiBA,OAMrCtD,QAAS,CACLsF,mBADK,SACc2B,GAAgB,MACzBC,EAAU,UAAGhH,KAAKgE,eAAevE,mBAAvB,aAAG,EAAiCwH,yBAAyB/G,QACzE,SAACgH,GAAD,OAAwCA,EAAGhC,SAAS7E,gBAAkB0G,EAAS1G,iBAGnF,OAAI2G,GAAcA,EAAWxN,OAAS,EAAUwN,EAAW,GAAGG,OAEvD,SCtInB,EAAOrG,OAASA,EAED,U,uBCLf7F,EAAOD,QAAU,IAA0B,oC,kLCK1BuD,IAAI,IAAIa,MAAM,U,EAMX,yBAAsB,UAAlB,iBAAa,G,GAK5BA,MAAM,e,GAEcb,IAAI,M,GAuBJA,IAAI,KAAKa,MAAM,6F,GACXA,MAAM,Y,GACHA,MAAM,e,GAETA,MAAM,Y,EACP,yBAAM,mB,GAQTb,IAAI,KAAKa,MAAM,6F,EAChB,yBAEM,OAFDA,MAAM,YAAU,CACjB,yBAAoD,MAAhDA,MAAM,eAAc,6B,KAIpC,yBAGM,OAHDA,MAAM,sBAAoB,CAC3B,yBAAmF,OAA9EgI,IAAI,OAAOlL,IAAA,IAAoCmL,OAAO,KAAKjI,MAAM,aACtE,yBAAoI,QAA9HA,MAAM,SAAO,CAAC,yBAA8D,QAAxDA,MAAM,kCAAiC,c,6BAAiB,mD,2wBA7DtG,yBAmEM,YAlER,yBAAoB,GACd,yBAAS,GACT,yBA+Da,iBA/DDrC,KAAK,OAAOoB,KAAK,U,+BACzB,iBAEM,CAF4B,EAAAoH,OAAO+B,S,yBAAzC,yBAEM,MAFN,EAEM,CADF,yBAAyB,GAAbC,KAAM,U,yBAEtB,yBA0DM,OA1DDhJ,IAAI,IAAKa,MAAO,EAAAoI,iBAAmB,QAAK,gCAAE,EAAAC,gBAAA,EAAAA,eAAA,sB,CAC3C,yBAAa,GACb,yBAEU,GAFOC,QAAS,EAAAC,a,kDAAA,EAAAA,aAAY,IAAGC,WAAY,IAAMzG,SAAS,S,+BAChE,iBAAsB,CAAtB,M,oBAEhB,yBAEa,iBAFDpE,KAAK,kBAAgB,C,8BACjB,iBAA0C,C,4BAA1C,yBAA0C,kB,YAAtB,EAAA8K,0B,MAEpC,yBAgDM,MAhDN,EAgDM,CA/CU,yBA0Ca,iBA1CD9K,KAAK,OAAOoB,KAAK,U,+BACzB,uBAsBM,CAtBkD,KAApC,YAAAgI,MAAM2B,QAAQC,MAAMC,gBAApB,eAA8BxO,S,yBAAlD,yBAsBM,MAtBN,EAsBM,CArBF,yBAES,GAFDuK,OAAO,gBAAiBkE,iBAAiB,EAAcP,QAAS,EAAAQ,W,kDAAA,EAAAA,WAAU,IAAGC,MAAO,gBAAmBC,OAAO,EAAMhJ,MAAM,iC,+BAC9H,iBAAwC,CAAxC,yBAAwC,GAAzBiJ,UAAW,EAAAC,YAAU,0B,oBAGxC,yBAES,GAFOZ,QAAS,EAAAa,gB,kDAAA,EAAAA,gBAAe,IAAGN,iBAAiB,EAAOE,MAAO,gBAAoBpE,OAAO,kBAAmBqE,OAAO,EAAMhJ,MAAM,W,+BACvI,iBAAyD,CAAzD,yBAAyD,GAAnC,QAAK,wBAAE,EAAAmJ,iBAAe,U,oBAGhD,yBAES,GAFOb,QAAS,EAAAc,c,kDAAA,EAAAA,cAAa,IAAGP,iBAAiB,EAAOE,MAAO,gBAAoBpE,OAAO,gBAAiBqE,OAAO,EAAMhJ,MAAM,W,+BACnI,iBAA6F,CAA7F,yBAA6F,GAAjE,QAAK,wBAAE,EAAAoJ,eAAa,IAAYC,kBAAmB,EAAAH,Y,sDAGnF,yBAES,GAFOZ,QAAS,EAAAgB,kB,kDAAA,EAAAA,kBAAiB,IAAGT,iBAAiB,EAAOE,MAAO,gBAAoBpE,OAAO,oBAAqBqE,OAAO,EAAMhJ,MAAM,W,+BAC3I,iBAA4F,CAA5F,yBAA4F,GAArE,QAAK,wBAAE,EAAAsJ,mBAAiB,IAAYD,kBAAmB,EAAAH,Y,sDAGlF,yBAES,GAFOZ,QAAS,EAAAiB,qB,oDAAA,EAAAA,qBAAoB,IAAGV,iBAAiB,EAAOE,MAAO,gBAAoBpE,OAAO,gBAAiBqE,OAAO,EAAMhJ,MAAM,W,+BAC1I,iBAAoF,CAApF,yBAAoF,GAAjEiJ,UAAW,EAAAC,WAAc,QAAK,wBAAE,EAAAK,sBAAoB,K,8CAG3E,yBAAsW,GAA5VC,qBAAsB,EAAArD,OAAOqD,qBAAuBC,eAAgB,EAAAtD,OAAOuD,uBAAyB,aAAY,EAAAC,yBAA2B,2BAA0B,EAAAC,oBAAsB,gBAAe,EAAAC,mBAAqB,mBAAkB,EAAAC,sBAAwB,eAAc,EAAAC,kBAAoB,sBAAqB,EAAAC,0B,iLAExK,iBAA3C,EAAAjD,MAAMkD,KAAKtB,MAAMuB,QAAQC,oB,yBAApJ,yBAYM,MAZN,EAYM,CAXF,yBAEM,MAFN,EAEM,CADF,yBAA6H,KAA7H,EAAwB,4CAAyC,6BAAE,EAAAC,gBAAgBC,MAAM,kCAA+B,KAE5H,yBAGM,MAHN,EAGM,CAFF,EACA,yBAAuH,GAA/GrK,MAAM,+BAA+BzC,KAAK,SAASqG,MAAM,oBAAqB,QAAK,iCAAE,EAAAuF,iBAAe,QAGhH,yBAES,GAFOb,QAAS,EAAAa,gB,oDAAA,EAAAA,gBAAe,IAAGN,iBAAiB,EAAOE,MAAO,gBAAoBpE,OAAO,kBAAmBqE,OAAO,EAAMhJ,MAAM,W,+BACvI,iBAAyD,CAAzD,yBAAyD,GAAnC,QAAK,0BAAE,EAAAmJ,iBAAe,U,iDAGpD,yBAIM,MAJN,EAIM,CAHF,S,MAKR,IAKJ,yBAAmP,GAAvOmB,eAAgB,kBAAqBC,MAAO,EAAAC,eAAgBzB,MAAA,+DAAgE0B,UAAU,UAAWC,gBAAiB,GAAInN,KAAK,iBAAiBoN,YAAY,8B,kEC9D5N3K,MAAM,oB,wDAFb,yBAMM,OANAA,MAAO,CAAC,aAAc,CAAf,yBAAgD+I,MAAO,EAAA6B,gB,CACnE,yBAIM,YAHL,yBAEM,MAFN,EAEM,CADL,yBAAuC,OAAjC9N,IAAK,EAAA+N,KAAO9B,MAAO,EAAA+B,Y,uCASd,+BAAgB,CAC9BnN,KAAM,YACN8C,MAAO,CACN0H,KAAM,CACL5K,KAAM,CAACwN,OAAQC,QACfC,QAAS,MAGX9D,QAR8B,WAS7B3K,SAAS0O,gBAAgBnC,MAAMoC,YAAY,iBAAkB,YAE9D/I,SAAU,CACTyI,KADS,WAEC,OAAO,EAAQ,SAEzBC,WAJS,WAKR,IAAIM,EAAQxK,KAAKuH,KAAO,KACxB,MAAO,CACNiD,UAGFR,eAVS,WAWR,MAAO,CACN5G,gBAAiB,mBCjCrB,EAAOtC,OAAS,EAED,Q,wBCJN1B,MAAM,6B,GAILA,MAAM,6B,EACV,yBAEM,YADL,yBAA6C,OAAxCA,MAAM,kBAAiB,iB,MAExBA,MAAM,gEAAgE+I,MAAA,kC,GACpE/I,MAAM,iC,EAGd,yBAA6D,QAAvDA,MAAM,8BAA6B,iBAAa,G,GAOjDA,MAAM,6B,EACV,yBAEM,YADL,yBAAgD,OAA3CA,MAAM,kBAAiB,oB,MAExBA,MAAM,+DAA+D+I,MAAA,kC,GACnE/I,MAAM,gC,EAGd,yBAA0E,QAApEA,MAAM,8BAA6B,8BAA0B,G,GAO9DA,MAAM,6B,EACV,yBAEM,YADL,yBAAgD,OAA3CA,MAAM,kBAAiB,oB,MAExBA,MAAM,iEAAiE+I,MAAA,kC,GACrE/I,MAAM,kC,EAGd,yBAA2E,QAArEA,MAAM,8BAA6B,+BAA2B,G,GAO/DA,MAAM,6B,EACV,yBAEM,YADL,yBAAuC,OAAlCA,MAAM,kBAAiB,W,MAExBA,MAAM,iEAAiE+I,MAAA,kC,GACrE/I,MAAM,kC,EAGd,yBAA2E,QAArEA,MAAM,8BAA6B,+BAA2B,G,GAO/DA,MAAM,6B,EACV,yBAEM,YADL,yBAA0C,OAArCA,MAAM,kBAAiB,c,MAExBA,MAAM,+DAA+D+I,MAAA,kC,GACnE/I,MAAM,gC,EAGd,yBAAsE,QAAhEA,MAAM,8BAA6B,0BAAsB,G,IAKvDA,MAAM,mC,IAGMA,MAAM,qE,GACzB,yBAAgE,MAA5DA,MAAM,kCAAiC,oBAAgB,G,gCAM1C,qB,IAwCTA,MAAM,mB,IACLA,MAAM,W,IACNA,MAAM,kB,UAKNA,MAAM,U,IAONA,MAAM,Y,GACV,yBAAiD,MAA7CA,MAAM,SAAQ,8BAA0B,G,GAC5C,yBAA0L,QAApLA,MAAM,4CAA2C,gIAA4H,G,IAI/KA,MAAM,Y,IAEJA,MAAM,4B,IACJA,MAAM,iB,yBAYX,yBAAwD,SAAjDqL,IAAI,+BAA8B,WAAO,G,GAIlD,yBAA8B,OAAzBrL,MAAM,kBAAgB,S,IACtBA,MAAM,kB,IAOVA,MAAM,Y,GAKX,yBAEM,OAFDA,MAAM,YAAU,CACpB,yBAAmG,MAA/FA,MAAM,eAAc,4E,OAEpBA,MAAM,Y,GACV,yBAAM,mB,GAEN,yBAAM,mB,UAIFA,MAAM,Y,GACV,yBAAgE,MAA5DA,MAAM,eAAc,uCAAmC,G,wkBA9LhE,yBAsMM,MAtMN,EAsMM,CArMR,yBAcM,OAdAA,MAAK,yCAAoC,EAAAsL,uBAAuBC,SAAQ,gBAAwB,QAAK,+BAAE,EAAAC,WAAU,M,CACtH,yBAYO,QAXKC,QAAO,sBACjB,iBAOM,CAPN,yBAOM,MAPN,EAOM,CANL,EAGA,yBAEM,MAFN,EAEM,CADL,yBAAiF,OAAjF,EAAiF,6BAAnC,EAAAC,wBAAuB,WAGvE,M,UAIH,yBAcM,OAdA1L,MAAK,4CAAuC,EAAAsL,uBAAuBC,SAAQ,gBAAwB,QAAK,+BAAE,EAAAC,WAAU,M,CACzH,yBAYO,QAXKC,QAAO,sBACjB,iBAOM,CAPN,yBAOM,MAPN,EAOM,CANL,EAGA,yBAEM,MAFN,EAEM,CADL,yBAAgF,OAAhF,EAAgF,6BAAnC,EAAAC,wBAAuB,WAGtE,M,UAIH,yBAcM,OAdA1L,MAAK,4CAAuC,EAAAsL,uBAAuBC,SAAQ,gBAAwB,QAAK,+BAAE,EAAAC,WAAU,M,CACzH,yBAYO,QAXKC,QAAO,sBACjB,iBAOM,CAPN,yBAOM,MAPN,EAOM,CANL,EAGA,yBAEM,MAFN,EAEM,CADL,yBAAkF,OAAlF,EAAkF,6BAAnC,EAAAC,wBAAuB,WAGxE,M,UAIH,yBAcM,OAdA1L,MAAK,oCAA+B,EAAAsL,uBAAuBC,SAAQ,gBAAwB,QAAK,+BAAE,EAAAC,WAAU,M,CACjH,yBAYO,QAXKC,QAAO,sBACjB,iBAOM,CAPN,yBAOM,MAPN,EAOM,CANL,EAGA,yBAEM,MAFN,EAEM,CADL,yBAAkF,OAAlF,EAAkF,6BAAnC,EAAAC,wBAAuB,WAGxE,M,UAIH,yBAcM,OAdA1L,MAAK,uCAAkC,EAAAsL,uBAAuBC,SAAQ,gBAAwB,QAAK,+BAAE,EAAAC,WAAU,M,CACpH,yBAYO,QAXKC,QAAO,sBACjB,iBAOM,CAPN,yBAOM,MAPN,EAOM,CANL,EAGA,yBAEM,MAFN,EAEM,CADL,yBAAgF,OAAhF,EAAgF,6BAAnC,EAAAC,wBAAuB,WAGtE,M,UAKG,yBAwHA,MAxHA,GAwHA,CAvHL,yBAsHO,QArHKC,MAAK,sBACA,iBAGT,CAHS,yBAGT,MAHS,GAGT,CAFL,G,4BACA,yBAA4I,GAA9H,SAAM,+BAAE,EAAAC,MAAK,8B,WAAuC,EAAAC,iB,qDAAA,EAAAA,iBAAgB,IAAEhH,GAAG,kB,2BAAgC,uB,QAAf,YAG/F4G,QAAO,sBACjB,iBA4GY,CA5GZ,yBA4GY,GA5GDK,IAAI,KAAMhH,YAAY,EAAMiH,aAAa,OAAOC,kBAAkB,uGAAwGC,mBAAoB,CAAC,EAAD,OAAWC,0BAA0B,8CAA+CrN,MAAO,EAAAsN,SAAW,YAAW,EAAAC,YAAqBC,aAAc,EAAAA,a,yDAAA,EAAAA,aAAY,IAAEC,QAAQ,YAAYtM,MAAM,kBAAkBgF,iBAAiB,QAASK,WAAW,EAAOC,KAAM,EAAIC,QAAS,EAAAA,S,CAC1cgH,MAAK,sBAAC,iBAAiB,C,OAqCvBC,UAAS,sBACnB,SAD8B,GAC9B,MAD8B,CACd5G,EAAUhM,KAAK6S,mB,yBAA/B,yBAoDW,uBAnDO,EAAA1P,M,iEAAjB,yBA+CW,uBA9CV,yBAWM,MAXN,GAWM,CAVL,yBAKM,MALN,GAKM,CAJL,yBAGK,KAHL,GAGK,C,0DAFF,EAAA2P,4BAA4B9G,EAAUhM,OAAO,IAC/C,GAAuD,iBAA3C,EAAAmN,MAAMkD,KAAKtB,MAAMuB,QAAQC,mB,sDAArC,yBAA4O,Q,MAA/J,QAAK,8BAAE,EAAAwC,sBAAA,EAAAA,qBAAA,qBAAsB3M,MAAM,iC,8BAA8E,MAAG,6BAAE4F,EAAUhM,KAAK6S,mBAAiB,I,UAApE,mC,QAAf,M,2CAGrG,IAAnB7G,EAAUhM,KAAKgT,M,yBAAzC,yBAGM,MAHN,GAGM,CAFL,yBAAuN,GAA/MC,KAAK,YAAY7M,MAAM,yCAA0C,QAAO,EAAA8M,OAAQvP,KAAK,SAASqG,MAAM,kBAAkBmJ,gBAAc,OAAQC,gBAAa,uBAA2BpH,EAAUhM,KAAKqT,W,oCAC3M,yBAAyK,GAAnKjN,MAAM,SAAU6E,GAAE,uBAA2Be,EAAUhM,KAAKqT,UAAYnB,IAAG,uBAA2BlG,EAAUhM,KAAKqT,UAAY1C,MAAO,EAAA2C,UAAYC,OAAO,G,mEAInK,yBAgCe,GAhCAC,eAAe,EAAOC,aAAa,EAAMrN,MAAM,wBAAwB8L,IAAI,kB,+BACzF,iBAIM,CAJN,yBAIM,MAJN,GAIM,CAHL,GACA,GACA,yBAAiC,GAAxBvO,KAAK,aAGf,yBAwBM,MAxBN,GAwBM,CAvBL,yBAsBO,QAtBD+P,aAAa,MAAO,SAAM,4DAAU,EAAAC,6BAAA,EAAAA,4BAAA,qBAA2B,cAAEvN,MAAM,kB,CAC5E,yBAeM,MAfN,GAeM,CAdL,yBAaO,OAbP,GAaO,CAZN,yBAUW,GAVD6E,GAAG,8B,WAAuC,EAAA2I,0B,qDAAA,EAAAA,0BAAyB,IAAGtI,QAAS,EAAAuI,eAAgBC,YAAY,U,CACzG7O,MAAK,sBACf,SADyB,GACzB,YADyB,CACd8O,EAAS9O,O,yBAApB,yBAEM,sCADH8O,EAAS9O,MAAM+O,OAAOC,OAAO,IAAC,6BAAEF,EAAS9O,MAAM+O,OAAOE,IAAG,MAAWH,EAAS9O,MAAM+O,OAAOE,IAAG,IAAO,IAAC,uCAAEH,EAAS9O,MAAMtB,KAAI,UAArB,aAAE,EAAwBwQ,MAAI,K,yBAEtI,yBAAwB,SAAZ,UAEFC,OAAM,sBAChB,SAD0B,GAC1B,YAD0B,CAC1B,yBAAsJ,wCAA/IL,EAASK,OAAOJ,OAAOC,OAAO,IAAC,6BAAEF,EAASK,OAAOJ,OAAOE,IAAG,MAAWH,EAASK,OAAOJ,OAAOE,IAAG,IAAO,IAAC,uCAAEH,EAASK,OAAOzQ,KAAI,UAAtB,aAAE,EAAyBwQ,MAAI,O,iCAGhJ,OAIF,GACA,yBAEM,MAFN,GAEM,CADL,yBAAiG,GAAzFxQ,KAAK,SAASqG,MAAM,SAAUsE,QAAS,EAAA+F,mBAAoBpB,KAAK,cAAc7M,MAAM,I,iDAMjG,yBAEM,MAFN,GAEM,CADL,yBAAgE,GAA/CkO,QAAStI,EAAUhM,KAAO,QAAO,EAAAuU,Y,sCAGY,iBAA3C,EAAApH,MAAMkD,KAAKtB,MAAMuB,QAAQC,oB,yBAA9C,yBASW,uBARV,GAGA,yBAIM,MAJN,GAIM,CAHL,GACA,yBAAoJ,GAA5InK,MAAM,+BAA+BzC,KAAK,SAASqG,MAAM,gBAAiB,QAAK,iCAAE,EAAAgI,MAAK,sBAAwB,EAAAwC,gBAAgBnB,eACtI,M,+BAID,yBAEM,MAFN,GAEM,CADL,U,8BArGH,iBAA2B,CAA3B,yBAA2B,GAAlBoB,UAAU,IACnB,yBAA2E,GAAnEpJ,MAAM,gBAAgBN,OAAO,YAAae,UAAU,IAC5D,yBAA0E,GAAlET,MAAM,eAAeN,OAAO,YAAae,UAAU,IAC3D,yBAA6E,GAArET,MAAM,iBAAiBN,OAAO,aAAce,UAAU,IAC9D,yBAIS,GAJDT,MAAM,aAAaN,OAAO,QAASe,UAAU,G,CACzCC,KAAI,sBACd,SADyB,GACzB,MADyB,CACzB,yBAA0D,yCAAlD,EAAA2I,eAAe1I,EAAUhM,KAAK2U,aAAU,O,MAGlD,yBAIS,GAJDtJ,MAAM,mBAAmBN,OAAO,SAAUe,UAAU,G,CAChDC,KAAI,sBACd,SADyB,GACzB,MADyB,CACzB,yBAAgE,yCAAxD,EAAA2I,eAAe1I,EAAUhM,KAAK4U,mBAAgB,O,MAGxD,yBAIS,GAJDvJ,MAAM,mBAAmBN,OAAO,SAAUe,UAAU,G,CAChDC,KAAI,sBACd,SADyB,GACzB,MADyB,CACzB,yBAAgE,yCAAxD,EAAA2I,eAAe1I,EAAUhM,KAAK6U,mBAAgB,O,MAGxD,yBAIS,GAJDxJ,MAAM,gBAAgBN,OAAO,YAAae,UAAU,G,CAChDC,KAAI,sBACd,SADyB,GACzB,MADyB,CACzB,yBAA6D,yCAArD,EAAA2I,eAAe1I,EAAUhM,KAAK8U,gBAAa,O,MAGrD,yBASS,GATDzJ,MAAM,OAAON,OAAO,OAAO3E,MAAM,cAAe0F,UAAU,G,CACtDC,KAAI,sBACd,SADyB,GACzB,MADyB,CACK,IAAnBC,EAAUhM,KAAKgT,M,yBAA1B,yBAAwH,G,MAAlF5M,MAAM,8BAA8B2O,SAAS,UAAU9P,MAAM,iBAChE,IAAnB+G,EAAUhM,KAAKgT,M,yBAA/B,yBAA6H,G,MAAlF5M,MAAM,4BAA4B2O,SAAS,SAAS9P,MAAM,oBAClE,IAAnB+G,EAAUhM,KAAKgT,M,yBAA/B,yBAA6H,G,MAAlF5M,MAAM,gCAAgC2O,SAAS,UAAU9P,MAAM,oBACvE,IAAnB+G,EAAUhM,KAAKgT,M,yBAA/B,yBAAmH,G,MAAxE5M,MAAM,gCAAgC2O,SAAS,SAAS9P,MAAM,WACtE,IAAnB+G,EAAUhM,KAAKgT,M,yBAA/B,yBAAkH,G,MAAvE5M,MAAM,4BAA4B2O,SAAS,SAAS9P,MAAM,cAClE,IAAnB+G,EAAUhM,KAAKgT,M,yBAA/B,yBAA+L,G,MAApJ5M,MAAM,oCAAoC2O,SAAS,SAAU9P,MAAK,oBAAe+G,EAAUhM,KAAKgV,MAAQhJ,EAAUhM,KAAKgV,KAAI,e,4MCxHrK5O,MAAM,kB,IAEPb,IAAI,IAAIa,MAAM,W,IACbA,MAAM,c,IAYPb,IAAI,IAAIa,MAAM,W,IAGOA,MAAM,kB,IACFA,MAAM,U,IACHA,MAAM,Y,cAGF,yBAAgB,YAAV,OAAG,G,UAEHA,MAAM,wB,GAIhB,yBAA0C,MAAtCA,MAAM,SAAQ,uBAAmB,G,IAG5BA,MAAM,4B,IACDA,MAAM,iB,GAER,yBAAyD,SAAlDqL,IAAI,2BAA0B,gBAAY,G,UAShErL,MAAM,U,IAMVA,MAAM,0B,IAEEA,MAAM,W,IAINA,MAAM,W,IAINA,MAAM,U,IAINA,MAAM,U,yBAWnB,yBAA0D,MAAtDA,MAAM,wBAAuB,wBAAoB,G,IAClDA,MAAM,mB,IACLA,MAAM,iB,GACV,yBAAiG,MAA7FA,MAAM,iBAAgB,sEAAkE,G,cAG5F,yBAA+F,MAA3FA,MAAM,eAAc,sEAAkE,G,GAC1F,yBAAM,mB,GAAyG,yBAAM,mB,+xBAlFzI,yBAuFM,MAvFN,GAuFM,CAtFR,yBAqFa,iBArFDrC,KAAK,OAAOoB,KAAK,U,+BAC5B,iBAYM,CAZ6B,EAAA8P,gB,yBAAnC,yBAYM,MAZN,GAYM,CAXL,yBAUM,MAVN,GAUM,CATL,yBAAgD,GAAtC7O,MAAM,SAASoL,MAAM,QAC/B,yBAAgD,GAAtCpL,MAAM,SAASoL,MAAM,QAC/B,yBAAgD,GAAtCpL,MAAM,SAASoL,MAAM,QAC/B,yBAAgD,GAAtCpL,MAAM,SAASoL,MAAM,QAC/B,yBAAgD,GAAtCpL,MAAM,SAASoL,MAAM,QAC/B,yBAAgD,GAAtCpL,MAAM,SAASoL,MAAM,QAC/B,yBAAiD,GAAvCpL,MAAM,SAASoL,MAAM,SAC/B,yBAAgD,GAAtCpL,MAAM,SAASoL,MAAM,QAC/B,yBAAiC,GAAvBA,MAAM,c,yBAGlB,yBAsEM,MAtEN,GAsEM,CArEU,EAAA0D,UAAU1U,OAAM,G,yBAA/B,yBAwDU,G,MAxD4B,YAAY,EAAA2U,iBAAmBxK,YAAY,G,+BACtE,iBAA6B,E,2BAAvC,yBAsDW,2CAtDkB,EAAAuK,WAAS,SAArB7I,G,gCAAjB,yBAsDW,GAtD8BtB,OAAQ,EAAAqK,kBAAkB/I,GAAY9G,IAAK8G,EAASgJ,U,+BAC1E,iBA8BM,CA9BN,yBA8BM,MA9BN,GA8BM,CA7BF,yBAwBM,MAxBN,GAwBM,CAvBF,yBAOK,KAPL,GAOK,CAND,yBAAiC,QAA3B,UAAQ,EAAAC,iBAAe,sB,MACV3D,SAAStF,EAASkJ,a,yBAArC,yBAIO,WAHH,GACuD,iBAA3C,EAAApI,MAAMkD,KAAKtB,MAAMuB,QAAQC,mB,sDAArC,yBAA2V,Q,MAA/QnK,MAAM,gCAAgF,QAAK,8BAAE,EAAAoP,0BAAA,EAAAA,yBAAA,sB,6DAAkCC,kBAAkBC,OAAqC,IAAhC,EAASD,kBAAkBC,MAAK,YAA2BD,kBAAkBC,MAAK,iC,UAAnL,oC,QAAf,O,yBAClH,yBAAyK,OAAzK,GAAyK,+BAAvHD,kBAAkBC,OAAqC,IAAhC,EAASD,kBAAkBC,MAAK,YAA2BD,kBAAkBC,MAAK,W,yCAGnK,yBAce,GAdA,OAAI,mBAAE,EAAAC,mBAAqBtJ,EAASqJ,OAAQlC,eAAe,EAAOC,aAAa,EAAMrN,MAAM,wBAAyB8L,IAAG,6BAAwB7F,EAASgJ,W,+BACnK,iBAA0C,CAA1C,GAEA,yBAUO,QAVD3B,aAAa,MAAO,SAAM,0DAAU,EAAAkC,mBAAA,EAAAA,kBAAA,qBAAiB,cAAExP,MAAM,kB,CAC/D,yBAKM,MALN,GAKM,CAJF,yBAGO,OAHP,GAGO,CAFH,yBAA6F,GAAhFyP,YAAA,GAAY5K,GAAG,yB,WAAkC,EAAA0K,mB,qDAAA,EAAAA,mBAAkB,IAAGG,IAAK,G,uBACxF,OAIR,yBAAiC,GAAxBnS,KAAK,WACd,yBAAkG,GAA1FA,KAAK,SAASqG,MAAM,SAAUsE,QAAS,EAAAyH,oBAAqB9C,KAAK,cAAc7M,MAAM,I,6DAIrEuL,SAAStF,EAASkJ,a,yBAAtD,yBAGM,MAHN,GAGM,CAFF,yBAAyL,GAAjLtC,KAAK,YAAY7M,MAAM,yCAAyCzC,KAAK,SAASqG,MAAM,iBAAkB,QAAO,EAAAkJ,OAAQC,gBAAc,OAAOC,gBAAc,yB,oBAChK,yBAAsI,GAAhIhN,MAAM,SAAS6E,GAAG,wBAAyBiH,IAAG,wBAA4B7F,EAASgJ,SAAW1E,MAAO,EAAA2C,UAAYC,OAAO,G,8DAItI,yBAoBM,MApBN,GAoBM,CAnBc,EAAA/M,mB,yBAAhB,yBAgBW,uBAfP,yBAEM,MAFN,GAEM,CADF,yBAA+C,GAAtB6F,SAAUA,GAAQ,uBAG/C,yBAEM,MAFN,GAEM,CADF,yBAAuE,GAAxC7F,kBAAmB,EAAAA,mBAAiB,gCAGvE,yBAEM,MAFN,GAEM,CADF,yBAA8D,GAAxCA,kBAAmB,EAAAA,mBAAiB,gCAG9D,yBAEM,MAFN,GAEM,CADF,yBAA+D,GAAxCA,kBAAmB,EAAAA,mBAAiB,iC,4CAInE,yBAAwC,GAAtB6F,SAAUA,GAAQ,2B,sFAIhD,yBAWM,UAVS,EAAAlJ,O,yBAAX,yBAKM,UAJF,GACA,yBAAiE,IAAjE,GAAiE,CAAtC,yBAAkC,GAAf8P,KAAK,YACnD,yBAAwC,KAAxC,GAAwC,6BAAZ,EAAA9P,OAAK,GACjC,O,yBAEJ,yBAGM,UAFF,GACA,GAAM,yBAAyG,GAAjGiD,MAAM,+BAA+BzC,KAAK,SAASqG,MAAM,gBAAiB,QAAO,EAAAgM,c,oBAAgB,gB,yBChFvI,QAAOlO,OAAS,GAED,e,aCIA,kBAAgB,CAC3B/D,KAAM,UACNkS,WAAY,CACRC,mBAEJ5J,MAAO,WACH,IAAMa,EAAQ,oBAAO,SACfgJ,EAAWhJ,EAAciJ,gBAAgB,eAC/CvC,EAAkB1G,EAAckD,KAAKtB,MAAMuB,QAAQ+F,cAEnD,MAAO,CACHlJ,QACAgJ,UACTtC,mBAGFhN,MAAO,CACNgJ,eAAgByG,QAChB1G,qBAAsB2G,OAEpBvW,KAAM,WACF,MAAO,CACZmD,MAAO,KACP8O,iBAAkBjL,KAAK6I,eACvBwE,oBAAoB,EACpBT,0BAA2B,KAClBY,gBAAiB,KAC1B/B,aAAc,GACLf,uBAAwB1K,KAAK4I,qBAC7BjE,QAAS,CACLyB,OAAQ,CAAEnI,MAAO,KAAMoI,UAAW,QAAgBC,aAI9D9E,SAAU,CACN+J,SAAU,sBACN,OAAOvL,KAAKmG,MAAM2B,QAAQ0H,aACtB,SAACrU,GAAD,OACI,EAAKuP,uBAAuBC,SAASxP,EAAE6Q,OACtC,EAAKf,kBAAoB9P,EAAE6Q,OAAS,QAAYyD,eAGnEnD,UAAW,WACV,IAAMoD,EAAQ,CACb,CACC1M,MAAO,cACQiJ,KAAM,aACN0D,QAAS3P,KAAK4P,gBAiB/B,MAbwD,iBAArD5P,KAAKmG,MAAMkD,KAAKtB,MAAMuB,QAAQC,oBAChCmG,EAAMG,QAAQ,CACb7M,MAAO,YACPiJ,KAAM,aACN0D,QAAS3P,KAAK8P,kBAEf,CACC9M,MAAO,YACPiJ,KAAM,cACN0D,QAAS3P,KAAK+P,uBAITL,IAGN5P,QAAS,CACXoM,OADW,SACJ7P,GACG2D,KAAKgQ,MAAL,8BAAkChQ,KAAKwN,gBAAgBnB,YAAaH,OAAO7P,GACpFA,EAAM4T,mBAEP1C,WALW,SAKApR,GACV6D,KAAK7D,MAAQA,GAERwQ,4BARK,SAQuBtQ,GAAU,gLAE1B,EAAKmR,gBAAgB3B,qBAArB,UAA2C,EAAKe,iCAAhD,aAA2C,EAAgC3I,MAAM,EAAK2I,0BAF5D,wBAGzC,EAAKzG,MAAMU,OAAX,2CAAsD,EAAK2G,gBAAgBnB,UAA3E,4CAA8G,EAAKO,iCAAnH,aAA8G,EAAgC3I,KAE/H,EAAKiM,UAAUjD,QACf,EAAKI,oBAAqB,EANA,SAQL,EAAKlH,MAAM2B,QAAQqI,YACpC,EAAK3C,gBAAgBnB,UACrB,EAAKmB,gBAAgB3B,mBAVC,UAQpBxR,EARoB,QAatBA,EAbwB,CAAF,iCAchB,EAAK8L,MAAM2B,QAAQsI,MAAM,EAAK5C,gBAAgBnB,UAA9C,UAAyD,EAAKO,iCAA9D,aAAyD,EAAgC3I,IAdzE,QAgB1B,EAAK+L,MAAMK,eAAenE,OAAO7P,GACjC,EAAKgR,oBAAqB,EAC1B,EAAK6C,UAAUI,SAlBW,6DAqB9B,EAAKjD,oBAAqB,EACtC9R,QAAQE,OAAR,MAtB0C,6DAyB5CsQ,qBAjCW,SAiCU1P,GACX2D,KAAKgQ,MAAMK,eAAenE,OAAO7P,IAE3CyP,4BApCW,SAoCiBwB,GAClB,IAAIzC,EAAU,uBAAH,OAA0B7K,KAAKmP,QAAQ1F,MAMlD,OAJIzJ,KAAKmP,QAAQoB,QAAO1F,GAAW,KAAJ,OAAS7K,KAAKmP,QAAQoB,MAAtB,MAC3BjD,EAAQkD,eAAc3F,GAAW,MAAJ,OAAUyC,EAAQkD,eAC/ClD,EAAQmD,eAAc5F,GAAW,MAAJ,OAAUyC,EAAQmD,eAE5C5F,GAEXC,wBA7CK,SA6CmB4F,GACpB,OAAO1Q,KAAKmG,MAAM2B,QAAQC,MAAMC,SAAS9H,QAAO,SAAC/E,GAC7C,OAAOA,EAAE6Q,OAAS0E,KACnBlX,QAEPoR,WAlDK,SAkDM8F,GAChB,IAAMhO,EAAQ1C,KAAK0K,uBAAuBiG,QAAQD,GAClDhO,GAAS,EAAI1C,KAAK0K,uBAAuBhQ,OAAOgI,EAAO,GAAK1C,KAAK0K,uBAAuB5Q,KAAK4W,GAE7F1Q,KAAKgL,MAAM,aAAc0F,IAEpBhD,eAxDK,SAwDUkD,GACX,IAAMC,EAAU,IAAIC,KAAKF,GAEzB,GAAa,OAATA,GAA2C,IAA1BC,EAAQE,cACzB,OAAOF,EAAQG,WAAa,EAAI,IAAMH,EAAQI,UAAY,IAAMJ,EAAQE,eAEhFjB,iBA9DK,WA+DD9P,KAAKgL,MAAM,eAAgBhL,KAAKwN,gBAAgB3B,oBAEpDkE,qBAjEK,WAkEV/P,KAAKgL,MAAM,mBAAoBhL,KAAKwN,gBAAgB3B,oBAE/C+D,cApEK,WAqED5P,KAAKgL,MAAM,gBAAiBhL,KAAKwN,kBAErChC,YAvEK,SAuEOnP,GAAU,WAClB2D,KAAKwN,gBAAkBxN,KAAKmG,MAAM2B,QAAQoJ,IAAI7U,EAAMrD,KAAKqT,WAClErM,KAAK4M,0BAA4B5M,KAAK6M,eAAe3M,QAAO,SAACiR,GAAD,OAAwB,EAAK3D,gBAAgB3B,kBAAkBuF,WAAWD,EAAIlN,OAAK,GAC/IjE,KAAKmG,MAAMkL,gBAAgB,kBAAmBrR,KAAKwN,qBCnJtD,GAAO1M,OAAS,GAED,U,2BCJd,yBAEM,OAFD1B,MAAM,eAAa,CACvB,yBAA2D,OAAtDgI,IAAI,OAAOlL,IAAA,S,OAEZkD,MAAM,iB,IACLA,MAAM,uB,IACFA,MAAM,U,+LALhB,GAGA,yBAMM,MANN,GAMM,CALL,yBAIM,MAJN,GAIM,CAHL,yBAES,SAFT,GAES,C,4BADR,yBAA0H,GAAnD6M,KAAK,aAAa1E,KAAK,QAASvE,MAAO,EAAAsO,U,uCAA5E,EAAAC,UAAS,KAAU,EAAAA,UAAS,S,SAAtD,a,kBAUG,kBAAgB,CAC9BxU,KAAM,YACNuI,MAF8B,WAG7B,IAAMa,EAAQ,oBAAO,SACfqL,EAAerL,EAAMkD,KAAKtB,MAAMuB,QAAQmI,aAC1CF,EAAY,KACZD,EAAW,KAEf,IAAgB,OAAZE,QAAY,IAAZA,OAAA,EAAAA,EAAczU,KAAKvD,QAAS,EAAG,CAClC,IAAMkY,EAAO,OAAIF,QAAJ,IAAIA,OAAJ,EAAIA,EAAczU,KAAK,GAAG4U,QAEvB,OAAZH,QAAY,IAAZA,OAAA,EAAAA,EAAczU,KAAK,GAAG6U,MAAMpY,QAAS,IAAG+X,EAAYC,EAAazU,KAAK,GAAG6U,MAAM,IAE/EL,IAAWD,EAAWC,EAAU,IAChCG,IAAUJ,GAAYI,EAAS,IAGpC,MAAO,CACNH,YACAD,eCjCH,GAAOxQ,OAAS,GAED,U,ICFE1B,MAAM,kB,IACFA,MAAM,Y,IAcKA,MAAM,qB,IACPA,MAAM,wB,IAKpBA,MAAM,yB,IACFA,MAAM,Y,GAKK,yBAAyB,YAAnB,gBAAY,G,GAId,yBAAmC,MAA/BA,MAAM,cAAa,WAAO,G,GAQ9B,yBAAmC,MAA/BA,MAAM,cAAa,WAAO,G,GAY9B,yBAAyC,MAArCA,MAAM,cAAa,iBAAa,G,GAWxC,yBAAoB,YAAd,WAAO,G,eAKDA,MAAM,c,UAMjBA,MAAM,gE,GACP,yBAEM,OAFDA,MAAM,sBAAoB,CAC3B,yBAA+C,MAA3CA,MAAM,cAAa,yB,MAG3B,yBAQM,OARDA,MAAM,uBAAqB,CAC5B,yBAMQ,SANDD,KAAK,QAAQC,MAAM,qB,CACtB,yBAIQ,SAJDD,KAAK,WAAWC,MAAM,qB,CACzB,yBAEK,MAFDD,KAAK,MAAMG,QAAQ,M,CACnB,yBAAuE,MAAnEH,KAAK,OAAOC,MAAM,OAAOE,QAAQ,MAAK,oC,MAU1D,yBAAsB,YAAhB,aAAS,G,GAIX,yBAAmC,MAA/BF,MAAM,cAAa,WAAO,G,UAeoEA,MAAM,gE,IACvGA,MAAM,sB,IACHA,MAAM,c,IAGTA,MAAM,uB,IACAD,KAAK,QAAQC,MAAM,qB,IAEdD,KAAK,MAAMG,QAAQ,M,IACfH,KAAK,OAAOC,MAAM,OAAOE,QAAQ,M,UAO7CF,MAAM,0C,IACTA,MAAM,sB,IACHA,MAAM,c,IAGTA,MAAM,uB,IACAD,KAAK,QAAQC,MAAM,qB,wXAvI1D,yBAiJO,GAjJDA,MAAM,kBAAgB,CACbyL,QAAO,sBACd,iBAoBM,CApBN,yBAoBM,MApBN,GAoBM,CAnBF,yBAkBM,MAlBN,GAkBM,CAjBF,yBAgBO,GAhBDzL,MAAM,WAAS,CACwByL,QAAO,sBAC5C,6BAES,CAFiC,YAA5B,YAAAsE,eAAA,mBAAS0C,cAAT,eAAiBxR,gB,yBAA/B,yBAES,G,MAFkDjB,MAAM,oEAAoEmI,KAAK,SAASuK,MAAM,U,+BACrJ,iBAAkC,CAAlC,yBAAkC,GAAf7F,KAAK,c,OAEmB,UAA5B,YAAAkD,eAAA,mBAAS0C,cAAT,eAAiBxR,gB,yBAApC,yBAES,G,MAFqDjB,MAAM,kEAAkEmI,KAAK,SAASuK,MAAM,U,+BACtJ,iBAAiC,CAAjC,yBAAiC,GAAd7F,KAAK,a,iCAE5B,yBAES,G,MAFM7M,MAAM,0DAA0DmI,KAAK,SAASuK,MAAM,U,+BAC/F,iBAAuC,CAAvC,yBAAuC,GAApB7F,KAAK,mB,WAGrB8F,OAAM,sBACb,6BAA6D,CAA7D,yBAA6D,KAA7D,GAA6D,uCAA7B,EAAA5C,eAA6B,iBAA7B,EAASpS,KAAI,UAAgB,aAA7B,EAAkBoQ,MAAI,GACtD,yBAAuF,IAAvF,GAAuF,6BAArD,EAAA6E,KAAK,aAAU,uCAAE,EAAA7C,eAAF,iBAAE,EAAS0C,cAAX,aAAE,EAAiBxR,eAAW,O,UAK/F,yBAwHM,MAxHN,GAwHM,CAvHF,yBAsHM,MAtHN,GAsHM,CArHF,yBAoHY,GApHA4R,UAAU,GAAK,C,8BACvB,iBAkCe,CAlCf,yBAkCe,QAjCAlO,OAAM,sBACb,iBAA8D,CAA9D,yBAA8D,GAA3C3E,MAAM,uBAAuB6M,KAAK,SACrD,O,8BAEJ,yBAMY,CANZ,yBAMY,GANA/H,YAAY,EAAOjG,MAAO,EAAAiU,aAAc9S,MAAM,wEAAwEgF,iBAAiB,U,CACpIL,OAAM,sBACb,iBAAmC,CAAnC,O,8BAEJ,iBAAsB,CAAtB,yBAAsB,GAAdM,MAAM,QACd,yBAAqC,GAA7BjF,MAAM,OAAOiF,MAAM,c,mBAGK,YAAA8K,eAAA,eAASgD,QAAQ3Y,QAAM,G,yBAA3D,yBAUY,G,MAVA0K,YAAY,EAA0CjG,MAAO,EAAAkR,QAAQgD,QAAS/S,MAAM,6CAA6CgF,iBAAiB,U,CAC/IL,OAAM,sBACb,iBAAmC,CAAnC,O,8BAEJ,iBAES,CAFT,yBAES,GAFDM,MAAM,OAAK,CACJU,KAAI,sBAAa,SAAF,GAAE,MAAF,C,0DAAI,EAAAqN,sBAAsBpN,EAAUhM,KAAKqZ,MAAG,O,MAE1E,yBAES,GAFDjT,MAAM,OAAOiF,MAAM,W,CACZU,KAAI,sBAAa,SAAF,GAAE,MAAF,C,0DAAIC,EAAUhM,KAAKsZ,KAAI,IAAK,KAAE,6BAAEtN,EAAUhM,KAAKuZ,MAAM,KAAE,6BAAEvN,EAAUhM,KAAKwZ,OAAO,KAAE,6BAAExN,EAAUhM,KAAKyZ,YAAU,O,qEAI1G,YAAAtD,eAAA,eAASuD,QAAQlZ,QAAM,G,yBAA3D,yBAQY,G,MARA0K,YAAY,EAA0CjG,MAAO,EAAAkR,QAAQuD,QAAStT,MAAM,6CAA6CgF,iBAAiB,U,CAC/IL,OAAM,sBACb,iBAAyC,CAAzC,O,8BAEJ,iBAES,CAFT,yBAES,GAFDM,MAAM,UAAQ,CACPU,KAAI,sBAAa,SAAF,GAAE,MAAF,C,0DAAI,EAAAqN,sBAAsBpN,EAAUhM,KAAK2Z,SAAM,O,MAE7E,yBAAqC,GAA7BvT,MAAM,OAAOiF,MAAM,c,oEAGnC,yBA6Be,QA5BAN,OAAM,sBACb,iBAAsE,CAAtE,yBAAsE,GAAnD3E,MAAM,uBAAuB6M,KAAK,iBACrD,O,8BAEJ,uBAQM,EARK,YAAA2G,QAAQvJ,KAAKtB,MAAMuB,QAAQ+F,qBAA3B,eAA0C7V,QAAM,G,yBAA3D,yBAQM,W,2BAPF,yBAMY,2CAN+B,EAAAoZ,QAAQvJ,KAAKtB,MAAMuB,QAAQ+F,eAAa,SAA9CwD,G,gCAArC,yBAMY,GANA3O,YAAY,EAA8D3F,IAAKsU,EAAG5O,GAAKhG,MAAO,EAAA6U,uBAAuBD,GAAKzT,MAAM,6CAA6CgF,iBAAiB,U,CAC3LL,OAAM,sBACb,iBAAiG,CAAjG,yBAAiG,KAAjG,GAAiG,uCAArE8O,EAAG7F,OAAOC,OAA2D,OAAnD4F,EAAG7F,OAAOE,IAAG,MAAW2F,EAAG7F,OAAOE,IAAG,Y,8BAEvF,iBAAsB,CAAtB,yBAAsB,GAAd7I,MAAM,QACd,yBAAqC,GAA7BjF,MAAM,OAAOiF,MAAM,c,2DAGnC,yBAcM,MAdN,GAcM,CAbF,GAIA,U,MAWR,yBAYe,QAXAN,OAAM,sBACb,iBAAsE,CAAtE,yBAAsE,GAAnD3E,MAAM,uBAAuB6M,KAAK,iBACrD,O,8BAEJ,iBAMY,CANZ,yBAMY,GANA/H,YAAY,EAAOjG,MAAO,EAAA8U,UAAW3T,MAAM,6CAA6CgF,iBAAiB,U,CACtGL,OAAM,sBACb,iBAAmC,CAAnC,O,8BAEJ,iBAAqB,CAArB,yBAAqB,GAAbM,MAAM,QACd,yBAAqC,GAA7BjF,MAAM,OAAOiF,MAAM,c,wDAGnC,yBAoCe,2CApCc,EAAA2O,OAAK,SAAbC,G,gCAArB,yBAoCe,GApCsB1U,IAAK0U,EAAKlW,M,CAChCgH,OAAM,sBACb,iBAIgC,CAJhC,yBAIgC,GAJb3E,MAAM,uBAAwB6M,KAAqD,cAAT,EAAK,KAAI,YAAgF,kBAAT,EAAK,KAAI,UAAkF,gBAAT,EAAK,KAAI,0B,yCAKxQ,yBAA0B,yCAAlBgH,EAAKlW,MAAI,O,8BAErB,iBAcM,CAdKkW,EAAKja,OAA0B,IAAhBia,EAAKja,KAAKQ,QAAgByZ,EAAKja,KAAI,GAAIka,aAAgC,IAAhBD,EAAKja,KAAKQ,S,yBAA3F,yBAcM,MAdN,GAcM,CAbF,yBAEM,MAFN,GAEM,CADF,yBAAgD,KAAhD,GAAuB,UAAO,6BAAEyZ,EAAKlW,MAAI,KAG7C,yBAQM,MARN,GAQM,CAPF,yBAMQ,QANR,GAMQ,CALJ,yBAIQ,SAJDoC,KAAK,WAAWC,MAAM,oBAAqB6E,GAAE,mBAAuBgP,EAAKlW,M,CAC5E,yBAEK,KAFL,GAEK,CADD,yBAA4E,KAA5E,GAA0C,aAAU,6BAAEkW,EAAKlW,MAAM,SAAM,M,2CAO3F,yBAUM,MAVN,GAUM,CATF,yBAEM,MAFN,GAEM,CADF,yBAAgD,KAAhD,GAAuB,UAAO,6BAAEkW,EAAKlW,MAAI,KAG7C,yBAIM,MAJN,GAIM,CAHF,yBAEQ,QAFR,GAEQ,CADJ,yBAAwF,SAAjFoC,KAAK,WAAWC,MAAM,oBAAqB6E,GAAE,mBAAuBgP,EAAKlW,M,uFCpIzG,I,gFAAA,eAAgB,CAC3BA,KAAM,aACNuI,MAAO,WACH,MAAO,CACHsN,QAAS,oBAAO,WAGxB5Z,KAP2B,WAOvB,YACA,MAAO,CACHga,MAAO,CACH,CACIjW,KAAM,YACN/D,KAAI,QAAG,EAAAgH,KAAK4S,QAAgBvJ,KAAKtB,MAAMuB,QAAQ6J,iBAA3C,aAAG,EAAmDjT,QAAO,SAACkT,GAAD,MAA0B,YAAbA,EAAEC,UAChFC,YAAY,GAEhB,CACIvW,KAAM,gBACN/D,KAAI,QAAG,EAAAgH,KAAK4S,QAAgBvJ,KAAKtB,MAAMuB,QAAQiK,qBAA3C,aAAG,EAAuDrT,QAAO,SAACkT,GAAD,MAA0B,YAAbA,EAAEC,UACpFC,YAAY,GAEhB,CACIvW,KAAM,cACN/D,KAAI,QAAG,EAAAgH,KAAK4S,QAAgBvJ,KAAKtB,MAAMuB,QAAQkK,mBAA3C,aAAG,EAAqDtT,QAAO,SAACkT,GAAD,MAA0B,YAAbA,EAAEC,UAClFC,YAAY,GAEhB,CACIvW,KAAM,WACN/D,KAAI,QAAG,EAAAgH,KAAK4S,QAAgBvJ,KAAKtB,MAAMuB,QAAQmK,gBAA3C,aAAG,EAAkDvT,QAAO,SAACkT,GAAD,MAA0B,YAAbA,EAAEC,UAC/EC,YAAY,IAGpBnE,QAAUnP,KAAK4S,QAAgBvJ,KAAKtB,MAAMuB,QAAQoK,UAG1DC,QAlC2B,WAkCpB,WACH3T,KAAKgT,MAAMY,SAAQ,SAACX,GAAa,QACzBA,EAAKja,OAAQ,UAAAia,EAAKja,KAAK,UAAV,mBAAc6a,aAAd,eAAqBra,QAAS,GAAG,EAAKsa,sBAAsBb,EAAKlW,KAAMkW,EAAKja,KAAK,GAAG6a,MAAOZ,EAAKK,gBAGzH9R,SAAU,CACNwQ,IADM,WACH,MACO+B,EAAQ,IAAIjD,KACZkD,EAAY,IAAIlD,KAAJ,UAAS9Q,KAAKmP,eAAd,aAAS,EAAc6E,WACnChC,EAAM+B,EAAMhD,cAAgBiD,EAAUjD,cACtCzT,EAAIyW,EAAM/C,WAAagD,EAAUhD,WAEvC,OAAO1T,EAAI,GAAY,IAANA,GAAWyW,EAAM9C,UAAY+C,EAAU/C,UAAae,EAAM,EAAIA,GAEnFE,aATM,WASM,MACR,MAAO,CACH,CACI3T,IAAK,YACLN,MAAK,UAAE+B,KAAKmP,eAAP,aAAE,EAAc6E,WAEzB,CACIzV,IAAK,QACLN,MAAO+B,KAAKiU,mBAAmB,iBAEnC,CACI1V,IAAK,YACLN,MAAO+B,KAAKkU,kBAAkB,qBAElC,CACI3V,IAAK,OACLN,MAAO+B,KAAKkU,kBAAkB,iBAElC,CACI3V,IAAK,YACLN,MAAO+B,KAAKkU,kBAAkB,wBAI1CnB,UAjCM,WAkCF,IAoBgC,EApB1BA,EAAY/S,KAAK4S,QAAQvJ,KAAKtB,MAAMuB,QAAQ6K,UAC5CC,EAAmB,GACrBpH,EAAM,OAAG+F,QAAH,IAAGA,OAAH,EAAGA,EAAW/F,OAAOC,OAE/B,OAAI8F,QAAJ,IAAIA,KAAW/F,OAAOE,MAAKF,GAAU,MAAJ,OAAU+F,EAAU/F,OAAOE,MAExDF,GACAoH,EAAiBta,KAAK,CAClByE,IAAK,SACLN,MAAO+O,IAIf,OAAI+F,QAAJ,IAAIA,KAAWM,QACXe,EAAiBta,KAAK,CAClByE,IAAK,SACLN,MAAO+B,KAAKoS,sBAAsBW,EAAUM,WAIvC,OAATN,QAAS,IAATA,OAAA,EAAAA,EAAWpW,KAAKnD,QAAS,IACzB4a,EAAiBta,KAAK,CAClByE,IAAK,OACLN,MAAK,UAAE8U,EAAUpW,KAAK,UAAjB,aAAE,EAAmBwQ,OAWlC,OAPa,OAAT4F,QAAS,IAATA,OAAA,EAAAA,EAAWsB,SAAS7a,QAAS,GAC7B4a,EAAiBta,KAAK,CAClByE,IAAK,WACLN,MAAO8U,EAAUsB,SAAS,GAAGA,SAAS1O,UAIvCyO,IAGftU,QAAS,CACLgU,sBADK,SACiBQ,EAAkBtb,GAAsC,IAA3Bsa,EAA2B,wDACtErV,EAAQ,+BACNyR,EAAQ,gBAAI,IAAI9I,IAAI5N,EAAKkG,QAAQqV,MAAK,SAACnB,EAAQoB,GAAT,OAAoBpB,EAAEqB,KAAK9O,QAAQ+O,cAAcF,EAAEC,KAAK9O,YAAUc,KAAI,SAAC2M,GAAD,OAAYA,EAAEqB,KAAK9O,aAErI,GAAK2N,EAaA5D,EAAMkE,SAAQ,SAACa,GAAgBxW,GAAS,uBAAJ,OAA2BwW,EAA3B,qBAbxB,CACb,IAAI3Q,EAAQ,EAEZ4L,EAAMkE,SAAQ,SAACa,GACUxW,GAAS,+BAAJ,OAAmCwW,EAAzD3Q,EAAQ,IAAM,EAAQ,QAChB,cAEVA,OAGA4L,GAA0B,IAAjBA,EAAMlW,QAAgBkW,EAAMlW,OAAS,IAAM,EAAGyE,GAAS,yCAC/DA,GAAS,QAIlB,IAAM0W,EAAqB/Y,SAASgZ,cAAT,2BAA2CN,IAClEK,IAAOA,EAAME,UAAY5W,IAEjC6U,uBAvBK,SAuBkBxF,GACnB,IAAIwH,EAAiB,GACfnY,EAAI,OAAG2Q,QAAH,IAAGA,OAAH,EAAGA,EAAS3Q,KAAK8J,KAAI,SAACvI,GAAD,gBAAeA,EAAEiP,SAAQ4H,KAAK,MACvDC,EAAS,OAAG1H,QAAH,IAAGA,OAAH,EAAGA,EAAS2H,UAAUxO,KAAI,SAACvI,GAAD,gBAAeA,EAAE8W,UAAUrP,YAAWoP,KAAK,MAuBpF,OArBA,OAAIzH,QAAJ,IAAIA,KAAS+F,QACTyB,EAAehb,KAAK,CAChByE,IAAK,SACLN,MAAO+B,KAAKoS,sBAAL,OAA2B9E,QAA3B,IAA2BA,OAA3B,EAA2BA,EAAS+F,UAI/C2B,GACAF,EAAehb,KAAK,CAChByE,IAAK,YACLN,MAAO+W,IAIXrY,GACAmY,EAAehb,KAAK,CAChByE,IAAK,OACLN,MAAOtB,IAIRmY,GAEXb,mBAnDK,SAmDc1V,GAAW,MACpB0F,EAAE,UAAGjE,KAAKmP,eAAR,aAAG,EAAc+F,WAAWhV,QAAO,SAAC5G,GAAD,eAAmB,UAAAA,EAAEqD,YAAF,mBAAQwQ,YAAR,eAAc9M,iBAAkB9B,KAC9F,OAAO0F,GAAMA,EAAGzK,OAAS,EAAIyK,EAAG,GAAGhG,MAAQ,MAE/CiW,kBAvDK,SAuDa3V,GAAW,MACnB4W,EAAG,UAAGnV,KAAKmP,eAAR,aAAG,EAAciG,UAAUlV,QAAO,SAAC/E,GAAD,OAAkBA,EAAEka,IAAIhV,cAAcsK,SAASpM,MAAM,GAC5F+W,EAAU,KAEd,GAAIH,EACA,GAAIA,EAAIC,WAAaD,EAAIC,UAAU5b,OAAS,EAAG,OACrC+b,EAASJ,EAAIC,UAAUlV,QAAO,SAAC/E,GAAD,MAA0C,gBAAxBA,EAAEka,IAAIhV,iBAAiC,GAE7F,IAAIkV,EACC,iBAAOJ,EAAIC,UAAUlV,QAAO,SAAC/E,GAAD,MAA0C,SAAxBA,EAAEka,IAAIhV,iBAA0B,UAA9E,aAAO,EAA2EmV,YAD3EF,EAAUC,MAGrB,IAAIJ,EAAIK,YAAa,OAAOL,EAAIK,YAChC,GAAIL,EAAIM,UAAW,OAAON,EAAIM,UAC1BN,EAAIO,uBAAsBJ,EAAUH,EAAIO,qBAAqBC,OAAO,IAGjF,GAAIL,EAAS,CACT,GAAIA,EAAQM,YAAYC,MAAQP,EAAQM,YAAYE,QAAS,MAAO,IAAP,OAAWR,EAAQM,YAAYC,KAA/B,aAAwCP,EAAQM,YAAYjQ,SACpH,GAAI2P,EAAQM,YAAYC,KAAM,MAAO,GAAP,OAAUP,EAAQM,YAAYC,MAC5D,GAAIP,EAAQM,YAAYjQ,QAAS,MAAO,GAAP,OAAU2P,EAAQM,YAAYjQ,SAGxE,MAAO,MAEXyM,sBA/EK,SA+EiB2D,GAClB,OAAOA,EAAOC,OAAO,GAAGC,cAAgBF,EAAO7W,MAAM,QChMjE,GAAO4B,OAAS,GAED,U,0BCHM,I,mDAmBjB,WAAYoV,GAAc,wBAR1B,KAAAtN,qBAA2C,CACvC,QAAYuN,WACZ,QAAYC,cACZ,QAAYC,cACZ,QAAYC,MACZ,QAAYC,UAIZvW,KAAKwW,OAASN,EACdlW,KAAKyW,YAAa,EAClBzW,KAAK0W,mBAAoB,EACzB1W,KAAKsH,SAAU,EACftH,KAAK2W,kBAAmB,EACxB3W,KAAK4W,WAAY,EACjB5W,KAAK6W,oBAAqB,EAC1B7W,KAAK8W,UAAYC,aAAaC,QAAb,iCAA+Cd,IAChElW,KAAK7B,KAAsE,YAA/D4Y,aAAaC,QAAb,mCAAiDd,IAA0B,UAAY,SACnGlW,KAAK8I,uBAAoG,UAA3EiO,aAAaC,QAAb,+CAA6Dd,IAC3F,IAAMe,EAAmBF,aAAaC,QAAb,6CAA2Dd,IAEjFe,IACCjX,KAAK4I,qBAAuBqO,EAAiBC,MAAM,KAAKzQ,KAAI,SAAC0Q,GAAD,OAAe3W,SAAS2W,OAErE,SAAnBnX,KAAK8W,UAAuB9W,KAAKoX,UAAYpX,KAAKqX,W,kDAGtD,WACIrX,KAAK7B,KAAqB,YAAd6B,KAAK7B,KAAqB,SAAW,UACjD4Y,aAAaO,QAAb,mCAAiDtX,KAAKwW,QAAUxW,KAAK7B,Q,6BAGzE,WACuB,SAAnB6B,KAAK8W,UAAuB9W,KAAKqX,WAAarX,KAAKoX,UACnDL,aAAaO,QAAb,iCAA+CtX,KAAKwW,QAAUxW,KAAK8W,a,iCAGvE,WACI9W,KAAK8I,wBAA0B9I,KAAK8I,uBACpCiO,aAAaO,QAAb,+CAA6DtX,KAAKwW,QAAUxW,KAAK8I,uBAAuByO,c,0BAG5G,WACIR,aAAaO,QAAb,6CAA2DtX,KAAKwW,QAAUxW,KAAK4I,qBAAqBmM,KAAK,Q,qBAGrG,WACJ,IAAMhQ,EAAOnJ,SAASgZ,cAAc,QAC9B4C,EAAe5b,SAAS6b,eAAe,cAC7CD,EAAavb,aAAa,OAAQub,EAAaE,aAAa,QAAQC,QAAQ,QAAS,SAErF5S,EAAK6S,UAAUC,OAAO,SACtB7X,KAAK8W,UAAY,OACjB/R,EAAK6S,UAAUE,IAAI,U,sBAGf,WACJ,IAAM/S,EAAOnJ,SAASgZ,cAAc,QAC9B4C,EAAe5b,SAAS6b,eAAe,cAC7CD,EAAavb,aAAa,OAAQub,EAAaE,aAAa,QAAQC,QAAQ,OAAQ,UAEpF5S,EAAK6S,UAAUC,OAAO,QACtB7X,KAAK8W,UAAY,QACjB/R,EAAK6S,UAAUE,IAAI,a,UC3ErB1Y,MAAM,wB,IAEJb,IAAI,IAAIa,MAAM,U,IACbA,MAAM,oB,IAEP+I,MAAA,uC,UAKa/I,MAAM,mB,GAGH,yBAAsD,QAAhDA,MAAM,8BAA6B,UAAM,G,UAIlDA,MAAM,mB,GAGH,yBAAqD,QAA/CA,MAAM,8BAA6B,SAAK,G,UAIjDA,MAAM,kC,GAGH,yBAAsD,QAAhDA,MAAM,8BAA6B,UAAM,G,IAI/Db,IAAI,IAAIa,MAAM,U,IACDA,MAAM,mBAAmB+I,MAAA,uB,IAGzB/I,MAAM,oB,IAGNA,MAAM,mB,IAGNA,MAAM,mB,+OAzC1B,yBA8CM,MA9CN,GA8CM,CA7CL,yBA4Ca,iBA5CDrC,KAAK,OAAOoB,KAAK,U,+BAC5B,iBA4Be,CA5BoB,EAAAmJ,S,yBA6BnC,yBAaM,MAbN,GAaM,CAZO,yBAEM,MAFN,GAEM,CADF,yBAAiD,GAAvCC,KAAK,QAAQnI,MAAM,aAEjC,yBAEM,MAFN,GAEM,CADF,yBAAkF,GAAxEA,MAAM,2BAA2BiI,OAAO,SAASmD,MAAM,UAErE,yBAEM,MAFN,GAEM,CADF,yBAAgD,GAAtCnD,OAAO,OAAOmD,MAAM,WAElC,yBAEM,MAFN,GAEM,CADF,yBAAgD,GAAtCnD,OAAO,OAAOmD,MAAM,e,yBAxC/C,yBA4Be,MA5Bf,GA4Be,CA3Bd,yBAKM,MALN,GAKM,CAJL,yBAAgF,OAA1EtO,IAAK,EAAA6b,cAAcC,OAAQ5Y,MAAM,SAASgI,IAAI,2B,gBACpD,yBAEI,IAFJ,GAEI,CADH,yBAA+F,GAA1F2G,SAAS,UAAU9B,KAAK,qB,+BAAoB,iBAAa,C,6BAAb,gBAAa,6BAAE,EAAA8L,cAAcE,WAAS,O,UAIC,iBAA3C,EAAA9R,MAAMkD,KAAKtB,MAAMuB,QAAQC,oB,yBAA5D,yBAKM,MALN,GAKM,CAJF,yBAGS,GAHA,QAAO,EAAAyF,aAAc5P,MAAM,WAAW+I,MAAA,gB,+BAC3C,iBAAuE,CAAvE,yBAAuE,GAApD8D,KAAK,SAAS7M,MAAM,gCACvC,O,8DAIsE,iBAA3C,EAAA+G,MAAMkD,KAAKtB,MAAMuB,QAAQC,oB,yBAA5D,yBAKM,MALN,GAKM,CAJF,yBAGS,GAHA2O,UAAW,EAAAC,WAAa7Q,QAAS,EAAA8Q,QAAU,QAAO,EAAAC,UAAWjZ,MAAM,WAAW+I,MAAA,gB,+BACnF,iBAAyE,CAAzE,yBAAyE,GAAtD8D,KAAK,WAAW7M,MAAM,gCACzC,O,mFAIqF,iBAA3C,EAAA+G,MAAMkD,KAAKtB,MAAMuB,QAAQC,oB,yBAA3E,yBAKM,MALN,GAKM,CAJF,yBAGS,GAHA,QAAO,EAAAyF,aAAc5P,MAAM,WAAW+I,MAAA,gB,+BAC3C,iBAAuE,CAAvE,yBAAuE,GAApD8D,KAAK,SAAS7M,MAAM,gCACvC,O,iFC5BH,GACjB,WAAY+S,EAAiBpV,GAAY,wBACrCiD,KAAKsY,UAAYnG,EACjBnS,KAAKuY,OAASxb,GCHD,GAArB,qCAEW,KAAAyb,IAAqB,GACrB,KAAAP,UAA2B,GAC3B,KAAAD,OAAwB,ICGpB,kBAAgB,CAC3Bjb,KAAM,sBACNuI,MAAO,WACH,MAAO,CACHa,MAAO,oBAAO,WAGtBtG,MAAO,CACHwI,UAAW8B,QAET5D,QAVqB,WAUd,+JACT,EAAK4I,QAAU,EAAKhJ,MAAMiJ,gBAAgB,eADjC,SAEkB,EAAKjJ,MAAM2B,QAAQ2Q,UAAU,EAAKpQ,WAFpD,OAET,EAAK0P,cAFI,OAGT,EAAKzQ,SAAU,EAHN,8CAKbtO,KAAM,WACF,MAAO,CACHof,SAAS,EACT9Q,SAAS,EACT6H,QAAS,KACT4I,cAAe,IAAI,KAG3BjY,QAAS,CACLkP,aADK,WAEDhQ,OAAO0Z,KAAK1Y,KAAK+X,cAAcS,KAC/BxY,KAAKmG,MAAMU,OAAX,0BAAqC7G,KAAK+X,cAAcS,OAEtDH,UALD,WAKU,gLAEP,EAAKlS,MAAMU,OAAX,2CAAsD,EAAKwB,UAA3D,qBAAiF,EAAK8G,QAAQwJ,QAE9F,EAAKzI,UAAUjD,QACf,EAAKmL,SAAU,EACTQ,EAAQ,IAAI,GAAM,EAAKzJ,QAAQwJ,MAAO,EAAKxJ,QAAQ1F,MANlD,SAOe,EAAKtD,MAAM2B,QAAQoJ,IAAI,EAAK7I,WAP3C,cAODiF,EAPC,iBAQmB,EAAKnH,MAAM0S,SAASC,WAAWxL,EAAQzB,mBAR1D,eAQPyB,EAAQyL,UARD,OAU0B,IAA7BzL,EAAQyL,UAAUvf,OAClBof,EAAMI,QAAN,gBAAyB,EAAK7J,QAAQoC,UAAtC,qqBAIe,EAAKwG,cAAcS,IAJlC,aAI0C,EAAKT,cAAcS,IAJ7D,uNAOAI,EAAMI,QAAN,gBAAyB,EAAK7J,QAAQoC,UAAtC,qfAE+I,EAAKwG,cAAcS,IAFlK,aAE0K,EAAKT,cAAcS,IAF7L,2NAlBG,UAwBD,EAAKrS,MAAM0S,SAASI,uBAAuBL,GAxB1C,QAyBP,EAAKR,SAAU,EACf,EAAKlI,UAAUI,SA1BR,qDA6BP/U,QAAQE,OAAR,MA7BO,8DAiCnB+F,SAAU,CACN2W,WADM,WAEF,OAAOnY,KAAKmP,QAAQyJ,QAA8C,IAArC5Y,KAAKmP,QAAQyJ,MAAMjI,QAAQ,OAAoD,IAArC3Q,KAAKmP,QAAQyJ,MAAMjI,QAAQ,SCnE9G,GAAO7P,OAAS,GAED,U,ICHR1B,MAAM,2B,IACJA,MAAM,iB,GAEX,yBAAkC,SAA3BqL,IAAI,UAAS,UAAM,G,UAEqErL,MAAM,W,IAElGA,MAAM,2B,IACJA,MAAM,iB,GAEX,yBAAwC,SAAjCqL,IAAI,aAAY,aAAS,G,UAEyErL,MAAM,W,IAG5GA,MAAM,2B,IACJA,MAAM,iB,GAEX,yBAAuC,SAAhCqL,IAAI,YAAW,aAAS,G,UAEwErL,MAAM,W,IAG1GA,MAAM,2B,IACJA,MAAM,iB,GAEX,yBAAiD,SAA1CqL,IAAI,YAAW,uBAAmB,G,UAE8BrL,MAAM,W,IAG1EA,MAAM,2B,IACJA,MAAM,iB,GAEX,yBAA0C,SAAnCqL,IAAI,cAAa,cAAU,G,UAEqCrL,MAAM,W,IAG1EA,MAAM,2B,IACJA,MAAM,iB,GAEX,yBAA6C,SAAtCqL,IAAI,eAAc,gBAAY,G,IAIlCrL,MAAM,2B,IACJA,MAAM,iB,GAEX,yBAA6C,SAAtCqL,IAAI,eAAc,gBAAY,G,UAEwErL,MAAM,W,IAGhHA,MAAM,2B,IACJA,MAAM,iB,GAEX,yBAAgD,SAAzCqL,IAAI,eAAc,mBAAe,G,IAIrCrL,MAAM,4B,IACJA,MAAM,iB,GAeX,yBAA6C,SAAtCqL,IAAI,UAAS,qBAAiB,G,IAI5BrL,MAAM,4B,IACDA,MAAM,iB,yBAcR,yBAAmD,SAA5CqL,IAAI,qBAAoB,gBAAY,G,UAEUrL,MAAM,kB,GAMzE,yBAAmC,OAA9BA,MAAM,mBAAiB,S,IACvBA,MAAM,mB,+OA1GT,yBA6GO,QA7GDsN,aAAa,MAAO,SAAM,6DAAU,EAAAwM,QAAQ,EAAAC,GAAGC,YAAQ,cAAGha,MAAM,kB,CACxE,yBAMY,MANZ,GAMY,CALX,yBAGO,OAHP,GAGO,CAFN,yBAAsQ,GAA5P6E,GAAG,SAAU,SAAM,+BAAE,EAAAoV,iBAAgB,2C,WAA2D,EAAA/L,QAAQgM,O,qDAAR,EAAAhM,QAAQgM,OAAM,IAAGhV,QAAS,EAAA6B,MAAMoT,KAAKxR,MAAMyR,OAAQ1M,YAAY,QAAQ2M,YAAY,KAAMra,MAAK,aAAiB,EAAAsa,WAAa,EAAAP,GAAG7L,QAAQgM,OAAOF,W,yCACxP,KAEa,EAAAD,GAAG7L,QAAQgM,OAAOF,UAAY,EAAAM,WAAc,EAAAP,GAAG7L,QAAQgM,OAAOK,SAASC,W,yBAArF,yBAA8I,QAA9I,GAAiH,0B,yCAElH,yBAMM,MANN,GAMM,CALL,yBAGO,OAHP,GAGO,CAFN,yBAA4T,GAAlT3V,GAAG,YAAa,SAAM,+BAAE,EAAAoV,iBAAgB,uD,WAAuE,EAAA/L,QAAQuM,Y,qDAAR,EAAAvM,QAAQuM,YAAW,IAAGvV,QAAS,EAAA6B,MAAMoT,KAAKxR,MAAM+R,UAAWC,YAAY,eAAejN,YAAY,OAAO2M,YAAY,KAAMra,MAAK,aAAiB,EAAAsa,WAAa,EAAAP,GAAG7L,QAAQuM,YAAYT,W,yCAC9S,KAEa,EAAAD,GAAG7L,QAAQuM,YAAYT,UAAY,EAAAM,WAAc,EAAAP,GAAG7L,QAAQuM,YAAYF,SAASC,W,yBAA/F,yBAA2J,QAA3J,GAA2H,6B,yCAG5H,yBAMM,MANN,GAMM,CALL,yBAGO,OAHP,GAGO,CAFN,yBAAkS,GAAxR3V,GAAG,WAAY,SAAM,+BAAE,EAAAoV,iBAAgB,uD,WAAsE,EAAA/L,QAAQ0M,W,qDAAR,EAAA1M,QAAQ0M,WAAU,IAAG1V,QAAS,EAAA6B,MAAMoT,KAAKxR,MAAMkS,SAAUnN,YAAY,UAAU2M,YAAY,QAASra,MAAK,aAAiB,EAAAsa,WAAa,EAAAP,GAAG7L,QAAQ0M,WAAWZ,W,yCACpR,KAEa,EAAAD,GAAG7L,QAAQ0M,WAAWZ,UAAY,EAAAM,WAAc,EAAAP,GAAG7L,QAAQ0M,WAAWL,SAASC,W,yBAA7F,yBAAyJ,QAAzJ,GAAyH,6B,yCAG1H,yBAMM,MANN,GAMM,CALL,yBAGO,OAHP,GAGO,CAFN,yBAA4U,GAAjUtS,QAAS,EAAA4S,iBAAkBjW,GAAG,WAAY,SAAM,+BAAE,EAAAoV,iBAAgB,uD,WAAsE,EAAA/L,QAAQ6M,W,qDAAR,EAAA7M,QAAQ6M,WAAU,IAAG7V,QAAS,EAAA6B,MAAMoT,KAAKxR,MAAMqS,SAAUtN,YAAY,UAAU2M,YAAY,QAASra,MAAK,aAAiB,EAAAsa,YAAc,EAAApM,QAAQ6M,aAAe,EAAA7M,QAAQ+M,e,mDAC1T,KAEa,EAAA/M,QAAQ6M,YAAe,EAAA7M,QAAQ+M,eAAgB,EAAAX,U,iEAA7D,yBAAuI,QAAvI,GAAyF,6CAG1F,yBAMM,MANN,GAMM,CALL,yBAGO,OAHP,GAGO,CAFN,yBAAwV,GAA7UpS,QAAS,EAAA4S,iBAAkBjW,GAAG,aAAc,SAAM,+BAAE,EAAAoV,iBAAgB,6D,WAA4E,EAAA/L,QAAQ+M,a,uDAAR,EAAA/M,QAAQ+M,aAAY,IAAG/V,QAAS,EAAA6B,MAAMoT,KAAKxR,MAAMuS,WAAYxN,YAAY,UAAU2M,YAAY,QAASra,MAAK,aAAiB,EAAAsa,YAAc,EAAApM,QAAQ6M,aAAe,EAAA7M,QAAQ+M,e,mDACtU,KAEa,EAAA/M,QAAQ6M,YAAe,EAAA7M,QAAQ+M,eAAgB,EAAAX,U,iEAA7D,yBAAwI,QAAxI,GAAyF,8CAG1F,yBAKM,MALN,GAKM,CAJL,yBAGO,OAHP,GAGO,CAFN,yBAAsP,GAA3OpS,QAAS,EAAA4S,iBAAkBjW,GAAG,cAAe,SAAM,iCAAE,EAAAoV,iBAAgB,gE,WAA+E,EAAA/L,QAAQiN,c,uDAAR,EAAAjN,QAAQiN,cAAa,IAAGjW,QAAS,EAAA6B,MAAMoT,KAAKxR,MAAMyS,YAAa1N,YAAY,W,2CAC1O,OAIF,yBAMM,MANN,GAMM,CALL,yBAGO,OAHP,GAGO,CAFN,yBAAwT,GAA9S7I,GAAG,c,WAAuB,EAAAqJ,QAAQmN,c,uDAAR,EAAAnN,QAAQmN,cAAa,IAAG,SAAM,iCAAE,EAAApB,iBAAgB,gEAAwE/U,QAAS,EAAA6B,MAAMoT,KAAKxR,MAAM2S,YAAa5N,YAAY,UAAU2M,YAAY,QAASra,MAAK,aAAiB,EAAAsa,WAAa,EAAAP,GAAG7L,QAAQmN,cAAcrB,W,yCAC1S,KAEa,EAAAD,GAAG7L,QAAQmN,cAAcrB,UAAY,EAAAM,WAAc,EAAAP,GAAG7L,QAAQmN,cAAcd,SAASC,W,yBAAnG,yBAAiK,QAAjK,GAA8H,gC,yCAG/H,yBAKM,MALN,GAKM,CAJL,yBAGO,OAHP,GAGO,CAFN,yBAAyR,GAA/Q3V,GAAG,cAAeqD,QAAS,EAAA4S,iBAAmB,SAAM,iCAAE,EAAAb,iBAAgB,yE,WAAwF,EAAA/L,QAAQqN,iB,uDAAR,EAAArN,QAAQqN,iBAAgB,IAAGrW,QAAS,EAAA6B,MAAMoT,KAAKxR,MAAM6S,eAAgB9N,YAAY,UAAU2M,YAAY,S,2CAC/Q,OAIF,yBAkBY,MAlBZ,GAkBY,CAjBX,yBAgBO,OAhBP,GAgBO,CAfN,yBAac,GAbAoB,eAAe,EAAQvT,QAAS,EAAA4S,iB,WAA2B,EAAAY,0B,uDAAA,EAAAA,0BAAyB,IAAGxW,QAAS,EAAA6B,MAAMoT,KAAKxR,MAAMgT,iBAAkBjO,YAAY,UAAW5M,QAAQ,EAAMd,MAAM,2B,CAChLnB,MAAK,sBACqB,SADV,GACU,MADV,E,2BAC1B,yBAEM,2CAF+C+G,EAAU/G,OAAK,SAAzBmP,G,gCAA3C,yBAEM,OAFDhO,MAAM,yBAA4Db,IAAK6O,EAAOyI,M,CAClF,yBAA6B,wCAAtBzI,EAAO4N,SAAO,Q,MAELhW,EAAU/G,OAA+B,IAAtB+G,EAAU/G,MAAMzE,O,iEAApD,yBACW,kCAED4T,OAAM,sBAChB,SAD2B,GAC3B,MAD2B,CAC3B,yBAEM,YADL,yBAAuC,wCAAhCpI,EAAUoI,OAAO4N,SAAO,S,2CAIlC,OAII,yBAkBM,MAlBN,GAkBM,CAjBF,yBAeO,OAfP,GAeO,CAdH,yBAYW,GAZD/W,GAAG,oB,WAA6B,EAAAgX,yB,uDAAA,EAAAA,yBAAwB,IAAG3W,QAAS,EAAA6B,MAAMkD,KAAKtB,MAAMuB,QAAQ+F,cAAevC,YAAY,U,CACnH7O,MAAK,sBACZ,SADuB,GACvB,YADuB,CACZ+G,EAAU/G,O,yBAArB,yBAEM,sCADA+G,EAAU/G,MAAM+O,OAAOC,OAAO,IAAC,6BAAEjI,EAAU/G,MAAM+O,OAAOE,IAAG,MAAWlI,EAAU/G,MAAM+O,OAAOE,IAAG,IAAO,IAAC,uCAAElI,EAAU/G,MAAMtB,KAAI,UAAtB,aAAE,EAAyBwQ,MAAI,K,yBAE7I,yBAEM,SAFM,YAILC,OAAM,sBACb,SADwB,GACxB,YADwB,CACxB,yBAA0J,wCAAnJpI,EAAUoI,OAAOJ,OAAOC,OAAO,IAAC,6BAAEjI,EAAUoI,OAAOJ,OAAOE,IAAG,MAAWlI,EAAUoI,OAAOJ,OAAOE,IAAG,IAAO,IAAC,uCAAElI,EAAUoI,OAAOzQ,KAAI,UAAvB,aAAE,EAA0BwQ,MAAI,O,iCAG1J,K,UAEU,EAAA8N,gC,OAAA,EAA0BhX,KAAM,EAAAyV,U,iEAA9C,yBAAoH,QAApH,GAAgF,mCAIpF,yBAAiC,GAAxB/c,KAAK,WAEpB,GACA,yBAEM,MAFN,GAEM,CADL,yBAAsF,GAA9EA,KAAK,SAASqG,MAAM,SAAUsE,QAAS,EAAAA,QAAS2E,KAAK,cAAc7M,MAAM,I,sECnGrE,kBAAgB,CAC3BrC,KAAM,sBACNuI,MAF2B,WAGvB,IAAMa,EAAQ,oBAAO,SACfgJ,EAAUhJ,EAAMiJ,gBAAgB,eAEtC,MAAO,CACH9H,SAAS,EACTnB,MAAOA,EACPgJ,QAASA,EACTgK,GAAI,oBAGZngB,KAAM,WACF,MAAO,CACHiiB,yBAA0B,KAC1BH,0BAA2B,KAC3BxN,QAAS,IAAI,QACboM,WAAW,EACXQ,kBAAkB,IAGpB3T,QAtBqB,WAsBd,8KACH,EAAKJ,MAAMoT,KAAK2B,aADb,uBAEH,EAAK/U,MAAMoT,KAAK4B,gBAFb,uBAGH,EAAKhV,MAAMoT,KAAK6B,eAHb,uBAIH,EAAKjV,MAAMoT,KAAK8B,iBAJb,OAMH9P,EAAW,EAAKpF,MAAMkD,KAAKtB,MAAMuB,QAAQ+F,cACtB,KAAb,OAAR9D,QAAQ,IAARA,OAAA,EAAAA,EAAU/R,UAAc,EAAKyhB,yBAA2B1P,EAAS,IAP5D,+CASbzL,QAAS,CACCuZ,iBADD,SACkBiC,EAAiBC,EAAuBC,EAAwBC,EAA0BC,GAAsB,4KAEzHzX,EAAK,EAAKqJ,QAAQkO,GAClB3F,EAAO,EAAK1P,MAAMoT,KAAKxR,MAAMuT,GAASpb,QAAO,SAAC3C,GAAD,OAAa,OAADA,QAAC,IAADA,OAAA,EAAAA,EAAGoe,KAAM1X,IAAO,OAAD1G,QAAC,IAADA,OAAA,EAAAA,EAAG+C,QAAS2D,KAAI,GAE9F,EAAKqJ,QAAQmO,GAAoB5F,EAAK0F,IAElCG,EAP6H,CAAF,+BAOtG,EAAKA,cAAcJ,GAPmF,0DAU/H/f,QAAQE,OAAR,MAV+H,4DAajIyd,OAdD,WAcO,qKACR,EAAKQ,WAAY,EACbkC,EAFI,UAES,EAAKX,gCAFd,aAES,EAA+BhX,GAFxC,SAKC,EAAKkV,GAAG7L,QAAQ8L,WAAYwC,EAL7B,wBAMA,EAAKtU,SAAU,EACf,EAAK4I,UAAUjD,QAET4O,EAAa,EAAK1V,MAAM2B,QAAQ0H,aAAY,SAACrU,GAAiBA,EAAE0Q,qBAEnEgQ,GAAcA,EAAWriB,OAAS,IAAGoiB,GAAc,IAAJ,OAAQC,EAAWriB,SAErE,EAAK8T,QAAQwO,oBAAsB,EAAKxO,QAAQyO,oBAAoBtV,KAAI,SAACuV,GAAD,OAAcA,EAAGhB,WAASjG,KAAK,KACvG,EAAKzH,QAAQyO,oBAAsB,EAAKjB,0BAA0BrU,KAAI,SAACuV,GAAD,OAAcA,EAAG1b,SACvF,EAAKgN,QAAQK,WAAa,IAAImD,KAC9B,EAAKxD,QAAQ2O,kBAAoB,EAAK9M,QAAQ+M,WAC9C,EAAK5O,QAAQzB,kBAAoB+P,EACjC,EAAKzV,MAAMU,OAAO,mBAAoB,EAAKyG,SAlB3C,UAmBM,EAAKnH,MAAM2B,QAAQqU,IAAI,EAAK7O,SAnBlC,QAqBA,EAAKtC,MAAM,SACX,EAAKkF,UAAUI,SACf,EAAKhJ,SAAU,EAvBf,6DA2BJ/L,QAAQE,OAAR,MA3BI,6DA8BZigB,cAAe,WAAF,8CAAE,WAAeU,GAAf,8FACXpc,KAAKka,kBAAmB,EADb,SAIPla,KAAKmG,MAAMU,OAAO,8EAA+E7G,KAAKsN,SAE7D,aAArC8O,EAAaC,qBACbrc,KAAKsN,QAAQ6M,WAAa,KAC1Bna,KAAKsN,QAAQ+M,aAAe,KAC5Bra,KAAKsN,QAAQqN,iBAAmB,KAChC3a,KAAKsN,QAAQyO,oBAAsB,IACS,aAArCK,EAAaC,qBACpBrc,KAAKsN,QAAQ+M,aAAe,KAC5Bra,KAAKsN,QAAQqN,iBAAmB,KAChC3a,KAAKsN,QAAQyO,oBAAsB,IACS,eAArCK,EAAaC,sBACpBrc,KAAKsN,QAAQqN,iBAAmB,KAChC3a,KAAKsN,QAAQyO,oBAAsB,IAGnCO,EAA2B,GAEC,OAA5Btc,KAAKsN,QAAQ0M,WAtBV,iCAuBGha,KAAKmG,MAAMoT,KAAKgD,aAAavc,KAAKsN,QAAQ0M,YAvB7C,UAyB6B,OAA5Bha,KAAKsN,QAAQ6M,WAzBd,kCA0BqBna,KAAKmG,MAAMoT,KAAKiD,eAAexc,KAAKsN,QAAQ0M,WAAYha,KAAKsN,QAAQ6M,YA1B1F,WA0BCmC,EA1BD,OA4BmC,OAA9Btc,KAAKsN,QAAQ+M,aA5BlB,kCA6BWra,KAAKmG,MAAMoT,KAAKkD,gBAAgBzc,KAAKsN,QAAQ6M,WAAYna,KAAKsN,QAAQ+M,cA7BjF,iDAgCqBra,KAAKmG,MAAMoT,KAAKiD,eAAexc,KAAKsN,QAAQ0M,YAhCjE,QAgCCsC,EAhCD,kBAmCqB,KAAb,QAAX,EAAAA,SAAA,eAAa9iB,UACbwG,KAAKsN,QAAQ+M,aAAeiC,EAAY,GAAGhc,MAC3CN,KAAKqZ,iBAAiB,aAAc,UAAW,eAAgB,kBAAkB,IAGzD,OAAxBrZ,KAAKsN,QAAQgM,UAAiD,OAA5BtZ,KAAKsN,QAAQ6M,aAAoD,IAA7Bna,KAAKsN,QAAQ6M,YAAqD,OAA9Bna,KAAKsN,QAAQ+M,eAAwD,IAA/Bra,KAAKsN,QAAQ+M,cAxC1J,kCAyC2Bra,KAAKmG,MAAMoT,KAAKmD,kBAC1C1c,KAAKsN,QAAQgM,OACXtZ,KAAKsN,QAAQ0M,WACe,OAA5Bha,KAAKsN,QAAQ6M,WAAsBna,KAAKsN,QAAQ6M,YAAc,EAChC,OAA9Bna,KAAKsN,QAAQ+M,aAAwBra,KAAKsN,QAAQ+M,cAAgB,GA7CrE,WAyCGsC,EAzCH,QAgDgB,OAAfA,QAAe,IAAfA,OAAA,EAAAA,EAAiBnjB,QAAS,IAC1BwG,KAAKsN,QAAQqN,iBAAmBgC,EAAgB,GAAGrc,MACnDN,KAAKqZ,iBAAiB,iBAAkB,UAAW,mBAAoB,sBAAsB,IAG3D,OAAlCrZ,KAAKsN,QAAQqN,iBArDd,kCAsDO3a,KAAKmG,MAAMoT,KAAKqD,oBAClB5c,KAAKsN,QAAQgM,OACXtZ,KAAKsN,QAAQ0M,WACe,OAA5Bha,KAAKsN,QAAQ6M,WAAsBna,KAAKsN,QAAQ6M,YAAc,EAChC,OAA9Bna,KAAKsN,QAAQ+M,aAAwBra,KAAKsN,QAAQ+M,cAAgB,EAClEra,KAAKsN,QAAQqN,kBA3DpB,6DAiEPpf,QAAQE,OAAR,MAjEO,QAoEXuE,KAAKka,kBAAmB,EApEb,0DAAF,sDAAE,IAuEnB2C,YAlJ2B,WAmJvB,MAAO,CACHvP,QAAS,CACLgM,OAAQ,CACJwD,SAAA,SAEJjD,YAAa,CACTiD,SAAA,SAEJ9C,WAAY,CACR8C,SAAA,SAEJrC,cAAe,CACXqC,SAAA,cCrKpB,GAAOhc,OAAS,GAED,U,ICHR1B,MAAM,4B,IACJA,MAAM,iB,GAEX,yBAAiD,SAA1CqL,IAAI,iBAAgB,kBAAc,G,UAEgErL,MAAM,W,IAG5GA,MAAM,4B,IACJA,MAAM,iB,GAEX,yBAAyC,SAAlCqL,IAAI,aAAY,cAAU,G,UAEgErL,MAAM,W,IAGpGA,MAAM,4B,IACJA,MAAM,iB,GAEX,yBAAwC,SAAjCqL,IAAI,gBAAe,UAAM,G,UAEuErL,MAAM,W,IAG1GA,MAAM,4B,IACJA,MAAM,iB,GAEX,yBAAoC,SAA7BqL,IAAI,WAAU,WAAO,G,UAEiErL,MAAM,W,IAKhGA,MAAM,U,GACV,yBAAmC,OAA9BA,MAAM,mBAAiB,S,IACvBA,MAAM,mB,yRArCV,yBAyCO,QAzCDsN,aAAa,MAAO,SAAM,2DAAU,EAAAwM,QAAQ,EAAAC,GAAGC,YAAQ,cAAGha,MAAM,W,CACxE,yBAMY,MANZ,GAMY,CALX,yBAGO,OAHP,GAGO,CAFN,yBAA+M,GAArM6E,GAAG,gB,WAAyB,EAAA8Y,MAAMC,c,qDAAN,EAAAD,MAAMC,cAAa,IAAG1Y,QAAS,EAAAA,QAAQ2Y,cAAenQ,YAAY,UAAU2M,YAAY,QAASra,MAAK,aAAiB,EAAAsa,WAAa,EAAAP,GAAG4D,MAAMC,cAAc5D,W,yCACjM,KAEa,EAAAD,GAAG4D,MAAMC,cAAc5D,UAAY,EAAAM,WAAc,EAAAP,GAAG4D,MAAMC,cAAcrD,SAASC,W,yBAA/F,yBAAgK,QAAhK,GAA2H,kC,yCAG5H,yBAMY,MANZ,GAMY,CALX,yBAGO,OAHP,GAGO,CAFN,yBAAwI,GAA9H3V,GAAG,Y,WAAqB,EAAA8Y,MAAMG,U,qDAAN,EAAAH,MAAMG,UAAS,IAAGC,UAAU,EAAO/d,MAAK,aAAiB,EAAAsa,WAAa,EAAAP,GAAG4D,MAAMG,UAAU9D,W,+BAC3H,KAEa,EAAAD,GAAG4D,MAAMG,UAAU9D,UAAY,EAAAM,WAAc,EAAAP,GAAG4D,MAAMG,UAAUvD,SAASC,W,yBAAvF,yBAAmJ,QAAnJ,GAAkH,8B,yCAGnH,yBAMY,MANZ,GAMY,CALX,yBAGO,OAHP,GAGO,CAFN,yBAA2K,GAA9J/K,YAAA,GAAY5K,GAAG,e,WAAwB,EAAA8Y,MAAMK,a,qDAAN,EAAAL,MAAMK,aAAY,IAAEC,OAAO,WAAYvO,IAAK,EAAI1P,MAAK,aAAiB,EAAAsa,WAAa,EAAAP,GAAG4D,MAAMK,aAAahE,W,+BAC7J,KAEa,EAAAD,GAAG4D,MAAMK,aAAahE,UAAY,EAAAM,WAAc,EAAAP,GAAG4D,MAAMK,aAAazD,SAASC,W,yBAA7F,yBAA4J,QAA5J,GAAyH,gC,yCAG1H,yBAMY,MANZ,GAMY,CALX,yBAGO,OAHP,GAGO,CAFN,yBAAyL,GAA5K/K,YAAA,GAAY5K,GAAG,W,WAAoB,EAAA8Y,MAAMO,Q,qDAAN,EAAAP,MAAMO,QAAO,IAAEnf,KAAK,WAAWof,SAAS,MAAMC,OAAO,QAAS1O,IAAK,EAAI1P,MAAK,aAAiB,EAAAsa,WAAa,EAAAP,GAAG4D,MAAMO,QAAQlE,W,+BAC3K,KAEa,EAAAD,GAAG4D,MAAMO,QAAQlE,UAAY,EAAAM,WAAc,EAAAP,GAAG4D,MAAMO,QAAQ3D,SAASC,W,yBAAnF,yBAAkJ,QAAlJ,GAA8G,iC,yCAG/G,yBAAiC,GAAxBjd,KAAK,WAEd,yBAKM,MALN,GAKM,CAJL,GACA,yBAEM,MAFN,GAEM,CADL,yBAAsF,GAA9EA,KAAK,SAASqG,MAAM,SAAUsE,QAAS,EAAAA,QAAS2E,KAAK,cAAc7M,MAAM,I,iCCvChE,G,sCCQN,kBAAgB,CAC3BrC,KAAM,4BACNuI,MAAO,WACH,MAAO,CACHa,MAAO,oBAAO,SACdgT,GAAI,kBACJ7U,QAAS,CACL2Y,cAAe,CAAC,MAAO,SAAU,OAAQ,KAAM,MAAO,KAAM,MAAO,MAAO,OAAQ,KAAM,KAAM,QAC1F,MAAO,MAAO,KAAM,MAAO,KAAM,MAAO,MAAO,KAAM,MAAMxW,KAAI,SAAAnN,GAAM,MAAO,CAAEqM,QAASrM,EAAG2E,MAAO3E,SAIjHuG,MAAO,CACH4I,kBAAmB2B,QAEvBpR,KAAM,WACF,MAAO,CACH+jB,MAAO,IAAI,GACXzV,SAAS,EACToS,WAAW,IAGnB5Z,QAAS,CACCoZ,OADD,WACO,2JACR,EAAKQ,WAAY,EADT,SAIC,EAAKP,GAAG4D,MAAM3D,SAJf,wBAKA,EAAK9R,SAAU,EACf,EAAK4I,UAAUjD,QAEf,EAAK9G,MAAMU,OAAX,sDAAiE,EAAK4B,mBAAqB,EAAKsU,OAChG,EAAKA,MAAMlR,kBAAoB,EAAKpD,kBATpC,SAUM,EAAKtC,MAAM2B,QAAQ2V,SAAS,EAAKV,OAVvC,OAYA,EAAK/R,MAAM,SACX,EAAKkF,UAAUI,SACf,EAAKhJ,SAAU,EAdf,6DAkBJ/L,QAAQE,OAAR,MAlBI,8DAsBhBohB,YA7C2B,WA8CvB,MAAO,CACHE,MAAO,CACHC,cAAe,CACXF,SAAA,SAEJM,aAAc,CACVN,SAAA,SAEJQ,QAAS,CACLR,SAAA,SAEJI,UAAW,CACPJ,SAAA,cC/DpB,GAAOhc,OAAS,GAED,U,ICHR1B,MAAM,4B,IACJA,MAAM,iB,GAEX,yBAAyC,SAAlCqL,IAAI,aAAY,cAAU,G,UAEiFrL,MAAM,W,IAGrHA,MAAM,4B,IACJA,MAAM,iB,GAEX,yBAAkD,SAA3CqL,IAAI,oBAAmB,gBAAY,G,UAEsFrL,MAAM,W,IAGnIA,MAAM,4B,IACJA,MAAM,iB,GAEX,yBAAsC,SAA/BqL,IAAI,YAAW,YAAQ,G,IAM3BrL,MAAM,U,GACV,yBAAmC,OAA9BA,MAAM,mBAAiB,S,IACvBA,MAAM,mB,yRA5BV,yBAgCO,QAhCDsN,aAAa,MAAO,SAAM,2DAAU,EAAAwM,QAAQ,EAAAC,GAAGC,YAAQ,cAAGha,MAAM,W,CACxE,yBAMY,MANZ,GAMY,CALX,yBAGO,OAHP,GAGO,CAFN,yBAAgJ,GAAtI6E,GAAG,Y,WAAqB,EAAAyZ,UAAUC,U,qDAAV,EAAAD,UAAUC,UAAS,IAAGR,UAAU,EAAO/d,MAAK,aAAiB,EAAAsa,WAAa,EAAAP,GAAGuE,UAAUC,UAAUvE,W,+BACnI,KAEsB,EAAAD,GAAGuE,UAAUC,UAAUvE,UAAY,EAAAM,WAAc,EAAAP,GAAGuE,UAAUC,UAAUhE,SAASC,W,yBAA/F,yBAAkK,QAAlK,GAA2H,oC,yCAGrI,yBAMY,MANZ,GAMY,CALX,yBAGO,OAHP,GAGO,CAFN,yBAA4L,GAA/K/K,YAAA,GAAY5K,GAAG,mB,WAA4B,EAAAyZ,UAAUE,iB,qDAAV,EAAAF,UAAUE,iBAAgB,IAAEP,OAAO,QAASvO,IAAK,EAAI1P,MAAK,aAAiB,EAAAsa,WAAa,EAAAP,GAAGuE,UAAUE,iBAAiBxE,W,+BAC9K,KAEsB,EAAAD,GAAGuE,UAAUE,iBAAiBxE,UAAY,EAAAM,WAAc,EAAAP,GAAGuE,UAAUE,iBAAiBjE,SAASC,W,yBAA7G,yBAAsL,QAAtL,GAAwI,2C,yCAGlJ,yBAKY,MALZ,GAKY,CAJX,yBAGO,OAHP,GAGO,CAFN,yBAA8E,GAAnEiE,YAAY,E,WAAe,EAAAH,UAAUI,kB,qDAAV,EAAAJ,UAAUI,kBAAiB,IAAEpZ,KAAK,K,uBACxE,OAIF,yBAAiC,GAAxB/H,KAAK,WAEd,yBAKM,MALN,GAKM,CAJL,GACA,yBAEM,MAFN,GAEM,CADL,yBAAsF,GAA9EA,KAAK,SAASqG,MAAM,SAAUsE,QAAS,EAAAA,QAAS2E,KAAK,cAAc7M,MAAM,I,iCC9BhE,GAArB,qCACI,KAAA0e,kBAA4B,ICOjB,kBAAgB,CAC3B/gB,KAAM,uBACNuI,MAF2B,WAGvB,MAAO,CACHa,MAAO,oBAAO,SACdgT,GAAI,oBAGZtZ,MAAO,CACH4I,kBAAmB2B,QAEvBpR,KAAM,WACF,MAAO,CACH0kB,UAAW,IAAI,GACfhE,WAAW,EACXpS,SAAS,IAGjBxH,QAAS,CACCoZ,OADD,WACO,2JACR,EAAKQ,WAAY,EADT,SAIC,EAAKP,GAAGuE,UAAUtE,SAJnB,wBAKA,EAAKjT,MAAMU,OAAO,sBAAuB,EAAKyG,SAC9C,EAAKhG,SAAU,EACf,EAAK4I,UAAUjD,QAEf,EAAKyQ,UAAU7R,kBAAoB,EAAKpD,kBATxC,SAUM,EAAKtC,MAAM2B,QAAQiW,UAAU,EAAKL,WAVxC,OAYA,EAAKpW,SAAU,EACf,EAAK0D,MAAM,SACX,EAAKkF,UAAUI,SAdf,6DAkBJ/U,QAAQE,OAAR,MAlBI,8DAsBhBohB,YAzC2B,WA0CvB,MAAO,CACHa,UAAW,CACPE,iBAAkB,CACdd,SAAA,SAEJa,UAAW,CACPb,SAAA,cCrDpB,GAAOhc,OAAS,GAED,U,ICHF1B,MAAM,oB,IAEEA,MAAM,4B,IAGMA,MAAM,qE,GACP,yBAAiE,MAA7DA,MAAM,kCAAiC,qBAAiB,G,IACtDA,MAAM,iB,GAER,yBAAsC,SAA/BqL,IAAI,QAAO,gBAAY,G,gCAIJ,yD,UAmBJrL,MAAM,eAAe+I,MAAA,6C,IAMlE/I,MAAM,U,GACP,yBAAoC,OAA/BA,MAAM,oBAAkB,S,IACxBA,MAAM,mB,iUAzCnB,yBA6CO,QA7CDsN,aAAa,MAAO,SAAM,0DAAU,EAAAwM,QAAA,EAAAA,OAAA,qBAAM,cAAE9Z,MAAM,W,CACpD,yBAkCM,MAlCN,GAkCM,CAjCF,yBAgCW,GAhCD8B,OAAO,eAAa,C,8BAC1B,iBA4BM,CA5BN,yBA4BM,MA5BN,GA4BM,CA3BF,yBA0BY,GA1BAgD,YAAY,EAAOjG,MAAO,EAAA+f,eAAwBC,UAAW,EAAAzQ,gB,oDAAA,EAAAA,gBAAe,IAAE9B,QAAQ,KAAKtH,iBAAiB,U,0BACzGL,OAAM,sBACb,iBAMM,CANN,yBAMM,MANN,GAMM,CALF,GACA,yBAGO,OAHP,GAGO,CAFH,yBAA8I,GAAnI,SAAQ,EAAAma,aAAehe,QAAQ,EAAM+D,GAAG,O,WAAgB,EAAAka,a,qDAAA,EAAAA,aAAY,IAAG7Z,QAAS,EAAA8Z,MAAOtR,YAAY,UAAU2M,YAAY,S,4CACpI,W,8BAMZ,iBAAiE,CAAjE,yBAAiE,GAAzD4E,cAAc,SAASC,YAAY,eAC3C,yBAIS,GAJDva,OAAO,aAAW,CACXgB,KAAI,sBACX,SADsB,GACtB,MADsB,CACtB,yBAAoF,yCAA5EC,EAAUhM,KAAKic,UAAUxO,KAAG,SAAEjJ,GAAF,OAAQA,EAAEwX,UAAUrP,WAASoP,KAAI,c,MAG7E,yBAIS,GAJDhR,OAAO,QAAM,CACNgB,KAAI,sBACX,SADsB,GACtB,MADsB,CACtB,yBAAkE,yCAA1DC,EAAUhM,KAAK2D,KAAK8J,KAAG,SAAEvI,GAAF,OAAQA,EAAEiP,QAAM4H,KAAI,c,MAG3D,yBAAgD,GAAxC1Q,MAAM,SAASN,OAAO,WAC9B,yBAAqD,GAA7CM,MAAM,eAAeN,OAAO,UACpC,yBAAiD,GAAzCM,MAAM,aAAaN,OAAO,Y,MAfV,EAAAoa,aACI,EAAAA,cAAqC,IAArB,EAAAH,eAAexkB,O,MAAhD,Q,yBAA8D,iBAAiB,C,6BAAjB,+B,QAD9D,Q,yBAA2B,iBAAqD,C,yCAmBxF,EAAAgU,iBAAmB,EAAAkM,W,yBAA9B,yBAA0I,IAA1I,GAA2G,gC,mDAInH,yBAAiC,GAAxB/c,KAAK,WAEd,yBAKM,MALN,GAKM,CAJF,GACA,yBAEM,MAFN,GAEM,CADF,yBAAsF,GAA9EA,KAAK,SAASqG,MAAM,SAAUsE,QAAS,EAAAA,QAAS2E,KAAK,cAAc7M,MAAM,I,iCC3C5E,GACjB,aAAsE,IAA1DnB,EAA0D,uDAAnC,KAAM0H,EAA6B,uDAAJ,KAAI,wBAK/D,KAAArF,MAAuB,KACvB,KAAA0a,QAAyB,KAL5Bhb,KAAKM,MAAQrC,EACb+B,KAAKgb,QAAUrV,GCIR,kBAAgB,CAC3B5I,KAAM,mBACNuI,MAF2B,WAEtB,QACKa,EAAQ,oBAAO,SACfoY,EAAK,UAAGpY,EAAMkD,KAAKtB,MAAMyW,SAASC,yBAA7B,iBAAG,EAA6C7S,iBAAhD,aAAG,EAAwD8S,SAClEN,EAAQ,GAKZ,OAHIG,GAASA,EAAM/kB,OAAS,IACxB4kB,EAAQ,gBAAIG,GAAOhK,MAAK,SAACnB,EAAQoB,GAAT,OAAoBpB,EAAEzN,QAAQ+O,cAAcF,EAAE7O,YAAUc,KAAI,SAAClJ,GAAD,OAAe,IAAI,GAAJ,UAAYA,EAAEoV,OAAd,YAAwBpV,EAAEsY,MAA1B,UAAqCtY,EAAEoI,QAAvC,aAAmDpI,EAAEsY,KAArD,UAEhG,CACH1P,QACAiY,UAGRve,MAAO,CACHwI,UAAW8B,QAEfnR,KAAM,WACF,MAAO,CACHsO,SAAS,EACToS,WAAW,EACXyE,aAAc,KACd3Q,gBAAiB,KACjBwQ,eAAgB,KAGxBle,QAAS,CACCoe,aADD,WACa,8KAEV,EAAKxE,WAAY,EACjB,EAAKlM,gBAAkB,KAHb,SAIY,EAAKrH,MAAMkD,KAAKsV,cAAc,EAAKR,cAJ/C,OAIJ7Z,EAJI,OAKV,EAAK0Z,eAAiB1Z,EAAQuP,MAAMpN,KAAI,SAACtL,GAAD,OAAoBA,EAAEyjB,YAAU1e,QAAO,SAAC/E,GAAD,MAAkD,qBAAjCA,EAAE0jB,aAAaxe,iBALrG,mDAQV9E,QAAQE,OAAR,MARU,4DAWZyd,OAZD,WAYO,wJACR,EAAKQ,WAAY,EAEjB,IACQ,EAAKlM,kBACL,EAAKrH,MAAMU,OAAX,iCAA4C,EAAKwB,UAAjD,8BAAgF,EAAKmF,gBAAgBvJ,KACrG,EAAKqD,SAAU,EACf,EAAK4I,UAAUjD,QAEf,EAAK9G,MAAM2B,QAAQsI,MAAM,EAAK/H,UAAW,EAAKmF,gBAAgBvJ,IAE9D,EAAKqD,SAAU,EACf,EAAK0D,MAAM,SACX,EAAKkF,UAAUI,UAGvB,MAAMwO,GACFvjB,QAAQE,OAAOqjB,GAjBX,iD,UCzCpB,GAAOhe,OAAS,GAED,UCMA,kBAAgB,CAC3B/D,KAAM,MACNkS,WAAY,CACR8P,gBACAC,uBACAC,6BACAC,wBACAC,oBACAC,YACAC,aACAC,WACAC,eAEJja,MAb2B,WAatB,MACKa,EAAQ,eAAO,SACfqZ,EAAa,eAAO,cACpBja,EAAS,eAAS,IAAI,GAAJ,OAAYia,QAAZ,IAAYA,GAAZ,UAAYA,EAAoBC,YAAhC,aAAY,EAA0Bxb,KAE9D,MAAO,CACHub,aACArZ,QACAZ,WAGRvM,KAAM,WACF,MAAO,CACHsP,WAAY,KACZkB,gBAAiB,KACjBb,sBAAsB,EACtBT,YAAY,EACZQ,mBAAmB,EACnBF,eAAe,EACfD,iBAAiB,IAGnBhC,QAnCqB,WAmCd,gLAEL,EAAK2J,UAAUjD,QACdyS,OAAeC,OAAS,EAAKA,OAC7BD,OAAeE,UAAY,EAAK1P,UAE3B2P,EAAUC,YAAYC,MANvB,SAOC,EAAK5Z,MAAM6Z,UAAU,EAAKR,YAP3B,OAQCS,EAAUH,YAAYC,MAE5B,EAAKvW,gBAAkB,EAAKrD,MAAMiJ,gBAAgB,eAClD,EAAK8Q,yBAAyBD,EAAUJ,GAXnC,qDAaLtkB,QAAQE,OAAR,MAbK,6DAgBb0kB,QAnD2B,WAoDvB,MAAO,CACHha,MAAOnG,KAAKmG,QAGpB3E,SAAU,CACNoI,eAAgB,sBACN8F,EAAQ,CACV,CACI1M,MAA4B,WAArBhD,KAAKuF,OAAOpH,KAAoB,eAAiB,eACxD8N,KAA2B,WAArBjM,KAAKuF,OAAOpH,KAAoB,sBAAwB,oBAC9DwR,QAAS,WACL,EAAKxJ,MAAMU,OAAX,kCAAuE,WAA1B,EAAKtB,OAAOuR,UAAyB,UAAY,WAC9F,EAAKvR,OAAO6a,eAGpB,CACIpd,MAAiC,UAA1BhD,KAAKuF,OAAOuR,UAAwB,YAAc,aACzD7K,KAAgC,UAA1BjM,KAAKuF,OAAOuR,UAAwB,aAAe,YACzDnH,QAAS,WACL,EAAKpK,OAAO+B,SAAU,EACtB,EAAKnB,MAAMU,OAAX,iCAAsE,UAA1B,EAAKtB,OAAOuR,UAAwB,OAAS,UACzF5Z,YAAW,kBAAM,EAAKqI,OAAO8a,oBAAmB,KAChDnjB,YAAW,WACP,EAAKqI,OAAO+B,SAAU,IACvB,QAGX,CACItE,MAAO,eACPiJ,KAAM,gBACN0D,QAAS,WAAF,8CAAE,6GACL,EAAKpK,OAAO+B,SAAU,EACtB,EAAKnB,MAAMU,OAAO,mBAEZgZ,EAAUC,YAAYC,MAJvB,SAKc,EAAK5Z,MAAMma,QAAQ,EAAKd,YALtC,OAKL,EAAKrZ,MALA,OAMC8Z,EAAUH,YAAYC,MAE5B,EAAKG,yBAAyBD,EAAUJ,GARnC,2CAAF,qDAAE,KAwBjB,MAXwD,iBAArD7f,KAAKmG,MAAMkD,KAAKtB,MAAMuB,QAAQC,oBAC7BmG,EAAMG,QAAQ,CACV7M,MAAO,iBACPiJ,KAAM,oBACN0D,QAAS,WACL,EAAKpH,iBAAkB,EACvB,EAAKpC,MAAMU,OAAO,wCAKvB6I,IAGf5P,QAAS,CACLogB,yBADK,SACoBK,GAAe,WACjCA,EAAU,KACTrjB,YAAW,WACP,EAAKgT,UAAUI,SACf,EAAK/K,OAAO+B,SAAU,IACvB,KAAOiZ,IAGVvgB,KAAKkQ,UAAUI,SACftQ,KAAKuF,OAAO+B,SAAU,GAE1BpK,YAAW,WACP,EAAKqI,OAAO+B,SAAU,IACvB,OAEP0B,oBAhBK,WAiBDhJ,KAAKuF,OAAOyD,uBAEhBD,yBAnBK,WAoBD/I,KAAKuF,OAAOib,gBAEhBrX,kBAtBK,SAsBaV,GACdzI,KAAKmG,MAAMU,OAAX,8DAAyE4B,IACzEzI,KAAKsI,WAAaG,EAClBzI,KAAKwI,eAAgB,GAEzBY,yBA3BK,SA2BoBf,GACrBrI,KAAKmG,MAAMU,OAAX,qDAAgEwB,IAChErI,KAAKsI,WAAaD,EAClBrI,KAAK2I,sBAAuB,GAEhCO,sBAhCK,SAgCiBT,GAClBzI,KAAKmG,MAAMU,OAAX,kEAA6E4B,IAC7EzI,KAAKsI,WAAaG,EAClBzI,KAAK0I,mBAAoB,GAE7BO,mBArCK,SAqCcjE,GACfhF,KAAKmG,MAAMU,OAAX,sDAAiE7B,EAAUqH,YAC3ErM,KAAKsI,WAAatD,EAAUqH,UAC5BrM,KAAKkI,YAAa,GAEtBL,iBA1CK,WA2CD,QAAI7I,OAAOyhB,WAAa,QACK,WAArBzgB,KAAKuF,OAAOpH,MAA2B6B,KAAKuF,OAAOsR,mBACzB,YAArB7W,KAAKuF,OAAOpH,MAA2B6B,KAAKuF,OAAOmR,oBAIpElP,eAAgB,WACZ,MAAO,CACH,iBACA,CACI,iBAAuC,YAArBxH,KAAKuF,OAAOpH,KAC9B,gBAAsC,WAArB6B,KAAKuF,OAAOpH,KAC7B,iCAAkC6B,KAAKuF,OAAOsR,oBAA2C,WAArB7W,KAAKuF,OAAOpH,KAChF,gCAAiC6B,KAAKuF,OAAOmR,mBAA0C,YAArB1W,KAAKuF,OAAOpH,KAC9E,+BAAgC6B,KAAKuF,OAAOoR,uBChLhE,GAAO7V,OAASA,EAED,U,aCHM,G,WAArB,qCACY,KAAA4f,WAA4B,KAC5B,KAAAnP,UAAoB,GACpB,KAAAG,SAAmB,GACnB,KAAAiP,aAAuB,GACvB,KAAAC,YAA2B,KAC3B,KAAAhI,MAAgB,GAChB,KAAA/G,OAAiB,GACjB,KAAAgP,SAAmB,GACnB,KAAAC,WAAqB,GACrB,KAAAC,eAAyB,GACzB,KAAAC,MAAgB,G,2CASxB,WACI,OAAOhhB,KAAKghB,O,IARhB,SAAUC,GACY,kBAAPA,EACHA,EAAGhjB,QAAO+B,KAAKghB,MAAQC,EAAGhjB,OAEzBgjB,IAAIjhB,KAAKghB,MAAQC,K,sBAW9B,WACI,OAAOjhB,KAAK0gB,Y,IALhB,SAAezc,GACXjE,KAAK0gB,WAAazc,I,0BActB,WACI,OAAOjE,KAAK+gB,gB,IARhB,SAAmB9c,GACG,kBAAPA,EACHA,GAAMA,EAAGid,YAAWlhB,KAAK+gB,eAAiB9c,EAAGid,UAAU7gB,cAAcsX,QAAQ,gBAAiB,KAE7F1T,IAAIjE,KAAK+gB,eAAiB9c,K,sBAOvC,WACI,OAAOjE,KAAK8gB,Y,IAGhB,SAAe7c,GACO,kBAAPA,EACHA,GAAMA,EAAGhG,QAAO+B,KAAK8gB,WAAa7c,EAAGhG,OAEpCgG,IAAIjE,KAAK8gB,WAAa7c,K,oBAUnC,WACI,OAAOjE,KAAK6gB,U,IARhB,SAAaM,GACqB,MAAV,kBAATA,EACHA,GAAQA,EAAKN,SAASlL,SAAQ3V,KAAK6gB,SAAL,UAAgBM,EAAKN,SAASlL,OAAO,GAAGE,YAAxC,QAAgD,IAE7EsL,IAAMnhB,KAAK6gB,SAAWM,EAAKC,UAAU,EAAG,M,kBAWrD,WACI,OAAOphB,KAAK6R,Q,IALhB,SAAWA,GACHA,EAAOrY,OAAS,IAAGwG,KAAK6R,OAASA,EAAO,M,iBAoBhD,WACI,OAAO7R,KAAK4Y,O,IAdhB,SAAUA,GACN,GAAIA,EAAO,CACP,IAAIyI,EAAa,GAEI,kBAAVzI,EACHA,EAAM3a,QAAOojB,EAAKzI,EAAM3a,OAE3BojB,EAAKzI,EAENyI,EAAG1W,SAAS,MAAQ0W,EAAG1W,SAAS,OAAM3K,KAAK4Y,MAAQyI,M,uBAY/D,WAAe,QACX,2BAAOrhB,KAAK4gB,mBAAZ,aAAO,EAAkBU,sBAAzB,QAA2C,I,IAL/C,SAAgB1Q,GACZ5Q,KAAK4gB,YAAc,IAAI9P,KAAKF,K,0BAOhC,WAAkB,MACd,iBAAO5Q,KAAK4gB,mBAAZ,wBAAoC5gB,KAAK4gB,YAAYW,UAArD,a,gBA2BJ,WACI,OAAGvhB,KAAK2gB,aAAqB,GAAP,OAAU3gB,KAAKuR,UAAf,YAA4BvR,KAAK2gB,aAAjC,YAAiD3gB,KAAK0R,UAChE,GAAP,OAAU1R,KAAKuR,UAAf,YAA4BvR,KAAK0R,W,IA1B1C,SAAS3U,GACL,GAAoB,kBAATA,EAAmB,CAIV,MAAhB,GAHIA,EAAK4U,SACL3R,KAAK0R,SAAW3U,EAAK4U,QAErB5U,EAAK6U,OACD,UAAA7U,EAAK6U,aAAL,eAAYpY,QAAS,IAAGwG,KAAKuR,UAAYxU,EAAK6U,MAAM,IACpD7U,EAAK6U,MAAMpY,OAAS,IAAGwG,KAAK2gB,aAAe5jB,EAAK6U,MAAM,GAAG,QAE9D,CACH,IAAM4P,EAAsBzkB,EAAKma,MAAM,KAEnCsK,EAAUhoB,OAAS,IACnBwG,KAAKuR,UAAYiQ,EAAU,GAEvBA,EAAUhoB,OAAS,GACnBwG,KAAK2gB,aAAea,EAAU,GAAG,GACjCxhB,KAAK0R,SAAW8P,EAAU,IAEzBxhB,KAAK0R,SAAW8P,EAAU,O,qBAc3C,WACI,OAAOxhB,KAAKuR,W,IALhB,SAAckQ,GACVzhB,KAAKuR,UAAYkQ,I,oBAWrB,WACI,OAAOzhB,KAAK0R,U,IALhB,SAAagQ,GACT1hB,KAAK0R,SAAWgQ,I,0BAOpB,SAAmBC,GACXA,IAAU3hB,KAAK2gB,aAAegB,EAAS,M,yBAG/C,WACI,OAAO3hB,KAAK2gB,e,oBAGhB,WACI,OAAOiB,KAAKC,UAAU,CAClB,CACIC,UAAW9hB,KAAK8hB,UAChBC,SAAU/hB,KAAK+hB,SACfxR,MAAOvQ,KAAKuQ,MACZyR,YAAahiB,KAAK4gB,YAClBjI,MAAO3Y,KAAK2Y,MACZsJ,WAAYjiB,KAAKkc,WACjBgG,eAAgBliB,KAAKmiB,eACrBC,OAAQpiB,KAAKoiB,OACbC,SAAUriB,KAAKqiB,SACfC,cAAetiB,KAAKsiB,oB,2BAKhC,SAAoBC,EAAiBC,GACjC,IAAMrT,EAAU,IAAIuE,EAWpB,GATI6O,EAAIte,KAAIkL,EAAQ+M,WAAaqG,EAAIte,IAEjCse,EAAIE,cAAetT,EAAQkT,SAAWE,EAAIE,cAAc,GACvDtT,EAAQkT,SAAW,KAEpBE,EAAI1Q,SAAQ1C,EAAQiT,OAASG,EAAI1Q,QAEjC0Q,EAAIxlB,OAAMoS,EAAQ1F,KAAO8Y,EAAIxlB,KAAKmD,QAAO,SAAA6F,GAAC,MAAa,YAATA,EAAEsM,OAAmB,KAEnEkQ,EAAIvO,WAA+B,KAAlBuO,EAAIvO,UACpB,MAAM,IAAI5X,MAAM,kFAQrB,GAT2C+S,EAAQ6S,YAAcO,EAAIvO,UAGjEuO,EAAI7P,UAASvD,EAAQwJ,MAAQ4J,EAAI7P,QAAQxS,QAAO,SAAA6F,GAAC,MAAgB,SAAZA,EAAE4M,UAAmB,IAE1E4P,EAAIG,uBAAsBvT,EAAQgT,eAAiBI,EAAIG,sBAEvDF,IAAcrT,EAAQgT,eAAiBK,GAEvCD,EAAIrN,YAAcqN,EAAIrN,WAAW1b,OAAS,EAAG,CAC7C,IAAMwnB,EAAQuB,EAAIrN,WAAWhV,QAAO,SAAA5G,GAAC,cAAmC,iBAA/B,UAAAA,EAAEqD,YAAF,mBAAQwQ,YAAR,eAAc8I,kBACnD+K,GAASA,EAAMxnB,OAAS,IAAG2V,EAAQoB,MAAQyQ,EAAM,IAGzD,OAAO7R,M,KCxMM,I,8GACjB,SAAerS,GAAsC,IAArBtD,EAAqB,uDAAJ,IACvCkmB,OAAQC,OAAO7H,IAAI,CACrB/J,SAAU,UACV4U,QAAS,UACTC,OAAQ9lB,EACR+lB,KAAMrpB,M,qBAId,SAAesD,GAAsC,IAArBtD,EAAqB,uDAAJ,IACvCkmB,OAAQC,OAAO7H,IAAI,CACrB/J,SAAU,OACV4U,QAAS,UACTC,OAAQ9lB,EACR+lB,KAAMrpB,M,mBAId,SAAasD,GAAsC,IAArBtD,EAAqB,uDAAJ,IACrCkmB,OAAQC,OAAO7H,IAAI,CACrB/J,SAAU,QACV4U,QAAS,QACTC,OAAQ9lB,EACR+lB,KAAMrpB,Q,MCrBG,G,WAGjB,WAAYspB,GAAgB,wBACxB9iB,KAAK+iB,UAAY,eAAiBD,E,sGAGtC,WAAe9lB,GAAf,gHAAiCgmB,IAAjC,iCAAwDC,EAAxD,+BAAiF,KAAjF,UAEWD,EAFX,gCAGiChjB,KAAKkjB,YAAYlmB,EAAQqY,KAH1D,UAGkBhb,EAHlB,QAIeA,EAJf,yCAI8BA,GAJ9B,wBAO+B8oB,MAAMnmB,GAPrC,WAOcomB,EAPd,QASWA,EAASC,GATpB,wBAUkBC,EAAaF,EAASG,QAVxC,UAWkCH,EAASI,OAX3C,WAWkB3Y,EAXlB,OAaiBA,EAAQ4Y,WAbzB,uBAa2C,IAAIrnB,MAAMyO,EAAQ6Y,cAb7D,eAceT,GAAgB,GAAaU,QAAQV,GAdpD,UAgBkBjjB,KAAK4jB,SAAS5mB,EAAQqY,IAAKiO,GAhB7C,iCAkBmBzY,EAAQ7R,MAlB3B,oBAoBuBoD,MApBvB,UAoBmCgnB,EAASjW,OApB5C,sGAuBQ,KAAMnQ,QAAUA,EAChBzB,QAAQE,OAAR,MAxBR,0D,yIA4BA,WAAe8C,EAAuB6kB,GAAtC,uGACwBS,OAAOnL,KAAK1Y,KAAK+iB,WADzC,cACUC,EADV,gBAEUA,EAAMc,IAAIvlB,EAAK6kB,GAFzB,gD,8IAKA,WAAkB7kB,GAAlB,2GACwBslB,OAAOnL,KAAK1Y,KAAK+iB,WADzC,cACUC,EADV,gBAEwBA,EAAMe,MAAMxlB,GAFpC,UAEUwlB,EAFV,QAIOA,IAASA,EAAMV,GAJtB,iCAK8BU,EAAMP,OALpC,UAKc3Y,EALd,QAOYA,EAAQ4Y,WAPpB,0CAQmB5Y,EAAQ7R,MAR3B,iD,iECvCiB,G,WAGjB,WAAYgrB,GAAiB,wBACzBhkB,KAAKikB,YAAc,IAAI,GAAW,WAAaD,G,uGAGnD,WAAa7U,GAAb,iGACiBnP,KAAKikB,YAAYC,MAAW,IAAIC,QAAJ,0BACzC,CACIC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3Btf,KAAMoK,EAAQmV,YACd,GANR,wF,iECLiB,I,iDCDA,G,WAGjB,WAAYN,GAAiB,wBACzBhkB,KAAKikB,YAAc,IAAI,GAAW,YAAcD,G,0GAGpD,WAAgB3e,GAAhB,iGACiBrF,KAAKikB,YAAYC,MAAkB,IAAIC,QAAJ,gCAAqC9e,EAASgJ,SAA9C,YAA0DhJ,EAASkJ,YACnH,CACI6V,OAAQ,MACRC,QAAS,CAAE,eAAgB,uBAJnC,wF,6IAQA,WAAmB5b,GAAnB,4GAA8C8b,EAA9C,yCAC6CvkB,KAAKikB,YAAYC,MAAuB,IAAIC,QAAJ,2CAAgD1b,GACjI,CACI2b,OAAQ,MACRC,QAAS,CAAE,eAAgB,sBAC3BE,GALR,cACUrW,EADV,yBAOWA,EACFzH,KAAI,SAAC2M,GAAD,OAAiB3Z,OAAO+qB,OAAO,IAAI,GAAYpR,MACnDmB,MAAK,SAACnB,EAAaoB,GAAd,OAA8BA,EAAEiQ,wBAAwB/P,cAActB,EAAEqR,6BATtF,gD,yIAYA,WAAepf,EAAoB0X,GAAnC,2GAC2B/c,KAAKikB,YAAYC,MAAW,IAAIC,QAAJ,kCAA+C,CAC9FC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3Btf,KAAM6c,KAAKC,UAAU,CACjBhW,kBAAmBxG,EAASwG,kBAC5BwC,SAAUhJ,EAASgJ,SACnBqW,YAAa3H,OAEjB,GATR,cACUqG,EADV,gBAW4BpjB,KAAK2kB,aAAatf,EAASwG,mBAAmB,GAX1E,UAWUqC,EAXV,OAYU0W,EAAgB1W,EAAU2W,WAAU,SAACzR,GAAD,OAAiBA,EAAE/E,WAAahJ,EAASgJ,cAEhFuW,GAAiB,GAdxB,wBAeQvf,EAASqJ,MAAQqO,EACjB7O,EAAU0W,GAAelW,MAAQqO,EAhBzC,UAiBc/c,KAAKikB,YAAYL,SAAjB,2CAA8Dve,EAASwG,mBAAqB,IAAIiZ,SAASlD,KAAKC,UAAU3T,KAjBtI,eAoBI,GAAayV,QAAQ,qCApBzB,kBAsBWP,GAtBX,iD,wIAyBA,WAAYxK,GAAZ,iGACiB5Y,KAAKikB,YAAYC,MAAW,IAAIC,QAAJ,yBAAsC,CAC3EC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3Btf,KAAM6c,KAAKC,UAAUjJ,MACrB,EAAO,2BALf,wF,iECnDiB,G,WAUjB,WAAYmM,GAAyB,wBAT7B,KAAAC,cAAqB,sBAAS,CAClCjM,UAAW,KAGR,KAAAhR,MAAa,sBAAS/H,KAAKglB,eAM9BhlB,KAAKilB,mBAAqBF,EAC1B/kB,KAAKklB,iBAAmB,IAAI,GAAgBllB,KAAKilB,oB,2GAGrD,WAAiBxc,GAAjB,iGACyCzI,KAAKklB,iBAAiBP,aAAalc,GAD5E,cACIzI,KAAKglB,cAAcjM,UADvB,yBAEW/Y,KAAK+H,MAAMgR,WAFtB,gD,yIAKA,WAAeoM,EAAkBlnB,GAAjC,8FACUoH,EAAWrF,KAAKglB,cAAcjM,UAAU7Y,QAAO,SAACkT,GAAD,OAAiBA,EAAE/E,WAAa8W,KAAU,GADnG,SAEiBnlB,KAAKklB,iBAAiBE,SAAS/f,EAAUpH,GAF1D,wF,4IAKA,WAAgBknB,GAAhB,8FACU9f,EAAWrF,KAAKglB,cAAcjM,UAAU7Y,QAAO,SAACkT,GAAD,OAAiBA,EAAE/E,WAAa8W,KAAU,GADnG,SAEiBnlB,KAAKklB,iBAAiBG,UAAUhgB,GAFjD,wF,uJAKA,WAA6BuT,GAA7B,iGACiB5Y,KAAKklB,iBAAiBvM,MAAMC,GAD7C,wF,iECpCiB,G,0FAWjB,WACI,gBAAU5Y,KAAK8hB,UAAf,YAA4B9hB,KAAK+hB,c,KCPpB,G,WAGjB,WAAYiC,GAAiB,wBACzBhkB,KAAKikB,YAAc,IAAI,GAAW,QAAUD,G,yGAGhD,WAAe1P,GAAf,uGAC2BtU,KAAKikB,YAAYC,MAAkB,IAAIC,QAAJ,4BAAiC7P,GAC3F,CACI8P,OAAQ,MACRC,QAAS,CAAE,eAAgB,uBAJnC,cACUjB,EADV,yBAOWA,EAAS3c,KAAI,SAACoP,GAAD,OAAe,IAAI,GAAKA,EAAKyP,IAAKzP,EAAKvV,WAP/D,gD,2IAUA,8GACiBN,KAAKikB,YAAYC,MAAkB,IAAIC,QAAJ,yBAChD,CACIC,OAAQ,MACRC,QAAS,CAAE,eAAgB,uBAJnC,wF,6IAQA,8GACiBrkB,KAAKikB,YAAYC,MAAkB,IAAIC,QAAJ,4BAChD,CACIC,OAAQ,MACRC,QAAS,CAAE,eAAgB,uBAJnC,wF,gECzBiB,G,WAmBjB,WAAYkB,GAAkB,wBAlBtB,KAAAC,WAAkB,sBACtB,CACI5K,eAAgB,GAChBG,iBAAkB,GAClBd,SAAU,GACVS,YAAa,GACbN,SAAU,GACVE,WAAY,GACZE,YAAa,GACbhB,OAAQ,GACRM,UAAW,KAInB,KAAA/R,MAAoB,sBAAS/H,KAAKwlB,YAK9BxlB,KAAKylB,YAAcF,EACnBvlB,KAAK0lB,aAAe,IAAI,GAAY1lB,KAAKylB,a,6GAG7C,8GACqCzlB,KAAK0lB,aAAaC,SAAS,oBADhE,cACI3lB,KAAKwlB,WAAWvL,SADpB,yBAEWja,KAAKwlB,WAAWvL,UAF3B,gD,8IAKA,8GACwCja,KAAK0lB,aAAaC,SAAS,uBADnE,cACI3lB,KAAKwlB,WAAW9K,YADpB,yBAEW1a,KAAKwlB,WAAW9K,aAF3B,gD,4IAKA,WAAmBkL,GAAnB,iGACqC5lB,KAAK0lB,aAAaC,SAAlB,0BAA8CC,IADnF,cACI5lB,KAAKwlB,WAAWpL,SADpB,yBAEWpa,KAAKwlB,WAAWpL,UAF3B,gD,+IAKA,WAAqBwL,GAArB,4GAAyCC,EAAzC,+BAAqE,KAC7DC,EADR,4BAC0CF,GAEpB,OAAfC,IAAqBC,GAAO,IAAJ,OAAQD,IAHvC,kBAM2C7lB,KAAK0lB,aAAaC,SAASG,GANtE,OAMQ9lB,KAAKwlB,WAAWlL,WANxB,2EAS2Cta,KAAK0lB,aAAaC,SAAlB,4BAAgDC,IAT3F,QASQ5lB,KAAKwlB,WAAWlL,WATxB,wCAYWta,KAAKwlB,WAAWlL,YAZ3B,yD,gJAeO,WAAsBuL,EAAoBE,GAA1C,iGACiC/lB,KAAK0lB,aAAaC,SAAlB,6BAAiDE,EAAjD,YAA+DE,IADhG,cACH/lB,KAAKwlB,WAAWhL,YADb,yBAEIxa,KAAKwlB,WAAWhL,aAFpB,gD,6IAKP,8GACmCxa,KAAK0lB,aAAaM,aADrD,cACIhmB,KAAKwlB,WAAWhM,OADpB,yBAEWxZ,KAAKwlB,WAAWhM,QAF3B,gD,6IAKA,8GACuCxZ,KAAK0lB,aAAaO,gBADzD,cACIjmB,KAAKwlB,WAAW1L,UADpB,OAC0ErT,KAAI,SAAAlJ,GAAC,OAAI9D,OAAO+qB,OAAO,IAAI,GAAajnB,MADlH,kBAEWyC,KAAKwlB,WAAW1L,WAF3B,gD,iJAKA,WAAwBoM,EAAgBN,EAAoBO,EAAoBJ,GAAhF,iGAC2C/lB,KAAK0lB,aAAaC,SAAlB,gCAAoDO,EAApD,YAA8DN,EAA9D,YAA4EO,EAA5E,YAA0FJ,IADrI,cACI/lB,KAAKwlB,WAAW5K,eADpB,yBAEW5a,KAAKwlB,WAAW5K,gBAF3B,gD,0JAKA,WAA0BsL,EAAgBN,EAAoBO,EAAoBJ,EAAsBK,GAAxG,iGAC6CpmB,KAAK0lB,aAAaC,SAAlB,kCAAsDO,EAAtD,YAAgEN,EAAhE,YAA8EO,EAA9E,YAA4FJ,EAA5F,YAA4GK,IADzJ,cACIpmB,KAAKwlB,WAAWzK,iBADpB,yBAEW/a,KAAKwlB,WAAWzK,kBAF3B,gD,yECxEiB,G,WAGjB,WAAYiJ,GAAiB,wBACzBhkB,KAAKikB,YAAc,IAAI,GAAW,WAAaD,G,sGAGnD,WAAY1W,EAAkB7E,GAA9B,2GACyBzI,KAAKikB,YAAYC,MAAW,IAAIC,QAAJ,gCACjD,CACIC,OAAQ,MACRC,QAAS,CAAE,eAAgB,oBAC3Btf,KAAM6c,KAAKC,UAAU,CACjBxZ,UAAWiF,EAAQjB,UACnB5D,kBAAmBA,OAEvB,GATR,UACUpO,EADV,QAWOA,EAAOspB,QAXd,iCAY+B3jB,KAAKqmB,OAAO/Y,EAAQ2O,mBAZnD,cAYc1Q,EAZd,OAac+a,EAAgB/a,EAASsZ,WAAU,SAAC1pB,GAAD,OAAgBA,EAAEkR,YAAciB,EAAQjB,aACjFd,EAAS+a,GAAeza,kBAAoBpD,EAC5C6E,EAAQzB,kBAAoBpD,EAfpC,UAiBczI,KAAKikB,YAAYL,SAAjB,kDAAqEtW,EAAQ2O,kBAA7E,SAAuG,IAAI6I,SAASlD,KAAKC,UAAUtW,KAjBjJ,QAkBQ,GAAaoY,QAAQ,iCAlB7B,wBAqBQ,GAAavnB,MAAb,mCAA+C/B,EAAOksB,OArB9D,iCAuBWlsB,GAvBX,iD,8IA0BA,WAAkBiT,EAAkB7E,GAApC,2GACyBzI,KAAKikB,YAAYC,MAAW,IAAIC,QAAJ,4BAAiC1b,EAAjC,YAAsD6E,EAAQjB,WAC/G,CACI+X,OAAQ,SACRC,QAAS,CAAE,eAAgB,uBAC3B,GALR,UACUhqB,EADV,QAOOA,EAPP,iCAQ+B2F,KAAKqmB,OAAO/Y,EAAQ2O,mBARnD,cAQc1Q,EARd,OASc+a,EAAgB/a,EAASsZ,WAAU,SAAC1pB,GAAD,OAAgBA,EAAEkR,YAAciB,EAAQjB,aACjFd,EAAS+a,GAAeza,kBAAoB,KAC5CyB,EAAQzB,kBAAoB,KAXpC,UAac7L,KAAKikB,YAAYL,SAAjB,kDAAqEtW,EAAQ2O,kBAA7E,SAAuG,IAAI6I,SAASlD,KAAKC,UAAUtW,KAbjJ,iCAgBWlR,GAhBX,iD,yIAmBA,WAAamsB,GAAb,uGAC4BxmB,KAAKikB,YAAYC,MAAW,IAAIC,QAAJ,kDAAuDqC,EAAvD,SACpD,CACIpC,OAAQ,MACRC,QAAS,CAAE,eAAgB,uBAJnC,cACUjB,EADV,OAOIA,EAASxP,SAAQ,SAACzY,GAAaA,EAAE8gB,kBAAoBuK,KAPzD,kBASWpD,EAAS3c,KAAI,SAACtL,GAAD,OAAY1B,OAAO+qB,OAAO,IAAI,QAAWrpB,OATjE,gD,0IAYA,WAAgBkN,GAAhB,8FACUoe,EAAU,IAAI,GADxB,SAGwBzmB,KAAKikB,YAAYC,MAAW,IAAIC,QAAJ,sCAA2C9b,GAC3F,CACI+b,OAAQ,MACRC,QAAS,CAAE,eAAgB,uBAC3B,GAPR,cAGIoC,EAAQjO,IAHZ,gBAS8BxY,KAAKikB,YAAYC,MAAW,IAAIC,QAAJ,4CAAiD9b,GACvG,CACI+b,OAAQ,MACRC,QAAS,CAAE,eAAgB,uBAC3B,GAbR,cASIoC,EAAQxO,UATZ,gBAe2BjY,KAAKikB,YAAYC,MAAW,IAAIC,QAAJ,yCAA8C9b,GACjG,CACI+b,OAAQ,MACRC,QAAS,CAAE,eAAgB,uBAC3B,GAnBR,cAeIoC,EAAQzO,OAfZ,yBAqB2B,KAAhByO,EAAQjO,KAAiC,KAAnBiO,EAAQzO,OAAgB,KAAOyO,GArBhE,iD,yIAwBA,WAAe1J,GAAf,uGACyB/c,KAAKikB,YAAYC,MAAW,IAAIC,QAAJ,wBACjD,CACIC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3Btf,KAAM6c,KAAKC,UAAU9E,MACrB,GANR,cACU1iB,EADV,OAQOA,EAAO,GAAGspB,QACT,GAAaA,QAAQ,6BAErB,GAAavnB,MAAM/B,EAAOksB,MAXlC,kBAaWlsB,GAbX,gD,0IAgBA,WAAgBiT,EAAkBoQ,GAAlC,2GAC2B1d,KAAKikB,YAAYC,MAAW,IAAIC,QAAJ,2BACnD,CACIC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3Btf,KAAM6c,KAAKC,UAAUnE,MACrB,GANR,UACU0F,EADV,OAQ+B,IAAxBA,EAASsD,WARhB,gBASQ,GAAatqB,MAAMgnB,EAASmD,MATpC,0BAUoC,IAAxBnD,EAASsD,WAVrB,iBAWQ,GAAaC,QAAQvD,EAASmD,MAXtC,yCAa+BvmB,KAAKqmB,OAAO/Y,EAAQ2O,mBAbnD,eAac1Q,EAbd,OAccqb,EAAWrb,EAASsZ,WAAU,SAAC1pB,GAAD,OAAgBA,EAAEkR,YAAciB,EAAQjB,aAC5Ed,EAASqb,GAAU9Y,cAAgB,IAAIgD,KACvCxD,EAAQQ,cAAgB,IAAIgD,KAhBpC,UAkBc9Q,KAAKikB,YAAYL,SAAjB,kDAAqEtW,EAAQ2O,kBAA7E,SAAuG,IAAI6I,SAASlD,KAAKC,UAAUtW,KAlBjJ,QAmBQ,GAAaoY,QAAQ,oCAnB7B,iCAsBWP,GAtBX,iD,yIAyBA,WAAa9V,GAAb,yGACyBtN,KAAKikB,YAAYC,MAAW,IAAIC,QAAJ,kCACjD,CACIC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3Btf,KAAM6c,KAAKC,UAAUvU,EAAQuZ,SAC7B,EAAO,iCANf,UACUxsB,EADV,QAQOA,EAAOysB,eAAgBzsB,EAAO0sB,wBAAwB1a,UAR7D,wBASQiB,EAAQjB,UAAYhS,EAAO0sB,wBAAwB1a,UAT3D,SAU+BrM,KAAKqmB,OAAO/Y,EAAQ2O,mBAVnD,cAUc1Q,EAVd,OAWQA,EAASzR,KAAKwT,GAXtB,UAYctN,KAAKikB,YAAYL,SAAjB,kDAAqEtW,EAAQ2O,kBAA7E,SAAuG,IAAI6I,SAASlD,KAAKC,UAAUtW,KAZjJ,QAcQ,GAAaoY,QAAQ,iCAd7B,wBAiBQ,GAAavnB,MAAb,kCAA8C/B,EAAO2sB,sBAAsBjS,KAAK,QAjBxF,iCAmBW1a,GAnBX,iD,iECjIiB,G,WAQjB,WAAY0qB,GAAyB,wBAP7B,KAAAkC,aAAoB,sBAAS,CACjCjf,SAAU,KAWP,KAAAD,MAAa,sBAAS/H,KAAKinB,cAJ9BjnB,KAAKilB,mBAAqBF,EAC1B/kB,KAAKknB,gBAAkB,IAAI,GAAelnB,KAAKilB,oB,mDAKnD,SAAYkC,GACR,OAAOnnB,KAAKinB,aAAajf,SAAS9H,QAAO,SAAC/E,GAAD,OAAgBgsB,EAAWhsB,Q,iBAGxE,SAAIkN,GACA,OAAOrI,KAAKinB,aAAajf,SAAS9H,QAAO,SAAC/E,GAAD,OAAgBA,EAAEkR,WAAahE,KAAW,K,kFAGvF,WAAkBA,EAAmBI,GAArC,8FACU6E,EAAUtN,KAAKkR,IAAI7I,GAD7B,SAEiBrI,KAAKknB,gBAAgB/W,YAAY7C,EAAS7E,GAF3D,wF,wIAKA,WAAYJ,EAAmBI,GAA/B,gGACU6E,EAAUtN,KAAKkR,IAAI7I,GACnB+e,EAAmBpnB,KAAKinB,aAAajf,SAAS9H,QAAO,SAAC/E,GAAD,OAAgBA,EAAE0Q,kBAAkBuF,WAAW3I,MAEvG2e,EAAiB5tB,OAAS,IACzBiP,GAAqB,IAAJ,OAAQ2e,EAAiB5tB,SALlD,SAOiBwG,KAAKknB,gBAAgB9W,MAAM9C,EAAS7E,GAPrD,wF,6IAUA,WAAiBsc,GAAjB,iGACwC/kB,KAAKknB,gBAAgBb,OAAOtB,GADpE,cACI/kB,KAAKinB,aAAajf,SADtB,OACwFvB,KAAI,SAACtL,GAAD,OAAgB1B,OAAO+qB,OAAO,IAAI,QAAWrpB,MADzI,kBAEW6E,KAAKinB,aAAajf,UAF7B,gD,uFAKA,SAAgB4T,GACZ,OAAO5b,KAAKinB,aAAajf,SAAS9H,QAAO,SAAC/E,GAAD,OAAgBA,EAAE0Q,mBAAqB+P,KAAY,K,gFAGhG,WAAgBvT,GAAhB,iGACiBrI,KAAKknB,gBAAgBzO,UAAUpQ,EAAUkP,YAD1D,wF,yIAIA,WAAewF,GAAf,iGACiB/c,KAAKknB,gBAAgBzJ,SAASV,GAD/C,wF,oIAIA,WAAUzP,GAAV,gGACU8Z,EAAmBpnB,KAAKinB,aAAajf,SAAS9H,QAAO,SAAC/E,GAAD,OAAgBA,EAAE0Q,kBAAkBuF,WAAW9D,EAAQzB,sBAE/Gub,EAAiB5tB,OAAS,IACzB8T,EAAQzB,mBAAR,WAAiCub,EAAiB5tB,SAJ1D,SAM8BwG,KAAKknB,gBAAgBG,OAAO/Z,GAN1D,cAMUjT,EANV,OAQOA,EAAOysB,cAAgBzsB,EAAO0sB,wBAAwB1a,WACrDrM,KAAKinB,aAAajf,SAASlO,KAAKwT,GATxC,kBAWWjT,GAXX,gD,0IAcA,WAAgBqjB,GAAhB,8FACUpQ,EAAUtN,KAAKsnB,gBAAgB5J,EAAU7R,mBADnD,SAEiB7L,KAAKknB,gBAAgBnJ,UAAUzQ,EAASoQ,GAFzD,wF,iEC1EiB,G,sCCCA,G,WAIjB,WAAY6J,GAAc,wBACtBvnB,KAAKwnB,WAAaD,EAClBvnB,KAAK+iB,UAAY,oB,oGAGd,WAAoC7B,GAApC,kGACG4B,EADH,UACiB9iB,KAAK+iB,UADtB,YACmC7B,GADnC,SAEiBlhB,KAAKkjB,YAAYJ,GAFlC,UAEGiB,EAFH,QAIAA,EAJA,yCAKQA,GALR,uBAOoB/jB,KAAKwnB,WAAWxqB,QAAQkkB,GAP5C,cAOGkC,EAPH,iBAQGpjB,KAAK4jB,SAASd,EAAU,IAAIgC,SAASlD,KAAKC,UAAUuB,KARvD,iCAUIA,GAVJ,iD,4IAaA,+GACGN,EADH,UACiB9iB,KAAK+iB,UADtB,oBAC2C/iB,KAAKwnB,WAAWrY,QAAQlL,IADnE,SAEiBjE,KAAKkjB,YAAYJ,GAFlC,UAEGiB,EAFH,QAIAA,EAJA,yCAKQA,GALR,uBAOoB/jB,KAAKwnB,WAAWrY,QAAQsY,OAP5C,cAOGrE,EAPH,iBAQGpjB,KAAK4jB,SAASd,EAAU,IAAIgC,SAASlD,KAAKC,UAAUuB,KARvD,iCAUIA,GAVJ,iD,wIAaA,+GACGN,EADH,UACiB9iB,KAAK+iB,UADtB,YACmC/iB,KAAKwnB,WAAW/H,KAAKZ,aAAaxe,cADrE,YACsFL,KAAKwnB,WAAWrY,QAAQlL,IAD9G,SAEiBjE,KAAKkjB,YAAYJ,GAFlC,UAEGiB,EAFH,QAIAA,EAJA,yCAKQA,GALR,uBAOoB/jB,KAAKwnB,WAAW/H,KAAKgI,OAPzC,cAOGrE,EAPH,iBAQGpjB,KAAK4jB,SAASd,EAAU,IAAIgC,SAASlD,KAAKC,UAAUuB,KARvD,iCAUIA,GAVJ,iD,+EAaA,SAAS7kB,GACZ,OAAOyB,KAAKwnB,WAAWE,SAAhB,wBAA0CnpB,M,+EAG7C,WAAeA,EAAuB6kB,GAAtC,uGACgBS,OAAOnL,KAAK1Y,KAAK+iB,WADjC,cACEC,EADF,gBAEEA,EAAMc,IAAIvlB,EAAK6kB,GAFjB,gD,8IAKA,WAAkB7kB,GAAlB,yGACgBslB,OAAOnL,KAAK1Y,KAAK+iB,WADjC,cACEC,EADF,gBAEgBA,EAAMe,MAAMxlB,GAF5B,UAEEwlB,EAFF,QAIDA,IAASA,EAAMV,GAJd,wBAKAvkB,QAAQ6oB,IAAI,QAAS5D,GALrB,UAMaA,EAAMP,OANnB,0F,iECtDS,G,WAArB,qCACY,KAAAoE,UAAiB,sBAAS,CAC9Bte,QAAS,IAAI,GACbkV,SAAU,CACNC,kBAAmB,MAIpB,KAAA1W,MAAa,sBAAS/H,KAAK4nB,W,0GAElC,WAAgBL,GAAhB,wFACIvnB,KAAK6nB,YAAc,IAAI,GAAYN,GACnCvnB,KAAK4nB,UAAUte,QAAQC,mBAAqBge,EAAO9H,KAAKZ,aAF5D,SAIU7e,KAAK8nB,cAJf,gD,4IAOA,8GACgD9nB,KAAK+nB,iBAAgB,GADrE,cACI/nB,KAAK4nB,UAAUte,QAAQmI,aAD3B,gBAE2CzR,KAAKgoB,YAAW,GAF3D,cAEIhoB,KAAK4nB,UAAUte,QAAQoK,QAF3B,gBAG6C1T,KAAKioB,aAAajoB,KAAK6nB,YAAYK,SAAS,cAAc,GAHvG,cAGIloB,KAAK4nB,UAAUte,QAAQ6K,UAH3B,iBAIiDnU,KAAKmoB,iBAAiBnoB,KAAK+H,MAAMuB,QAAQ6K,WAAW,GAJrG,eAIInU,KAAK4nB,UAAUte,QAAQ+F,cAJ3B,iBAK4CrP,KAAKooB,aAAY,GAL7D,eAKIpoB,KAAK4nB,UAAUte,QAAQ+e,SAL3B,iBAM6CroB,KAAKsoB,QAAQ,aAN1D,eAMItoB,KAAK4nB,UAAUte,QAAQ6J,UAN3B,iBAO4CnT,KAAKsoB,QAAQ,YAPzD,eAOItoB,KAAK4nB,UAAUte,QAAQmK,SAP3B,iBAQ+CzT,KAAKsoB,QAAQ,eAR5D,eAQItoB,KAAK4nB,UAAUte,QAAQkK,YAR3B,iBASiDxT,KAAKsoB,QAAQ,iBAT9D,eASItoB,KAAK4nB,UAAUte,QAAQiK,cAT3B,iBAUsDvT,KAAKuoB,YAAY,sBAVvE,QAUIvoB,KAAK4nB,UAAUpJ,SAASC,kBAV5B,wD,6IAaO,WAAoB9hB,GAApB,iGACUqD,KAAK6nB,YAAY3W,IAAjB,gCAA8ClR,KAAK4nB,UAAUte,QAAQoK,QAAQzP,GAA7E,iBAAwFtH,IADlG,wF,4IAIC,WAAkBI,GAAlB,iGACSiD,KAAK6nB,YAAY3W,IAAjB,mCAAiDnU,EAAjD,+BADT,wF,wIAIA,WAAc8Y,GAAd,uGACe7V,KAAK6nB,YAAY3W,IAAjB,uBAAqClR,KAAK4nB,UAAUte,QAAQoK,QAAQzP,GAApE,iBAA+E4R,IAD9F,cACE5C,EADF,yBAEIA,EAAmBY,MAAMpN,KAAI,SAAAtL,GAAC,OAAIA,EAAEyjB,aAFxC,gD,gJAKA,yHAAsB4J,EAAtB,yCACwBxoB,KAAK6nB,YAAYY,WADzC,UACEjX,EADF,OAGCA,IAAgBgX,EAHjB,sBAGwC,IAAIpsB,MAAM,iCAHlD,gCAKGoV,GALH,gD,0IAQA,yHAAiBgX,EAAjB,yCACcxoB,KAAK6nB,YAAYa,cAD/B,UACEnG,EADF,OAGCA,IAAOiG,EAHR,sBAG+B,IAAIpsB,MAAM,4BAHzC,gCAKGmmB,GALH,gD,2IAQA,uHAAkBiG,EAAlB,gCACAnU,EAAW,KACTkR,EAAavlB,KAAK6nB,YAAYK,SAAS,oBAE1C3C,EAJC,gCAKiBvlB,KAAK6nB,YAAY3W,IAAjB,mBAA8CqU,IAL/D,OAKAlR,EALA,iBAOCA,IAAYmU,EAPb,sBAOoC,IAAIpsB,MAAM,6BAP9C,gCASGiY,GATH,iD,4IAYA,WAAmBsU,GAAnB,4GAAwCH,EAAxC,yCACcxoB,KAAK6nB,YAAY3W,IAAjB,oBAAgDyX,IAD9D,UACEC,EADF,OAGCA,IAAOJ,EAHR,sBAG+B,IAAIpsB,MAAM,8BAHzC,gCAKGwsB,GALH,gD,iJAQA,WAAuB7V,GAAvB,gHAAgDyV,EAAhD,gCACEK,EAAgB,KAET,OAAT9V,QAAS,IAATA,KAAW8V,gBAAiB,UAAA9V,EAAU8V,qBAAV,eAAyBrvB,QAAS,GAH9D,iBAIQsK,EAAQ,EAJhB,YAImBA,EAAQiP,EAAU8V,cAAcrvB,QAJnD,oBAKUsvB,EALV,UAKmB/V,EAAU8V,cAAc/kB,UAL3C,aAKmB,EAAgCod,WAC3C4H,GAAqB,KAAXA,EANlB,6BAMiCD,EANjC,UAM0D7oB,KAAK6nB,YAAY3W,IAAsB4X,GANjG,yBAM+ChvB,KAN/C,wBAI2DgK,IAJ3D,0BAUyB,IAAzB+kB,EAAcrvB,SAAgBgvB,EAV9B,uBAUqD,IAAIpsB,MAAM,oCAV/D,iCAYGysB,GAZH,iD,iEC5ES,G,WAArB,qCACY,KAAAE,SAAgB,sBAAS,CAC7BhhB,MAAO,GACPihB,IAAK,KAOF,KAAA1f,QAAe,sBAAStJ,KAAK+oB,U,0GAEpC,WAAgBvJ,GAAhB,gGACIxf,KAAKqJ,KAAO,IAAI,GADpB,SAEUrJ,KAAKqJ,KAAK2W,UAAUR,GAF9B,cAIUhW,EAAkB,GAAQyf,aAAajpB,KAAKqJ,KAAKtB,MAAMuB,QAAQoK,QAAS,IACxEwV,EAAiB,IAAI,GAAe1f,EAAgB0S,YAL9D,SAOUgN,EAAe7B,OAAO7d,GAPhC,cASIxJ,KAAKuZ,KAAO,IAAI,GAAc/P,EAAgB2Y,gBAC9CniB,KAAK6Y,SAAW,IAAI,GAAcrP,EAAgB0S,YAClDlc,KAAK8H,QAAU,IAAI,GAAa0B,EAAgB0S,YAXpD,UAaUlc,KAAK8H,QAAQqhB,WAAW3f,EAAgB0S,YAblD,QAeIlc,KAAK+oB,SAAShhB,MAAQ,CAClBqhB,WAAYppB,KAAKqJ,KAAKtB,MAAMuB,QAAQC,mBACpCkI,aAAczR,KAAKqJ,KAAKtB,MAAMuB,QAAQmI,aACtCiC,QAAS1T,KAAKqJ,KAAKtB,MAAMuB,QAAQoK,QACjCS,UAAWnU,KAAKqJ,KAAKtB,MAAMuB,QAAQ6K,UACnCrM,QAAS9H,KAAKqJ,KAAKtB,MAAMuB,QAAQ+F,cACjCgZ,SAAUroB,KAAKqJ,KAAKtB,MAAMuB,QAAQ+e,SAClCgB,YAAa7f,GAtBrB,iD,wIA0BA,WAAcgW,GAAd,sGACUrZ,EAAQ,IAAImjB,EAClBnjB,EAAM4iB,SAASC,IAAMhpB,KAAK+oB,SAASC,IAFvC,SAI6BnF,OAAO0F,OAJpC,OAIUC,EAJV,yBAKqBA,GALrB,gEAKcjrB,EALd,kBAMcslB,OAAO4F,OAAOlrB,GAN5B,mKASU4H,EAAM6Z,UAAUR,GAT1B,iCAWWrZ,GAXX,gE,uFAcA,SAAgB5H,EAAaN,GAA4B,IAAhByrB,IAAgB,yDACrD1pB,KAAK+oB,SAASxqB,GAAON,EACrB+B,KAAK6G,OAAL,oBAAyBtI,GAAON,EAAOyrB,K,6BAG3C,SAAgBnrB,GACZ,OAAOyB,KAAK+oB,SAAShhB,MAAMxJ,K,oBAG/B,SAAOopB,GAA+C,IAAlC3uB,EAAkC,uDAAtB,KAAM0wB,IAAgB,yDAClD1pB,KAAK+oB,SAASC,IAAIlvB,KAAlB,WAA0B,IAAIgX,MAAO6Y,iBAArC,cAA2DhC,GAA3D,OAAiE3uB,EAAmB,MAAH,OAAT0wB,EAAkB9H,KAAKC,UAAU7oB,GAAgBA,GAAS,S,sECpErH,G,0KACnB,WACE,IAAM4wB,EAAQ5pB,KAAK4pB,MACbC,EAAMD,EAAMC,IACZC,EAAUD,EAAIE,OAEpBF,EAAIE,OAAS,WACTF,EAAIG,OACJH,EAAII,YAAcJ,EAAIK,YACtBL,EAAIM,WAAa,EACjBN,EAAIO,cAAgB,EACpBP,EAAIQ,cAAgB,EACpBP,EAAQ3vB,MAAM6F,KAAMsqB,WACpBT,EAAIU,WAGR,0DAAWpwB,MAAM6F,KAAMsqB,WACvBT,EAAIE,OAASD,M,GAjBuB,SAoBxC,GAAW7lB,GAAK,a,mtBCbhB,QAAQumB,SAAS,IA8DjB,wCACC,mHACOC,EAAM,uBAAUC,IAEtB,QAAQ5S,IAAI,QAAU,QAAc,QAAY,QAAU,QAAO,QAAgB,QAAc,QAAQ,QAAS,QAAQ,QAAe,QACvI,QAAa,QAAW,QAAyB,QAAuB,SACxE2S,EAAIpY,IAAI,QAAU,CAAEsY,QAAQ,EAAMC,WAAY,aAC9CH,EAAIpY,IAAI,SACRoY,EAAIpY,IAAI,KAAgB,CACvBwY,MAAO,UACPC,YAAa,MACbC,UAAW,MACX1W,SAAU,MACV2W,YAAY,EACZC,SAAS,EACTC,YAAY,EACZC,WAAY,CACXC,MAAO,MACPC,QAAS,KACTC,YAAa,OAIfb,EAAIc,UAAU,oBAAqB,SACnCd,EAAIc,UAAU,YAAa,SAC3Bd,EAAIc,UAAU,eAAgB,SAC9Bd,EAAIc,UAAU,SAAU,SACxBd,EAAIc,UAAU,SAAU,SACxBd,EAAIc,UAAU,WAAY,SAC1Bd,EAAIc,UAAU,OAAQ,SACtBd,EAAIc,UAAU,QAAS,SACvBd,EAAIc,UAAU,WAAY,SAC1Bd,EAAIc,UAAU,SAAU,SACxBd,EAAIc,UAAU,cAAe,SAC7Bd,EAAIc,UAAU,cAAe,SAC7Bd,EAAIc,UAAU,YAAa,SAC3Bd,EAAIc,UAAU,SAAU,SACxBd,EAAIc,UAAU,UAAW,SACzBd,EAAIc,UAAU,WAAY,SAC1Bd,EAAIc,UAAU,WAAY,SAC1Bd,EAAIc,UAAU,QAAS,SACvBd,EAAIc,UAAU,gBAAiB,SAC/Bd,EAAIc,UAAU,UAAW,SACzBd,EAAIc,UAAU,cAAe,SAC7Bd,EAAIc,UAAU,cAAe,SAC7Bd,EAAIc,UAAU,YAAa,SAC3Bd,EAAIc,UAAU,OAAQ,SACtBd,EAAIc,UAAU,cAAe,SAC7Bd,EAAIc,UAAU,eAAgB,SAC9Bd,EAAIc,UAAU,WAAY,SAC1Bd,EAAIc,UAAU,cAAe,SAC7Bd,EAAIc,UAAU,kBAAmB,SACjCd,EAAIc,UAAU,MAAO,SACrBd,EAAIc,UAAU,cAAe,SAC7Bd,EAAIc,UAAU,WAAY,SAC1Bd,EAAIc,UAAU,gBAAiB,SAC/Bd,EAAIc,UAAU,UAAW,SACzBd,EAAIc,UAAU,WAAY,SAC1Bd,EAAIc,UAAU,YAAa,SAC3Bd,EAAIc,UAAU,cAAe,SAC7Bd,EAAIc,UAAU,UAAW,SACzBd,EAAIc,UAAU,UAAW,SACzBd,EAAIc,UAAU,WAAY,SAC1Bd,EAAIc,UAAU,MAAO,SACrBd,EAAIc,UAAU,WAAY,SAC1Bd,EAAIc,UAAU,WAAY,SAC1Bd,EAAIc,UAAU,QAAS,SACvBd,EAAIe,UAAU,UAAW,SACzBf,EAAIe,UAAU,SAAU,SACxBf,EAAIe,UAAU,iBAAkB,SAE1BC,EAAmB,IAAI,GACvBC,EAAUC,eAAeC,UACzBC,EAAgB9U,aAAaC,QAAb,qCAAmD0U,IACzED,EAAiBpa,gBAAgB,YAAauQ,KAAKkK,MAAMJ,IAAU,GACnED,EAAiBpa,gBAAgB,gBAAiBwa,GA1EnD,UA2E0B,IAAWE,OAAOC,QA3E5C,QA2EOxM,EA3EP,OA6ECiL,EAAItK,QAAQ,QAASsL,GACrBhB,EAAItK,QAAQ,aAAcX,GAE1BiL,EAAIwB,OAAOC,aAAe,SAASrtB,EAAKstB,EAAIzb,GAC3C,IAAMvU,EAAQ,IAAIC,MAAMyC,GAExBC,QAAQ3C,MAAMA,GACRujB,OAAQE,UAAUwM,OAClB1M,OAAQC,OAAO7H,IAAI,CACxB/J,SAAU,QACV4U,QAAS,QACTC,OAAQzmB,EAAMW,QACd+lB,KAAM,MAGPM,MAAM,IAAIgB,QAAJ,6BAAkCuH,GACxC,CACCtH,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3Btf,KAAM6c,KAAKC,UAAU4J,EAAiBniB,aAIxCtK,OAAOqtB,iBAAiB,sBAAsB,SAAShwB,GACtDyC,QAAQ3C,MAAME,GACCqjB,OAAQE,UAAUwM,OAC3B1M,OAAQC,OAAO7H,IAAI,CACxB/J,SAAU,QACV4U,QAAS,QACTC,OAAQvmB,EAAMiwB,OAAOxvB,QACrB+lB,KAAM,MAGPM,MAAM,IAAIgB,QAAJ,6BAAkCuH,GACxC,CACCtH,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3Btf,KAAM6c,KAAKC,UAAU4J,EAAiBniB,eAIxCmhB,EAAI8B,MAAM,QAtHX,2CADD,I,kGCxEMC,G,wCAAM,EAAQ,SAECC,E,qCACV,EAAAC,IAAW,CACdC,MAAO,SAACC,EAAmBC,EAAgBC,EAAgBnE,EAAqB/M,EAAoBmR,GAChG,IAAMjwB,EAAU,IAAI0vB,EACdQ,GAAW,IAAIlc,MAAOmc,cAAc/V,MAAM,KAAK,GAAGS,QAAQ,UAAW,IAwC3E,OAtCA7a,EAAQowB,cAAc,OACtBpwB,EAAQqwB,IAAI,QAAS,SACrBrwB,EAAQqwB,IAAI,QAAS,QACrBrwB,EAAQqwB,IAAI,QAAS,QACrBrwB,EAAQqwB,IAAI,QAAS,QACrBrwB,EAAQqwB,IAAI,QAASH,GACrBlwB,EAAQqwB,IAAI,UAAW,OACvBrwB,EAAQqwB,IAAI,UAAW,OACvBrwB,EAAQqwB,IAAI,SAAUH,GACtBlwB,EAAQqwB,IAAI,SAAU,KACtBrwB,EAAQqwB,IAAI,SAAU,OAEtBrwB,EAAQowB,cAAc,OACtBpwB,EAAQqwB,IAAI,UAAWP,GACvB9vB,EAAQqwB,IAAI,UAAW,OACvBrwB,EAAQqwB,IAAI,UAAWL,GACvBhwB,EAAQqwB,IAAI,UAAWN,GAEvB/vB,EAAQowB,cAAc,OACtBpwB,EAAQqwB,IAAI,QAAS,KACrBrwB,EAAQqwB,IAAI,SAAUxE,GAEtB7rB,EAAQowB,cAAc,OACtBpwB,EAAQqwB,IAAI,QAAS,iBACrBrwB,EAAQqwB,IAAI,QAASH,GACrBlwB,EAAQqwB,IAAI,SAAUvR,GACtB9e,EAAQqwB,IAAI,SAAU,MACtBrwB,EAAQqwB,IAAI,SAAU,MAEtBrwB,EAAQowB,cAAc,OACtBpwB,EAAQqwB,IAAI,QAAS,KACrBrwB,EAAQqwB,IAAI,QAAS,MACrBrwB,EAAQqwB,IAAI,QAAS,YACrBrwB,EAAQqwB,IAAI,QAAS,KACrBrwB,EAAQqwB,IAAI,UAAW,OACvBrwB,EAAQqwB,IAAI,UAAW,UACvBrwB,EAAQqwB,IAAI,UAAWJ,GAEhBjwB,EAAQswB,SAEnBC,KAAM,WAAF,8CAAE,WAAMvwB,GAAN,iFACFgC,QAAQ6oB,IAAI7qB,GADV,2CAAF,sDAAE,K,qDC/CLsC,MAAM,0C,GACFA,MAAM,uB,EACP,yBAA8D,OAAzDA,MAAM,sBAAqB,4BAAwB,G,GAEjDD,KAAK,QAAQC,MAAM,qB,wDAJlC,yBAQM,MARN,EAQM,CAPF,yBAMM,MANN,EAMM,CALF,EAEA,yBAEQ,QAFR,EAEQ,CADJ,yBAA0F,SAAnFD,KAAK,WAAWC,MAAM,oBAAqB6E,GAAE,aAAiB,EAAAoB,SAASgJ,U,yDCD/E,iBAAgB,CAC3BtR,KAAM,yBACN8C,MAAO,CACHwF,SAAU5L,QAEdka,QAL2B,WAMvB,IAAMtO,EAAqBrF,KAAKqF,SAC1BsP,EAAQ/Y,SAASgZ,cAAT,qBAAqCvP,EAASgJ,WACxDpQ,EAAQ,oBACRqvB,EAAM,EAEVjoB,EAASkoB,kBAAkB3Z,SAAQ,SAACa,GAC5B6Y,EAAM,IAAM,GACZrvB,GAAS,+BAAJ,OAAmCwW,EAAKrU,UAAxC,aAAsDqU,EAAKnU,MAA3D,SACLrC,GAAS,QACLqvB,IAAQjoB,EAASkoB,kBAAkB/zB,SAAQyE,GAAS,gCAExDA,GAAS,+BAAJ,OAAmCwW,EAAKrU,UAAxC,aAAsDqU,EAAKnU,MAA3D,SAEDgtB,IAAQjoB,EAASkoB,kBAAkB/zB,QAAU8zB,EAAM,IAAM,IACzDrvB,GAAS,sCAEjBqvB,OAGJ3Y,EAAME,UAAY5W,KC3B1B,EAAO6C,OAASA,EAED,U,4kBCWA,sBAAgB,CAC3B/D,KAAM,iBACNkS,WAAY,CACRue,oBAAA,OACAC,qBAAA,OACAC,6BAAA,OACAC,gBAAA,OACAC,uBAAA,QAEJtoB,MAAO,WACH,IAAMa,EAAQ,oBAAO,SACfgJ,EAAWhJ,EAAciJ,gBAAgB,eAE/C,MAAO,CACHjJ,QACAgJ,YAGRtP,MAAO,CACHyN,QAAS,QAEbtU,KAAM,WACF,MAAO,CACHmD,MAAO,KACP+R,UAAW,GACXO,kBAAmB,KACnBE,mBAAoB,EACpBV,gBAAgB,EAChBc,qBAAqB,IAGvBxI,QA/BqB,WA+Bd,+JACT,EAAK2J,UAAUjD,QACf,EAAKgB,gBAAiB,EAFb,kBAKkB,EAAK9H,MAAM0S,SAASC,WAAW,EAAKxL,QAAQzB,mBAL9D,OAKL,EAAKqC,UALA,OAML,EAAKO,kBAAoB,EAAKP,UAAU,GACxC,EAAK/H,MAAMkL,gBAAgB,mBAAoB,EAAK5C,mBAP/C,qDAUL,EAAKzD,MAAM,QAAX,MACA,EAAK7O,MAAL,KACAZ,QAAQE,OAAR,MAZK,QAeT,EAAKyU,UAAUI,SACf,EAAKrC,gBAAiB,EAhBb,6DAkBbzM,SAAU,CACN8M,gBADM,WAEF,IAAIvK,EAAS,GAAH,OAAM/D,KAAK6tB,iBAAiB7tB,KAAKyO,kBAAkBgW,yBAAnD,cAAiF,OAAkBzkB,KAAKyO,kBAAkBF,YAAYgJ,WAAtI,wBAEV,GAAG,CAAC,EAAG,GAAG5M,SAAS3K,KAAKyO,kBAAkBF,aAAevO,KAAKyO,kBAAkBjI,sBAAsBhN,OAAS,EAAE,CAC7G,IAAMs0B,EAA2B9tB,KAAKyO,kBAAkBjI,sBAAsBtG,QAAO,SAAC6tB,GAAD,MAA8D,gCAAhCA,EAAGnpB,WAAWvE,iBAAiD,GAElL,GAAIytB,EAA0B,SACpBE,EAAW,UAAGF,EAAyBnrB,gCAA5B,aAAG,EAAmDnJ,OACvEuK,GAAU,MAAJ,cAAU+pB,QAAV,IAAUA,GAAV,UAAUA,EAA0BnrB,yBAAyBqrB,EAAc,UAA3E,aAAU,EAAqElrB,sBAClFiB,GAAU,SAGrB,OAAOA,GAEXvE,kBAfM,WAgBF,OAAIQ,KAAKyO,kBAAkBjI,sBAAsBhN,OAAS,EAC/CwG,KAAKyO,kBAAkBjI,sBAAsBtG,QAAO,SAAC6tB,GAAD,MAA8D,gCAAhCA,EAAGnpB,WAAWvE,iBAAiD,GAEjJ,MAEfiM,UArBM,WAqBG,WACCoD,EAAQ,CACV,CACI1M,MAAO,OACPiJ,KAAM,YACN0D,QAAS,WAAF,8CAAE,8GAAoB,EAAKse,aAAzB,2CAAF,qDAAE,IAEb,CACIjrB,MAAO,WACPiJ,KAAM,iBACN0D,QAAS,WAAF,8CAAE,8GAAoB,EAAKue,iBAAzB,2CAAF,qDAAE,KAWjB,MAPwD,iBAArDluB,KAAKmG,MAAMkD,KAAKtB,MAAMuB,QAAQC,oBAC7BmG,EAAMG,QAAQ,CACV7M,MAAO,oBACPiJ,KAAM,qBACN0D,QAAS,WAAF,8CAAE,8GAAoB,EAAKwe,eAAzB,2CAAF,qDAAE,KAGVze,IAGf5P,QAAS,CACLsO,kBADK,SACa/I,GACd,gBAAUrF,KAAK6tB,iBAAiBxoB,EAASof,yBAAzC,uBAAgF,OAAkBpf,EAASkJ,YAAYgJ,WAAvH,aAEJpJ,iBAJK,SAIY9R,GACb2D,KAAKyO,kBAAoBzO,KAAKkO,UAAU7R,EAAMqG,OAC9C1C,KAAKmG,MAAMkL,gBAAgB,mBAAoBrR,KAAKyO,oBAExDD,yBARK,SAQoBnS,GACrB2D,KAAKgQ,MAAL,6BAAiChQ,KAAKyO,kBAAkBJ,WAAYnC,OAAO7P,IAEzE2S,aAXD,WAWa,8KAEV,EAAK7I,MAAMU,OAAX,uCAAkD,EAAKyG,QAAQjB,YAFrD,SAGkB,EAAKlG,MAAM2B,QAAQ2Q,UAAU,EAAKnL,QAAQjB,WAH5D,OAGJ0L,EAHI,OAIV/Y,OAAO0Z,KAAKX,EAAcS,KAJhB,mDAOVjd,QAAQE,OAAR,MAPU,4DAUZmT,kBArBD,SAqBmBvS,GAAU,0KAEpBgJ,EAAW,EAAK6I,UAAUhO,QAAO,SAACkT,GAAD,OAAiBA,EAAE/E,WAAa,EAAKI,kBAAkBJ,YAAU,GAEpGhJ,EAASqJ,QAAU,EAAKC,mBAJF,wBAKtB,EAAKxI,MAAMU,OAAX,oCAA+C,EAAK4H,kBAAkBJ,SAAtE,uBAA6F,EAAKM,qBAClG,EAAKI,qBAAsB,EAC3B,EAAKmB,UAAUjD,QAPO,SAShB,EAAK9G,MAAM0S,SAASuM,SAAS,EAAK3W,kBAAkBJ,SAAU,EAAKM,oBATnD,OAWtB,EAAKuB,UAAUI,SACf,EAAKvB,qBAAsB,EAZL,QAe1B,EAAKiB,MAAL,6BAAiC,EAAKvB,kBAAkBJ,WAAYnC,OAAO7P,GAfjD,qDAkB1Bd,QAAQE,OAAR,MAlB0B,6DAqB5B0yB,aA1CD,WA0Ca,wMAEV,EAAKhoB,MAAMU,OAAO,+BAElB,EAAKqJ,UAAUjD,QAJL,SAKW,EAAK9G,MAAM0S,SAASwM,UAAU,EAAK5W,kBAAkBJ,UALhE,cAKJ+f,EALI,OAMJjf,EAAU,EAAKhJ,MAAMkD,KAAKtB,MAAMuB,QAAQoK,QACxCX,EAAY,EAAK5M,MAAMkD,KAAKtB,MAAMuB,QAAQ6K,UAC1CyY,EARI,UAQQzd,EAAQ+F,WAAWhV,QAAO,SAAC5G,GAAD,OAAmBA,EAAEqZ,OAAO0b,SAAS,iBAAe,UARtF,aAQQ,EAAkFpwB,MAC9F4uB,EATI,UASK1d,EAAQpS,KAAK,UATlB,aASK,EAAiB6U,MAAM,GAChCkb,EAVI,UAUK3d,EAAQpS,KAAK,UAVlB,aAUK,EAAiB4U,OAC1BgX,EAXI,UAWU5V,EAAUmC,WAAWhV,QAAO,SAAC5G,GAAD,OAAmBA,EAAEqZ,OAAO0b,SAAS,eAAa,UAXxF,aAWU,EAAkFpwB,MAChG2d,EAZI,UAYY,EAAKnN,kBAAkBJ,SAZnC,YAY+C,OAAkB,EAAKI,kBAAkBF,YAAYlO,eACxG0sB,EAASuB,EAAOC,KAAKH,GAAQ7W,SAAS,UACtCza,EAAU,OAAW4vB,IAAIC,MAAMC,EAAWC,EAAQC,EAAQnE,EAAa/M,EAAYmR,GAEzF,EAAK5mB,MAAMU,OAAO,yBAA0B/J,GAhBlC,UAkBJ,OAAW4vB,IAAIW,KAAKvwB,GAlBhB,QAmBV,EAAKoT,UAAUI,SAnBL,qDAsBV/U,QAAQE,OAAR,MAtBU,6DAyBZyyB,eAnED,WAmEe,4LAEZ,EAAK/nB,MAAMU,OAAX,6BAAwC,EAAK4H,kBAAkBJ,WAE/D,EAAK6B,UAAUjD,QAJH,SAKS,EAAK9G,MAAM0S,SAASwM,UAAU,EAAK5W,kBAAkBJ,UAL9D,OAKN+f,EALM,OAMNI,EAAO,IAAIC,KAAK,CAAC,IAAIC,WAAWN,IAAU,CAAEzxB,KAAM,oBAClDgyB,EAAO/yB,SAASC,cAAc,KAC9B+yB,EAAa,OAAkB,EAAKngB,kBAAkBF,YACtDgU,EAAe,EAAKpc,MAAMiJ,gBAAgB,eAC1Cyf,EAAgB,IAAI/d,KAAK,EAAKrC,kBAAkBgW,yBAChDqK,EAAc,IAAIhe,KAAK,EAAKrC,kBAAkBsgB,uBAC9CC,EAA0C,IAAhCH,EAAc9d,cAAd,UACP8d,EAAc7d,WAAa,GADpB,OACwB6d,EAAc5d,WADtC,OACkD4d,EAAc9d,eADhE,UAEP+d,EAAY9d,WAAa,GAFlB,OAEsB8d,EAAY7d,WAFlC,OAE8C6d,EAAY/d,eAE1E4d,EAAKM,KAAOC,IAAIC,gBAAgBX,GAChCG,EAAKS,SAAL,UAAmB7M,EAAIhS,MAAvB,YAAgCqe,EAAhC,YAA8CI,EAA9C,QACAL,EAAKU,QACL,EAAKnf,UAAUI,SAnBH,qDAsBZ/U,QAAQE,OAAR,MAtBY,6DAyBdwyB,WA5FD,WA4FW,kLAER,EAAK9nB,MAAMU,OAAX,yBAAoC,EAAK4H,kBAAkBJ,WAC3D,EAAK6B,UAAUjD,QAHP,SAIa,EAAK9G,MAAM0S,SAASwM,UAAU,EAAK5W,kBAAkBJ,UAJlE,OAIF+f,EAJE,OAKFI,EAAO,IAAIC,KAAK,CAAC,IAAIC,WAAWN,IAAU,CAAEzxB,KAAM,oBAClD2yB,EAAMtwB,OAAO0Z,KAAK,eAExB4W,EAAIjb,SAAW6a,IAAIC,gBAAgBX,GACnCc,EAAIC,QACJ,EAAKrf,UAAUI,SAVP,qDAaR/U,QAAQE,OAAR,MAbQ,6DAgBhByQ,OA5GK,SA4GE7P,GACH,IAAM6O,EAAWlL,KAAKgQ,MAAL,+BAAmChQ,KAAKyO,kBAAkBJ,WAC3EnD,EAAIgB,OAAO7P,GACXA,EAAM4T,mBAEV4d,iBAjHK,SAiHY2B,GACb,OAAO,IAAI1e,KAAK0e,GAAUvC,cAAc/V,MAAM,KAAK,GAAGS,QAAQ,KAAM,W,qJC5N3D7P,E,WAArB,oCAEI,KAAAuE,UAAoB,KAEpB,KAAA8N,WAAqB,KACrB,KAAA1J,aAAuB,KAEvB,KAAA4J,aAAuB,KACvB,KAAAoV,eAAwB,KAExB,KAAAzV,WAAqB,KACrB,KAAAxJ,aAAuB,KAEvB,KAAA+J,cAAwB,KACxB,KAAAmV,gBAAyB,KAEzB,KAAAjV,cAAwB,KACxB,KAAAkV,gBAA0B,KAE1B,KAAAhV,iBAA2B,KAC3B,KAAAiV,mBAA6B,KAE7B,KAAAtW,OAAiB,KACjB,KAAAuW,SAAmB,KAEnB,KAAAhW,YAAsB,KACtB,KAAAiW,cAAwB,KAExB,KAAA/T,oBAAqC,IAAIxM,MACzC,KAAAwgB,qBAA+B,KAE/B,KAAApiB,WAAmB,KACnB,KAAAC,iBAAyB,KACzB,KAAAC,iBAAyB,KACzB,KAAAC,cAAsB,KACtB,KAAAkiB,YAAsB,KACtB,KAAAhiB,KAAe,KACf,KAAAiiB,cAAwB,KACxB,KAAApkB,kBAA4B,KAC5B,KAAAoQ,kBAA4B,K,mDAEpB,SAAarL,GACjB,OAAI,CAAC,EAAG,MAAMjG,SAASiG,EAAKG,gBAA2B,OAATH,I,gBAMlD,WACI,MAAO,CACHqL,kBAAmBjc,KAAKic,kBACxBpQ,kBAAmB7L,KAAK6L,kBACxByN,OAAQtZ,KAAKsZ,OAAStZ,KAAKsZ,QAAU,EACrC4W,YAAalwB,KAAK6Z,YAAc7Z,KAAK6Z,aAAe,EACpDG,WAAYha,KAAKga,WAAaha,KAAKga,YAAc,EACjDG,WAAYna,KAAKma,WAAana,KAAKma,YAAc,EACjDE,aAAcra,KAAKqa,aAAera,KAAKqa,cAAgB,EACvDE,cAAeva,KAAKua,cAAgBva,KAAKua,eAAiB,EAC1DE,cAAeza,KAAKya,cAAgBza,KAAKya,eAAiB,EAC1DE,iBAAkB3a,KAAK2a,iBAAmB3a,KAAK2a,kBAAoB,EACnEoB,oBAAqB/b,KAAK+b,uB,gBAIlC,WACI,IAAMgE,EAAM,IAAIjP,KACVvK,EAAU,IAAIuK,KAAK9Q,KAAK2N,YACxBwiB,EAAe,IAAIrf,KAAK9Q,KAAK4N,kBAC7BwiB,EAAe,IAAItf,KAAK9Q,KAAK6N,kBAC7B6P,EAAY,IAAI5M,KAAK9Q,KAAK8N,eAGhC,GAAG9N,KAAKqwB,aAAa3S,IAAe1d,KAAKgO,MAAQhO,KAAKgO,KAAO,EACzD,OAAO,OAAYyB,WAGvB,IAAIzP,KAAKqwB,aAAaF,GAAc,CAChC,IAAMG,EAAWvQ,EAAIwB,UAAYhb,EAAQgb,UACnCgP,EAAUD,EAAW,MAE3B,GAAIC,GAAW,EAAG,OAAO,OAAYna,cAIzC,GAAGpW,KAAKqwB,aAAaF,GAAc,CAC/B,IAAI,GAAW,IAAIrf,MAAOyQ,UAAY4O,EAAa5O,UAEhDvhB,KAAKqwB,aAAaD,KACjB,GAAW,IAAItf,MAAOyQ,UAAY6O,EAAa7O,WAEnD,IAAM,EAAU,EAAW,MAE3B,GAAI,GAAW,GAAI,OAAO,OAAYlL,cAI1C,GAAGrW,KAAKqwB,aAAaD,GAAc,CAC/B,IAAM,GAAW,IAAItf,MAAOyQ,UAAY6O,EAAa7O,UAC/C,EAAU,EAAW,MAE3B,GAAI,GAAW,IAAM,GAAW,GAAI,OAAO,OAAYjL,MAClD,GAAI,GAAW,GAAI,OAAO,OAAYC,SAI/C,OAAO,OAAYJ,e,wCC7G3B,IAAYqa,EAAZ,2CAAYA,GACR,0BACA,0BACA,gCACA,8CACA,gCACA,gCACA,oBACA,8BACA,8BATJ,CAAYA,MAAiB,M,kCCA7B,IAAKC,GAAL,SAAKA,GACD,kCACA,wCACA,wCACA,wBACA,8BACA,mCANJ,CAAKA,MAAW,KASD,U,qDCRJrxB,MAAM,0C,GACFA,MAAM,oBAAoBD,KAAK,Y,GAC9BA,KAAK,O,EACL,yBAA2D,MAAvDA,KAAK,OAAOG,QAAQ,KAAI,8BAA0B,G,EAItD,yBAAyE,MAArEH,KAAK,OAAOG,QAAQ,KAAI,4CAAwC,G,GAGrEF,MAAM,oBAAoBD,KAAK,Y,GAC9BC,MAAM,GAAGC,SAAS,IAAIF,KAAK,O,EAC3B,yBAAsE,MAAlEA,KAAK,OAAOG,QAAQ,KAAI,yCAAqC,G,SAG7DH,KAAK,OAAOG,QAAQ,K,SAMpBH,KAAK,OAAOG,QAAQ,K,SAOpBH,KAAK,OAAOG,QAAQ,K,GAIxBF,MAAM,GAAGC,SAAS,IAAIF,KAAK,O,EAC3B,yBAA+D,MAA3DA,KAAK,OAAOG,QAAQ,KAAI,kCAA8B,G,GACtDH,KAAK,Q,GAELA,KAAK,OAAOG,QAAQ,K,wDApCpC,yBA0CQ,QA1CR,EA0CQ,CAzCJ,yBAQQ,QARR,EAQQ,CAPJ,yBAMK,KANL,EAMK,CALD,G,2BACA,yBAEK,2CAF2B,EAAAE,kBAAkBmD,0BAAwB,SAAnDC,G,gCAAvB,yBAEK,MAFDzD,KAAK,OAAoEZ,IAAKqE,EAAMC,O,6BAClFD,EAAMC,OAAO,UACnB,M,MACA,MAGR,yBA+BQ,QA/BR,EA+BQ,CA9BJ,yBAoBK,KApBL,EAoBK,CAnBD,G,2BACA,yBAA6H,2CAA7F,EAAArD,kBAAkBmD,0BAAwB,SAAnDC,G,gCAAvB,yBAA6H,MAAzHzD,KAAK,OAAoEZ,IAAKqE,EAAMC,O,6BAASD,EAAME,iBAAe,M,MAEnF,EAAAtD,kBAAkBC,YAAYixB,cAA+D,IAA/C,EAAAlxB,kBAAkBC,YAAYkxB,YAAY9vB,MAMpF,EAAArB,kBAAkBC,YAAYixB,c,yBAArE,yBAKK,KALL,EAAmF,kCACjD,6BAAE,EAAAlxB,kBAAkBC,YAAYkxB,YAAYhxB,SAAS,2CAAwC,6BAAE,EAAAH,kBAAkBC,YAAYkxB,YAAY9vB,OAAO,+BACpJ,6BAAE,EAAArB,kBAAkBC,YAAYixB,aAAa/wB,SAAS,gBAAa,6BAAE,EAAAH,kBAAkBC,YAAYixB,aAAa/wB,QAAU,EAAAH,kBAAkBC,YAAYkxB,YAAYhxB,SAAS,4EAC/H,6BAAE,EAAAH,kBAAkBC,YAAYixB,aAAa7vB,OAAO,kBAClH,6BAAE,EAAArB,kBAAkBC,YAAYixB,aAAaE,qBAAmB,K,yBAG9E,yBAEK,KAFL,EAAmC,2CACQ,6BAAE,EAAApxB,kBAAkBC,YAAYkxB,YAAYhxB,SAAS,mDAChG,K,yBAfA,yBAIK,KAJL,EAAwI,2CAC7F,6BAAE,EAAAH,kBAAkBC,YAAYkxB,YAAYhxB,SAAS,+FAChE,6BAAE,EAAAH,kBAAkBC,YAAYkxB,YAAY9vB,OAAO,0BAC/E,6BAAE,EAAArB,kBAAkBC,YAAYoxB,cAAc,EAAArxB,kBAAkBC,YAAYkxB,YAAY9vB,MAAK,GAAMiwB,MAAMzwB,eAAW,MAc5H,yBAQK,KARL,EAQK,CAPD,EACA,yBAAsE,KAAtE,EAAsE,6BAApD,EAAAb,kBAAkB0C,6BAA2B,I,2BAC/D,yBAAyG,2CAAzE,EAAA1C,kBAAkBmD,yBAAyBnJ,OAAM,YAA1DoJ,G,gCAAvB,yBAAyG,MAArGzD,KAAK,OAA+EZ,IAAKqE,O,MAC7F,yBAGK,KAHL,EAA4B,8FACkE,6BAAE,EAAApD,kBAAkBC,YAAYsxB,kBAAkBpxB,SAAS,WAC/I,6BAAE,EAAAH,kBAAkBC,YAAYsxB,kBAAkBlwB,OAAO,gBACnE,S,gBCrCD,iBAAgB,CAC3B9D,KAAM,+BACN8C,MAAO,CACHL,kBAAmB/F,UCH3B,EAAOqH,OAASA,EAED","file":"js/index.f2fdc45a.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"index\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// script path function\n \tfunction jsonpScriptSrc(chunkId) {\n \t\treturn __webpack_require__.p + \"js/\" + ({}[chunkId]||chunkId) + \".\" + {\"chunk-2d21e38c\":\"7c91f610\"}[chunkId] + \".js\"\n \t}\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId) {\n \t\tvar promises = [];\n\n\n \t\t// JSONP chunk loading for javascript\n\n \t\tvar installedChunkData = installedChunks[chunkId];\n \t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n \t\t\t// a Promise means \"currently loading\".\n \t\t\tif(installedChunkData) {\n \t\t\t\tpromises.push(installedChunkData[2]);\n \t\t\t} else {\n \t\t\t\t// setup Promise in chunk cache\n \t\t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\t\tinstalledChunkData = installedChunks[chunkId] = [resolve, reject];\n \t\t\t\t});\n \t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n \t\t\t\t// start chunk loading\n \t\t\t\tvar script = document.createElement('script');\n \t\t\t\tvar onScriptComplete;\n\n \t\t\t\tscript.charset = 'utf-8';\n \t\t\t\tscript.timeout = 120;\n \t\t\t\tif (__webpack_require__.nc) {\n \t\t\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n \t\t\t\t}\n \t\t\t\tscript.src = jsonpScriptSrc(chunkId);\n\n \t\t\t\t// create error before stack unwound to get useful stacktrace later\n \t\t\t\tvar error = new Error();\n \t\t\t\tonScriptComplete = function (event) {\n \t\t\t\t\t// avoid mem leaks in IE.\n \t\t\t\t\tscript.onerror = script.onload = null;\n \t\t\t\t\tclearTimeout(timeout);\n \t\t\t\t\tvar chunk = installedChunks[chunkId];\n \t\t\t\t\tif(chunk !== 0) {\n \t\t\t\t\t\tif(chunk) {\n \t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n \t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n \t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n \t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n \t\t\t\t\t\t\terror.type = errorType;\n \t\t\t\t\t\t\terror.request = realSrc;\n \t\t\t\t\t\t\tchunk[1](error);\n \t\t\t\t\t\t}\n \t\t\t\t\t\tinstalledChunks[chunkId] = undefined;\n \t\t\t\t\t}\n \t\t\t\t};\n \t\t\t\tvar timeout = setTimeout(function(){\n \t\t\t\t\tonScriptComplete({ type: 'timeout', target: script });\n \t\t\t\t}, 120000);\n \t\t\t\tscript.onerror = script.onload = onScriptComplete;\n \t\t\t\tdocument.head.appendChild(script);\n \t\t\t}\n \t\t}\n \t\treturn Promise.all(promises);\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// on error function for async loading\n \t__webpack_require__.oe = function(err) { console.error(err); throw err; };\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","module.exports = __webpack_public_path__ + \"img/logo_anhc-foto-white.7ce0a0cb.svg\";","<template>\r\n    <table role=\"table\" class=\"p-datatable p-component p-datatable-sm\">\r\n        <thead class=\"p-datatable-thead\" role=\"rowgroup\">\r\n            <tr role=\"row\">\r\n                <th role=\"cell\">Rehabilitation Resource Predictor</th>\r\n                <th role=\"cell\">Predicted Value</th>\r\n            </tr>\r\n        </thead>\r\n        <tbody class=\"p-datatable-tbody\" role=\"rowgroup\">\r\n            <tr class=\"\" tabindex=\"0\" role=\"row\">\r\n                <td role=\"cell\">Points of Physical FS Change</td>\r\n                <td role=\"cell\">{{getAssessmentAttribute(\"PredictedChange\")}}</td>\r\n            </tr>\t\r\n            <tr class=\"\" tabindex=\"0\" role=\"row\">\r\n                <td role=\"cell\">Discharge FS Score</td>\r\n                <td role=\"cell\">{{primaryAssessment.StagingInfo.PredictedStage.Measure}}</td>\r\n            </tr>\t\r\n            <tr class=\"\" tabindex=\"0\" role=\"row\">\r\n                <td role=\"cell\">Visits per Episode</td>\r\n                <td role=\"cell\">{{getAssessmentAttribute(\"Visits\")}}</td>\r\n            </tr>\t\r\n            <tr class=\"\" tabindex=\"0\" role=\"row\">\r\n                <td role=\"cell\">Duration in Days</td>\r\n                <td role=\"cell\">{{getAssessmentAttribute(\"Duration\")}}</td>\r\n            </tr>\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n            <tr class=\"\" tabindex=\"0\" role=\"row\">\r\n                <td role=\"cell\">Average Satisfaction Score</td>\r\n                <td role=\"cell\">{{getAssessmentAttribute(\"Satisfaction\")}}%</td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n    \r\n    <table role=\"table\" class=\"m-t-2 p-datatable p-component p-datatable-sm\">\r\n        <thead class=\"p-datatable-thead\" role=\"rowgroup\">\r\n            <tr role=\"row\">\r\n                <th role=\"cell\" colspan=\"12\">Interpretation of Predicted Value</th>\r\n            </tr>\r\n        </thead>\r\n        <tbody class=\"p-datatable-tbody\" role=\"rowgroup\">\r\n        <tr tabindex=\"0\" role=\"row\">\r\n            <td role=\"cell\" colspan=\"12\">{{generateInterpretation()}}</td>\r\n        </tr>\r\n        </tbody>\r\n    </table>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { PropType } from 'vue';\r\nimport { defineComponent } from '@vue/runtime-core';\r\nimport { FunctionalAssessment } from '../../models/foto/functionalAssessment';\r\nimport { AssessmentAttribute } from '../../models/foto/assessmentAttribute';\r\n\r\nexport default defineComponent({\r\n    name: 'AdditionalItemTable',\r\n    props: {\r\n        primaryAssessment: Object as PropType<FunctionalAssessment>,\r\n    },\r\n    methods: {\r\n        getAssessmentAttribute(key: string) {\r\n            const attribute: Array<AssessmentAttribute> = this.primaryAssessment.AssessmentAttributes.filter(\r\n                (aa: AssessmentAttribute) => aa.Attribute.toLowerCase() == key.toLowerCase(),\r\n            );\r\n\r\n            return attribute.length > 0 ? attribute[0].Value : '';\r\n        },\r\n        generateInterpretation() {\r\n            const predictedChange: number = parseInt(this.getAssessmentAttribute('PredictedChange'));\r\n            const higherOrLowerTxt: string = predictedChange > 0 ? 'higher' : 'lower';\r\n            const predictedChangeObj = this.primaryAssessment.StagingInfo.PredictedStage;\r\n            const dischargeFsScore = predictedChangeObj.Measure;\r\n            const dischargeStage = predictedChangeObj.Stage;\r\n\r\n            return `Given this patient’s risk-adjustment variables, and the actual Intake FS score, FOTO predicts this\r\n                patient will experience at least an ${higherOrLowerTxt === 'higher' ? 'increase' : 'decrease'} in \r\n                function of ${predictedChange} points (to ${dischargeFsScore} or ${higherOrLowerTxt}), putting them in \r\n                the Stage ${dischargeStage} level or ${higherOrLowerTxt} at discharge.`;\r\n        },\r\n    },\r\n});\r\n</script>","\r\nimport { PropType } from 'vue';\r\nimport { defineComponent } from '@vue/runtime-core';\r\nimport { FunctionalAssessment } from '../../models/foto/functionalAssessment';\r\nimport { AssessmentAttribute } from '../../models/foto/assessmentAttribute';\r\n\r\nexport default defineComponent({\r\n    name: 'AdditionalItemTable',\r\n    props: {\r\n        primaryAssessment: Object as PropType<FunctionalAssessment>,\r\n    },\r\n    methods: {\r\n        getAssessmentAttribute(key: string) {\r\n            const attribute: Array<AssessmentAttribute> = this.primaryAssessment.AssessmentAttributes.filter(\r\n                (aa: AssessmentAttribute) => aa.Attribute.toLowerCase() == key.toLowerCase(),\r\n            );\r\n\r\n            return attribute.length > 0 ? attribute[0].Value : '';\r\n        },\r\n        generateInterpretation() {\r\n            const predictedChange: number = parseInt(this.getAssessmentAttribute('PredictedChange'));\r\n            const higherOrLowerTxt: string = predictedChange > 0 ? 'higher' : 'lower';\r\n            const predictedChangeObj = this.primaryAssessment.StagingInfo.PredictedStage;\r\n            const dischargeFsScore = predictedChangeObj.Measure;\r\n            const dischargeStage = predictedChangeObj.Stage;\r\n\r\n            return `Given this patient’s risk-adjustment variables, and the actual Intake FS score, FOTO predicts this\r\n                patient will experience at least an ${higherOrLowerTxt === 'higher' ? 'increase' : 'decrease'} in \r\n                function of ${predictedChange} points (to ${dischargeFsScore} or ${higherOrLowerTxt}), putting them in \r\n                the Stage ${dischargeStage} level or ${higherOrLowerTxt} at discharge.`;\r\n        },\r\n    },\r\n});\r\n","import { render } from \"./AdditionalItemTable.vue?vue&type=template&id=14adc009\"\nimport script from \"./AdditionalItemTable.vue?vue&type=script&lang=ts\"\nexport * from \"./AdditionalItemTable.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./ClaimEpisodeForm.vue?vue&type=style&index=0&id=0a8f3d5e&lang=scss\"","<template>\r\n    <Chart type=\"bar\" :data=\"chartData\" :options=\"lineOptions\" />\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent } from '@vue/runtime-core';\r\nimport { PropType } from 'vue';\r\nimport { FunctionalAssessment } from '../../models/foto/functionalAssessment';\r\n\r\nexport default defineComponent({\r\n    name: 'ArtifactSummaryChart',\r\n    props: {\r\n        primaryAssessment: Object as PropType<FunctionalAssessment>,\r\n    },\r\n    data() {\r\n        return {\r\n            lineOptions: {\r\n                interaction: {\r\n                    mode: 'point',\r\n                },\r\n                plugins: {\r\n                    legend: {\r\n                        position: 'top',\r\n                        fullSize: false,\r\n                        labels: {\r\n                            boxHeight: 5,\r\n                            boxWidth: 20,\r\n                        },\r\n                    },\r\n                },\r\n            },\r\n        };\r\n    },\r\n    computed: {\r\n        chartData() {\r\n            let mciiVal = this.primaryAssessment.MCII;\r\n            let mdcVal = this.primaryAssessment.MDC;\r\n            let predicted = this.primaryAssessment.PredictedChangeSummary.FunctionalScoreGoal;\r\n            let fotomean = this.primaryAssessment.RiskAdjustedStatisticalFOTO;\r\n\r\n            const predictedLineVals: Array<number> = [];\r\n            const mciiVals: Array<number> = [];\r\n            const mdcVals: Array<number> = [];\r\n            const labelVals: Array<string> = [''];\r\n            const predictedVals: Array<number> = [null];\r\n            const meanVals: Array<number> = [fotomean];\r\n            const functionalScores: Array<number> = [null];\r\n\r\n            for (let index = 0; index < this.primaryAssessment.FunctionalScoreSummaries.length; index++) {\r\n                const score = this.primaryAssessment.FunctionalScoreSummaries[index];\r\n\r\n                if (score.Label.toLowerCase() === 'intake') {\r\n                    mciiVal += score.FunctionalScore;\r\n                    mdcVal += score.FunctionalScore;\r\n                }\r\n            \r\n                predictedLineVals.push(null);\r\n                predictedVals.push(null);\r\n                mciiVals.push(mciiVal);\r\n                mdcVals.push(mdcVal);\r\n                labelVals.push(score.Label);\r\n                functionalScores.push(score.FunctionalScore);\r\n                meanVals.push(fotomean);\r\n\r\n                if (index === this.primaryAssessment.FunctionalScoreSummaries.length - 1) {\r\n                    predictedLineVals.push(score.FunctionalScore);\r\n                    predictedLineVals.push(predicted);\r\n                    predictedVals.push(predicted);\r\n                    labelVals.push('Predicted', '');\r\n                    mciiVals.push(mciiVal, mciiVal, mciiVal);\r\n                    mdcVals.push(mdcVal, mdcVal, mdcVal);\r\n                    meanVals.push(fotomean, fotomean);\r\n                }\r\n            }\r\n\r\n            return {\r\n                labels: labelVals,\r\n                datasets: [\r\n                    {\r\n                        label: 'Patient Actual',\r\n                        type: 'line',\r\n                        radius: 2,\r\n                        hoverRadius: 2,\r\n                        data: functionalScores,\r\n                        fill: false,\r\n                        backgroundColor: 'green',\r\n                        borderColor: 'green',\r\n                        pointStyle: 'circle',\r\n                    },\r\n                    {\r\n                        label: 'MCII',\r\n                        type: 'line',\r\n                        data: mciiVals,\r\n                        fill: false,\r\n                        radius: 2,\r\n                        hoverRadius: 4,\r\n                        borderWidth: 2,\r\n                        borderColor: 'blue',\r\n                        pointStyle: 'line',\r\n                        borderDash: [5, 5],\r\n                    },\r\n                    {\r\n                        label: 'MDC',\r\n                        type: 'line',\r\n                        data: mdcVals,\r\n                        fill: false,\r\n                        radius: 2,\r\n                        hoverRadius: 4,\r\n                        borderWidth: 2,\r\n                        borderColor: 'purple',\r\n                        pointStyle: 'line',\r\n                        borderDash: [5, 5],\r\n                    },\r\n                    {\r\n                        label: 'FOTO Predicted',\r\n                        type: 'line',\r\n                        radius: 9,\r\n                        hoverRadius: 8,\r\n                        data: predictedVals,\r\n                        fill: false,\r\n                        backgroundColor: 'orange',\r\n                        borderColor: 'orange',\r\n                        pointStyle: 'star',\r\n                    },\r\n                    {\r\n                        label: '',\r\n                        type: 'line',\r\n                        radius: 0,\r\n                        hoverRadius: 0,\r\n                        pointHitRadius: 0,\r\n                        data: predictedLineVals,\r\n                        fill: false,\r\n                        backgroundColor: 'orange',\r\n                        borderColor: 'orange',\r\n                        borderDash: [5, 5],\r\n                    },\r\n                    {\r\n                        label: 'FOTO Mean',\r\n                        type: 'line',\r\n                        radius: 2,\r\n                        hoverRadius: 4,\r\n                        data: meanVals,\r\n                        fill: false,\r\n                        borderColor: 'red',\r\n                        backgroundColor: '#fef4f7',\r\n                        pointStyle: 'circle',\r\n                    },\r\n                ],\r\n            };\r\n        },\r\n    },\r\n});\r\n</script>","\r\nimport { defineComponent } from '@vue/runtime-core';\r\nimport { PropType } from 'vue';\r\nimport { FunctionalAssessment } from '../../models/foto/functionalAssessment';\r\n\r\nexport default defineComponent({\r\n    name: 'ArtifactSummaryChart',\r\n    props: {\r\n        primaryAssessment: Object as PropType<FunctionalAssessment>,\r\n    },\r\n    data() {\r\n        return {\r\n            lineOptions: {\r\n                interaction: {\r\n                    mode: 'point',\r\n                },\r\n                plugins: {\r\n                    legend: {\r\n                        position: 'top',\r\n                        fullSize: false,\r\n                        labels: {\r\n                            boxHeight: 5,\r\n                            boxWidth: 20,\r\n                        },\r\n                    },\r\n                },\r\n            },\r\n        };\r\n    },\r\n    computed: {\r\n        chartData() {\r\n            let mciiVal = this.primaryAssessment.MCII;\r\n            let mdcVal = this.primaryAssessment.MDC;\r\n            let predicted = this.primaryAssessment.PredictedChangeSummary.FunctionalScoreGoal;\r\n            let fotomean = this.primaryAssessment.RiskAdjustedStatisticalFOTO;\r\n\r\n            const predictedLineVals: Array<number> = [];\r\n            const mciiVals: Array<number> = [];\r\n            const mdcVals: Array<number> = [];\r\n            const labelVals: Array<string> = [''];\r\n            const predictedVals: Array<number> = [null];\r\n            const meanVals: Array<number> = [fotomean];\r\n            const functionalScores: Array<number> = [null];\r\n\r\n            for (let index = 0; index < this.primaryAssessment.FunctionalScoreSummaries.length; index++) {\r\n                const score = this.primaryAssessment.FunctionalScoreSummaries[index];\r\n\r\n                if (score.Label.toLowerCase() === 'intake') {\r\n                    mciiVal += score.FunctionalScore;\r\n                    mdcVal += score.FunctionalScore;\r\n                }\r\n            \r\n                predictedLineVals.push(null);\r\n                predictedVals.push(null);\r\n                mciiVals.push(mciiVal);\r\n                mdcVals.push(mdcVal);\r\n                labelVals.push(score.Label);\r\n                functionalScores.push(score.FunctionalScore);\r\n                meanVals.push(fotomean);\r\n\r\n                if (index === this.primaryAssessment.FunctionalScoreSummaries.length - 1) {\r\n                    predictedLineVals.push(score.FunctionalScore);\r\n                    predictedLineVals.push(predicted);\r\n                    predictedVals.push(predicted);\r\n                    labelVals.push('Predicted', '');\r\n                    mciiVals.push(mciiVal, mciiVal, mciiVal);\r\n                    mdcVals.push(mdcVal, mdcVal, mdcVal);\r\n                    meanVals.push(fotomean, fotomean);\r\n                }\r\n            }\r\n\r\n            return {\r\n                labels: labelVals,\r\n                datasets: [\r\n                    {\r\n                        label: 'Patient Actual',\r\n                        type: 'line',\r\n                        radius: 2,\r\n                        hoverRadius: 2,\r\n                        data: functionalScores,\r\n                        fill: false,\r\n                        backgroundColor: 'green',\r\n                        borderColor: 'green',\r\n                        pointStyle: 'circle',\r\n                    },\r\n                    {\r\n                        label: 'MCII',\r\n                        type: 'line',\r\n                        data: mciiVals,\r\n                        fill: false,\r\n                        radius: 2,\r\n                        hoverRadius: 4,\r\n                        borderWidth: 2,\r\n                        borderColor: 'blue',\r\n                        pointStyle: 'line',\r\n                        borderDash: [5, 5],\r\n                    },\r\n                    {\r\n                        label: 'MDC',\r\n                        type: 'line',\r\n                        data: mdcVals,\r\n                        fill: false,\r\n                        radius: 2,\r\n                        hoverRadius: 4,\r\n                        borderWidth: 2,\r\n                        borderColor: 'purple',\r\n                        pointStyle: 'line',\r\n                        borderDash: [5, 5],\r\n                    },\r\n                    {\r\n                        label: 'FOTO Predicted',\r\n                        type: 'line',\r\n                        radius: 9,\r\n                        hoverRadius: 8,\r\n                        data: predictedVals,\r\n                        fill: false,\r\n                        backgroundColor: 'orange',\r\n                        borderColor: 'orange',\r\n                        pointStyle: 'star',\r\n                    },\r\n                    {\r\n                        label: '',\r\n                        type: 'line',\r\n                        radius: 0,\r\n                        hoverRadius: 0,\r\n                        pointHitRadius: 0,\r\n                        data: predictedLineVals,\r\n                        fill: false,\r\n                        backgroundColor: 'orange',\r\n                        borderColor: 'orange',\r\n                        borderDash: [5, 5],\r\n                    },\r\n                    {\r\n                        label: 'FOTO Mean',\r\n                        type: 'line',\r\n                        radius: 2,\r\n                        hoverRadius: 4,\r\n                        data: meanVals,\r\n                        fill: false,\r\n                        borderColor: 'red',\r\n                        backgroundColor: '#fef4f7',\r\n                        pointStyle: 'circle',\r\n                    },\r\n                ],\r\n            };\r\n        },\r\n    },\r\n});\r\n","import { render } from \"./ArtifactSummaryChart.vue?vue&type=template&id=7b5d8414\"\nimport script from \"./ArtifactSummaryChart.vue?vue&type=script&lang=ts\"\nexport * from \"./ArtifactSummaryChart.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","<template>\r\n    <template v-if=\"surveys.length > 0\">\r\n        <div class=\"p-col-12 p-t-0\">\r\n            <h3 class=\"artifact-detail-header\">Surveys</h3>\r\n        </div>\r\n        <div class=\"p-col-12 p-b-0 survey-container\">\r\n            <TabView :scrollable=\"true\" v-model:activeIndex=\"activeIndex\">\r\n                <TabPanel v-for=\"(survey, count) in surveys\" :key=\"survey\" :header=\"survey\">\r\n                        <div key=\"1\" v-if=\"!selectedSurvey\" class=\"p-grid\">\r\n                            <div class=\"p-col-12\">\r\n                                <DataTable class=\"p-datatable-sm\" :autoLayout='true' :value=\"surveyValues\" :paginator=\"true\" :rows=\"5\" :filters=\"filters\">\r\n                                    <template #header>\r\n                                        Patient responses to {{survey}} were as follows\r\n                                    </template>\r\n                                    <Column :sortable=\"true\" field=\"Attribute\" header=\"Attribute\"></Column>\r\n                                    <Column :sortable=\"true\" field=\"Value\" header=\"Answer\"></Column>\r\n                                </DataTable>\r\n                            </div>\r\n                        </div>\r\n                        <div key=\"2\" class=\"p-grid\" v-else>\r\n                            <div class=\"p-col-3\" :id=\"`score-list-container-${count}`\">\r\n                                <DataTable class=\"p-datatable-sm\" :autoLayout='true' :value=\"scores\" responsiveLayout=\"scroll\">\r\n                                    <Column field=\"Label\" header=\"Patient Scores\"></Column>\r\n                                    <Column field=\"FunctionalScore\" header=\"\"></Column>\r\n                                </DataTable>\r\n                                <Chart v-if=\"scores?.length > 1\" type=\"line\" :data=\"chartData\" :options=\"basicOptions\" />\r\n                            </div>\r\n                            <div class=\"p-col-9\" v-if=\"surveyValues.length > 0\">\r\n                                <DataTable class=\"p-datatable-sm\" :autoLayout='true' :value=\"surveyValues\" header=\"Responses\" responsiveLayout=\"scroll\" :paginator=\"true\" :rows=\"5\" :filters=\"filters\">\r\n                                    <template #header>\r\n                                        Patient responses to {{selectedSurvey.Descriptor}} were as follows\r\n                                    </template>\r\n                                    <ColumnGroup type=\"header\">\r\n                                        <Row>\r\n                                            <Column header=\"Activity (Question)\" :rowspan=\"9\" :sortable=\"true\" field=\"Question\" />\r\n                                            <Column header=\"Response at\" :colspan=\"3\" />\r\n                                        </Row>\r\n                                        <Row>\r\n                                            <Column header=\"Intake\" />\r\n                                            <Column header=\"Status\" />\r\n                                            <Column header=\"Predicted\" />\r\n                                        </Row>\r\n                                    </ColumnGroup>\r\n                                \r\n                                    <Column field=\"Question\" :sortable=\"true\">\r\n                                        <template #body=\"slotProps\">\r\n                                            <span class=\"br-spc-t\">{{slotProps.data.Indicator}} {{slotProps.data.Question}}</span>\r\n                                        </template>\r\n                                    </Column>\r\n                                    <Column field=\"IntakeResponse\" />\r\n                                    <Column field=\"StatusResponse\">\r\n                                        <template #body=\"slotProps\">\r\n                                            {{slotProps.data.StatusResponse === null ? '--' : slotProps.data.StatusResponse}}\r\n                                        </template>\r\n                                    </Column>\r\n                                    <Column>\r\n                                        <template #body=\"slotProps\">\r\n                                            {{getPredictedAnswer(slotProps.data.Question)}}\r\n                                        </template>\r\n                                    </Column>\r\n                                </DataTable>\r\n                            </div>\r\n                        </div>\r\n                </TabPanel>\r\n            </TabView>\r\n        </div>\r\n    </template>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { ChartType } from 'chart.js';\r\nimport { defineComponent, ref, inject } from '@vue/runtime-core';\r\nimport { PropType } from 'vue';\r\nimport { FilterMatchMode } from 'primevue/api';\r\nimport Artifact from '../../models/foto/artifact';\r\nimport { FunctionalAssessment } from '../../models/foto/functionalAssessment';\r\nimport { PatientReported } from '../../models/foto/patientReported';\r\nimport { StagingFunctionalityPrediction } from '../../models/foto/stagingFunctionalityPrediction';\r\n\r\nexport default defineComponent({\r\n    name: 'RiskCriteria',\r\n    props: {\r\n        artifact: Object as PropType<Artifact>,\r\n    },\r\n    setup() {\r\n        const basicOptions = ref({\r\n            layout: {\r\n                padding: 5,\r\n            },\r\n            elements: {\r\n                point: {\r\n                    radius: 1,\r\n                },\r\n            },\r\n            plugins: {\r\n                legend: {\r\n                    display: false,\r\n                },\r\n                tooltip: {\r\n                    enabled: false,\r\n                    padding: 0,\r\n                },\r\n            },\r\n            scales: {\r\n                x: {\r\n                    ticks: {\r\n                        display: false,\r\n                    },\r\n                    grid: {\r\n                        display: false,\r\n                        borderWidth: 0,\r\n                    },\r\n                },\r\n                y: {\r\n                    ticks: {\r\n                        display: false,\r\n                    },\r\n                    grid: {\r\n                        display: false,\r\n                        borderWidth: 0,\r\n                    },\r\n                },\r\n            },\r\n        });\r\n\r\n        return { \r\n            basicOptions, \r\n            store: inject('store') \r\n        };\r\n    },\r\n    data() {\r\n        return {\r\n            surveys: [],\r\n            activeIndex: 0,\r\n            filters: {\r\n                global: { value: null, matchMode: FilterMatchMode.CONTAINS },\r\n            },\r\n        };\r\n    },\r\n    created() {\r\n        let surveys = this.artifact.FunctionalAssessments.map((i: FunctionalAssessment) => i.Descriptor);\r\n\r\n        surveys.push(\r\n            ...this.artifact.PatientReportedItems.filter((i: PatientReported) => i.Survey.toLowerCase() !== 'na').map(\r\n                (i: PatientReported) => i.Survey,\r\n            ),\r\n        );\r\n\r\n        this.surveys = [...new Set(surveys)];\r\n    },\r\n    computed: {\r\n        selectedSurvey() : FunctionalAssessment {\r\n            this.store.AddLog(`Viewing survey ${this.surveys[this.activeIndex]}`);\r\n\r\n            return this.artifact.FunctionalAssessments.filter(\r\n                (i: FunctionalAssessment) =>\r\n                    i.Descriptor.toLowerCase() === this.surveys[this.activeIndex].toLowerCase(),\r\n            )[0];\r\n        },\r\n        surveyValues() {\r\n            return this.selectedSurvey\r\n                ? this.selectedSurvey.PatientResponses\r\n                : this.artifact.PatientReportedItems.filter(\r\n                      (i: PatientReported) => i.Survey.toLowerCase() === this.surveys[this.activeIndex].toLowerCase(),\r\n                  );\r\n        },\r\n        scores() {\r\n            return this.selectedSurvey?.FunctionalScoreSummaries;\r\n        },\r\n        chartData() {\r\n            const scores = this.scores?.map((s: any) => s.FunctionalScore);\r\n            let borderColor = '';\r\n            let backgroundColor = '';\r\n\r\n            if (scores.length > 0 && scores[0] > scores[scores.length - 1]) {\r\n                borderColor = '#e91e63';\r\n                backgroundColor = '#fef4f7';\r\n            } else {\r\n                borderColor = '#689f38';\r\n                backgroundColor = '#f7faf5';\r\n            }\r\n\r\n            return {\r\n                labels: this.scores?.map(() => ''),\r\n                datasets: [\r\n                    {\r\n                        label: '',\r\n                        type: 'shadowLine' as ChartType,\r\n                        data: scores,\r\n                        fill: false,\r\n                        borderWidth: 4,\r\n                        borderColor: borderColor,\r\n                        backgroundColor: backgroundColor,\r\n                    },\r\n                ],\r\n            };\r\n        },\r\n    },\r\n    methods: {\r\n        getPredictedAnswer(question: String) {\r\n            const prediction = this.selectedSurvey.StagingInfo?.FunctionalityPredictions.filter(\r\n                (fp: StagingFunctionalityPrediction) => fp.Question.toLowerCase() === question.toLowerCase(),\r\n            );\r\n\r\n            if (prediction && prediction.length > 0) return prediction[0].Answer;\r\n\r\n            return '--';\r\n        },\r\n    },\r\n});\r\n</script>","\r\nimport { ChartType } from 'chart.js';\r\nimport { defineComponent, ref, inject } from '@vue/runtime-core';\r\nimport { PropType } from 'vue';\r\nimport { FilterMatchMode } from 'primevue/api';\r\nimport Artifact from '../../models/foto/artifact';\r\nimport { FunctionalAssessment } from '../../models/foto/functionalAssessment';\r\nimport { PatientReported } from '../../models/foto/patientReported';\r\nimport { StagingFunctionalityPrediction } from '../../models/foto/stagingFunctionalityPrediction';\r\n\r\nexport default defineComponent({\r\n    name: 'RiskCriteria',\r\n    props: {\r\n        artifact: Object as PropType<Artifact>,\r\n    },\r\n    setup() {\r\n        const basicOptions = ref({\r\n            layout: {\r\n                padding: 5,\r\n            },\r\n            elements: {\r\n                point: {\r\n                    radius: 1,\r\n                },\r\n            },\r\n            plugins: {\r\n                legend: {\r\n                    display: false,\r\n                },\r\n                tooltip: {\r\n                    enabled: false,\r\n                    padding: 0,\r\n                },\r\n            },\r\n            scales: {\r\n                x: {\r\n                    ticks: {\r\n                        display: false,\r\n                    },\r\n                    grid: {\r\n                        display: false,\r\n                        borderWidth: 0,\r\n                    },\r\n                },\r\n                y: {\r\n                    ticks: {\r\n                        display: false,\r\n                    },\r\n                    grid: {\r\n                        display: false,\r\n                        borderWidth: 0,\r\n                    },\r\n                },\r\n            },\r\n        });\r\n\r\n        return { \r\n            basicOptions, \r\n            store: inject('store') \r\n        };\r\n    },\r\n    data() {\r\n        return {\r\n            surveys: [],\r\n            activeIndex: 0,\r\n            filters: {\r\n                global: { value: null, matchMode: FilterMatchMode.CONTAINS },\r\n            },\r\n        };\r\n    },\r\n    created() {\r\n        let surveys = this.artifact.FunctionalAssessments.map((i: FunctionalAssessment) => i.Descriptor);\r\n\r\n        surveys.push(\r\n            ...this.artifact.PatientReportedItems.filter((i: PatientReported) => i.Survey.toLowerCase() !== 'na').map(\r\n                (i: PatientReported) => i.Survey,\r\n            ),\r\n        );\r\n\r\n        this.surveys = [...new Set(surveys)];\r\n    },\r\n    computed: {\r\n        selectedSurvey() : FunctionalAssessment {\r\n            this.store.AddLog(`Viewing survey ${this.surveys[this.activeIndex]}`);\r\n\r\n            return this.artifact.FunctionalAssessments.filter(\r\n                (i: FunctionalAssessment) =>\r\n                    i.Descriptor.toLowerCase() === this.surveys[this.activeIndex].toLowerCase(),\r\n            )[0];\r\n        },\r\n        surveyValues() {\r\n            return this.selectedSurvey\r\n                ? this.selectedSurvey.PatientResponses\r\n                : this.artifact.PatientReportedItems.filter(\r\n                      (i: PatientReported) => i.Survey.toLowerCase() === this.surveys[this.activeIndex].toLowerCase(),\r\n                  );\r\n        },\r\n        scores() {\r\n            return this.selectedSurvey?.FunctionalScoreSummaries;\r\n        },\r\n        chartData() {\r\n            const scores = this.scores?.map((s: any) => s.FunctionalScore);\r\n            let borderColor = '';\r\n            let backgroundColor = '';\r\n\r\n            if (scores.length > 0 && scores[0] > scores[scores.length - 1]) {\r\n                borderColor = '#e91e63';\r\n                backgroundColor = '#fef4f7';\r\n            } else {\r\n                borderColor = '#689f38';\r\n                backgroundColor = '#f7faf5';\r\n            }\r\n\r\n            return {\r\n                labels: this.scores?.map(() => ''),\r\n                datasets: [\r\n                    {\r\n                        label: '',\r\n                        type: 'shadowLine' as ChartType,\r\n                        data: scores,\r\n                        fill: false,\r\n                        borderWidth: 4,\r\n                        borderColor: borderColor,\r\n                        backgroundColor: backgroundColor,\r\n                    },\r\n                ],\r\n            };\r\n        },\r\n    },\r\n    methods: {\r\n        getPredictedAnswer(question: String) {\r\n            const prediction = this.selectedSurvey.StagingInfo?.FunctionalityPredictions.filter(\r\n                (fp: StagingFunctionalityPrediction) => fp.Question.toLowerCase() === question.toLowerCase(),\r\n            );\r\n\r\n            if (prediction && prediction.length > 0) return prediction[0].Answer;\r\n\r\n            return '--';\r\n        },\r\n    },\r\n});\r\n","import { render } from \"./ArtifactSurveys.vue?vue&type=template&id=af233a30\"\nimport script from \"./ArtifactSurveys.vue?vue&type=script&lang=ts\"\nexport * from \"./ArtifactSurveys.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","module.exports = __webpack_public_path__ + \"img/nh_brand_symbol.fbc7a76a.png\";","<template>\r\n    <div>\r\n\t\t<vue-progress-bar />\r\n        <Toast />\r\n        <transition name=\"fade\" mode=\"out-in\">\r\n            <div key=\"1\" class=\"loader\" v-if=\"layout.loading\">\r\n                <AppSplash :size=\"150\" />\r\n            </div>\r\n            <div key=\"2\" :class=\"containerClass()\" @click=\"onWrapperClick\" v-else>\r\n                <AppTopBar />\r\n                <Sidebar v-model:visible=\"visibleRight\" :baseZIndex=\"1000\" position=\"right\">\r\n                    <h3>Right Sidebar</h3>\r\n                </Sidebar>\r\n\t\t\t\t<transition name=\"layout-sidebar\">\r\n                    <AppSidebar v-show=\"isSidebarVisible()\" />\r\n\t\t\t\t</transition>\r\n\t\t\t\t<div class=\"layout-main\">\r\n                    <transition name=\"fade\" mode=\"out-in\">\r\n                        <div key=\"1a\" v-if=\"store.Episode.State.Episodes?.length !== 0\">\r\n                            <Dialog header=\"Launch Survey\" :dismissableMask=\"true\" v-model:visible=\"showSurvey\" :style=\"{width: '300px'}\" :modal=\"true\" class=\"p-fluid dialog-head-p-b-small\">\r\n                                <SurveyLaunch :episodeId=\"selectedId\" />\r\n                            </Dialog>\r\n                            \r\n                            <Dialog v-model:visible=\"showEpisodeForm\" :dismissableMask=\"true\" :style=\"{ width: '50rem' }\" header=\"Episode Details\" :modal=\"true\" class=\"p-fluid\" >\r\n                                <EpisodeCreationForm @close=\"showEpisodeForm = false;\" />\r\n                            </Dialog>\r\n\r\n                            <Dialog v-model:visible=\"showVisitForm\" :dismissableMask=\"true\" :style=\"{ width: '25rem' }\" header=\"Visit Details\" :modal=\"true\" class=\"p-fluid\" >\r\n                                <ArtifactVisitCreationForm @close=\"showVisitForm = false;\" :externalEpisodeId=\"selectedId\" />\r\n                            </Dialog>\r\n\r\n                            <Dialog v-model:visible=\"showDischargeForm\" :dismissableMask=\"true\" :style=\"{ width: '25rem' }\" header=\"Discharge Episode\" :modal=\"true\" class=\"p-fluid\" >\r\n                                <EpisodeDischargeForm @close=\"showDischargeForm = false;\" :externalEpisodeId=\"selectedId\" />\r\n                            </Dialog>\r\n\r\n                            <Dialog v-model:visible=\"showClaimEpisodeForm\" :dismissableMask=\"true\" :style=\"{ width: '75rem' }\" header=\"Claim Episode\" :modal=\"true\" class=\"p-fluid\" >\r\n                                <ClaimEpisodeForm :episodeId=\"selectedId\"  @close=\"showClaimEpisodeForm = false;\" />\r\n                            </Dialog>\r\n\r\n                            <AppDash :activeEpisodeFilters='layout.activeEpisodeFilters' :showDischarged='layout.showDischargedEpisodes' @CardToggle='toggleCardEpisodeDisplay' @ToggleDischargedEpisodes='toggleDischargeView' @DisplaySurvey='displaySurveyModal' @DisplayDischarge='displayDischargeModal' @DisplayVisit='displayVisitModal' @DisplayEpisodeClaim='displayEpisodeClaimModal' />\r\n                        </div>\r\n                        <div key=\"1b\" class=\"p-col-12 flex ta-c align-items-center justify-content-center flex-d-c noEpisodesContainer\" v-else-if=\"store.Fhir.State.Context.LaunchedByResource === 'Practitioner'\">\r\n                            <div class='p-col-12'>\r\n                                <h1 class=\"bolder ta-c\">No FOTO episodes were found for patient, {{outboundPatient.Name}}. Would you like to create one?</h1>\r\n                            </div>\r\n                            <div class=\"p-col-12\">\r\n                                <br />\r\n                                <Button class=\"important-button p-shadow-24\" type=\"button\" label=\"Create an Episode\" @click=\"showEpisodeForm = true\" />\r\n                            </div>\r\n\r\n                            <Dialog v-model:visible=\"showEpisodeForm\" :dismissableMask=\"true\" :style=\"{ width: '50rem' }\" header=\"Episode Details\" :modal=\"true\" class=\"p-fluid\" >\r\n                                <EpisodeCreationForm @close=\"showEpisodeForm = false;\" />\r\n                            </Dialog>\r\n                        </div>\r\n                        <div key=\"1c\" class=\"p-col-12 flex ta-c align-items-center justify-content-center flex-d-c noEpisodesContainer\" v-else>\r\n                            <div class='p-col-12'>\r\n                                <h1 class=\"bolder ta-c\">No episodes were found.</h1>\r\n                            </div>\r\n                        </div>\r\n                    </transition>\r\n                    <div class=\"layout-footer wrap\">\r\n                        <img alt=\"Logo\" src=\"../assets/nh_brand_symbol.png\" height=\"30\" class=\"m-r-_5-r\" />\r\n                        <span class=\"ls-_5\"><span class=\"fs-n ls-n bolder color-primary\">Net Health</span> - Reuniting caregivers with their calling.</span>\r\n                    </div>\r\n\t\t\t\t</div>\r\n                <SpeedDial :tooltipOptions=\"{position: 'left'}\" :model=\"speedDialItems\" style=\"position:fixed; bottom:3rem; right:3rem; z-index: 1000;\" direction=\"up-left\" :transitionDelay=\"80\" type=\"quarter-circle\" buttonClass=\"p-shadow-24 main-speeddial\" />\r\n            </div>\r\n        </transition>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent, inject, reactive } from '@vue/runtime-core';\r\nimport AppSplash from '../components/AppSplash.vue';\r\nimport AppDash from '../components/AppDash.vue';\r\nimport AppTopBar from '../components/AppTopBar.vue';\r\nimport AppSidebar from '../components/AppSidebar.vue';\r\nimport Layout from '../models/layout';\r\nimport SurveyLaunch from '../components/form/SurveyLaunch.vue';\r\nimport EpisodeCreationForm from '../components/form/EpisodeCreationForm.vue';\r\nimport ArtifactVisitCreationForm from '../components/form/ArtifactVisitCreationForm.vue';\r\nimport EpisodeDischargeForm from '../components/form/EpisodeDischargeForm.vue';\r\nimport ClaimEpisodeForm from '../components/form/ClaimEpisodeForm.vue';\r\n\r\nexport default defineComponent({\r\n    name: 'App',\r\n    components: {\r\n        SurveyLaunch,\r\n        EpisodeCreationForm,\r\n        ArtifactVisitCreationForm,\r\n        EpisodeDischargeForm,\r\n        ClaimEpisodeForm,\r\n        AppSplash,\r\n        AppTopBar,\r\n        AppDash,\r\n        AppSidebar,\r\n    },\r\n    setup() {\r\n        const store = inject('store');\r\n        const fhirClient = inject('fhirclient');\r\n        const layout = reactive(new Layout((fhirClient as any)?.user?.id));\r\n\r\n        return {\r\n            fhirClient,\r\n            store,\r\n            layout\r\n        };\r\n    },\r\n    data: function(): any {\r\n        return {\r\n            selectedId: null,\r\n            outboundPatient: null,\r\n            showClaimEpisodeForm: false,\r\n            showSurvey: false,\r\n            showDischargeForm: false,\r\n            showVisitForm: false,\r\n            showEpisodeForm: false,\r\n        };\r\n    },\r\n    async created() {\r\n        try {\r\n            this.$Progress.start();\r\n            (Window as any).$toast = this.$toast;\r\n            (Window as any).$progress = this.$Progress;\r\n\r\n            const started = performance.now();\r\n            await this.store.InitAsync(this.fhirClient);\r\n            const stopped = performance.now();\r\n\r\n            this.outboundPatient = this.store.GetContextValue('FotoPatient');\r\n            this.removeLoaderAfterElapsed(stopped - started);\r\n        } catch (e) {\r\n            Promise.reject(e);\r\n        }\r\n    },\r\n    provide() {\r\n        return {\r\n            store: this.store,\r\n        };\r\n    },\r\n    computed: {\r\n        speedDialItems: function(): Array<object> {\r\n            const items = [\r\n                {\r\n                    label: this.layout.mode === 'static' ? 'Hide Sidebar' : 'Show Sidebar',\r\n                    icon: this.layout.mode === 'static' ? 'pi pi-align-justify' : 'pi pi-align-right',\r\n                    command: () => {\r\n                        this.store.AddLog(`Toggling layout mode to ${this.layout.colorMode === 'static' ? 'overlay' : 'static'}`);\r\n                        this.layout.toggleMode()\r\n                    }\r\n                },\r\n                {\r\n                    label: this.layout.colorMode === 'light' ? 'Dark Mode' : 'Light Mode',\r\n                    icon: this.layout.colorMode === 'light' ? 'pi pi-moon' : 'pi pi-sun',\r\n                    command: () => {\r\n                        this.layout.loading = true;\r\n                        this.store.AddLog(`Toggling color mode to ${this.layout.colorMode === 'light' ? 'dark' : 'light'}`);\r\n                        setTimeout(() => this.layout.toggleColorMode(), 500)\r\n                        setTimeout(() => {\r\n                            this.layout.loading = false;\r\n                        }, 2500);\r\n                    }\r\n                },\r\n                {\r\n                    label: 'Refresh Data',\r\n                    icon: 'pi pi-refresh',\r\n                    command: async () => { \r\n                        this.layout.loading = true;\r\n                        this.store.AddLog('Refreshing data');\r\n                        \r\n                        const started = performance.now();\r\n                        this.store = await this.store.Refresh(this.fhirClient);\r\n                        const stopped = performance.now();\r\n\r\n                        this.removeLoaderAfterElapsed(stopped - started);\r\n                    },\r\n                },\r\n            ];\r\n                    \r\n            if(this.store.Fhir.State.Context.LaunchedByResource === \"Practitioner\"){\r\n                items.unshift({\r\n                    label: 'Create Episode',\r\n                    icon: 'pi pi-plus-circle',\r\n                    command: () => {\r\n                        this.showEpisodeForm = true\r\n                        this.store.AddLog('Displaying episode creation form.');\r\n                    }\r\n                });\r\n            }\r\n\r\n            return items;\r\n        },\r\n    },\r\n    methods: {\r\n        removeLoaderAfterElapsed(elapsed: number){\r\n            if(elapsed < 2500){\r\n                setTimeout(() => {\r\n                    this.$Progress.finish();\r\n                    this.layout.loading = false;                    \r\n                }, 2500 - elapsed)\r\n            }\r\n            else{\r\n                this.$Progress.finish();\r\n                this.layout.loading = false;\r\n            }\r\n            setTimeout(() => {\r\n                this.layout.loading = false;\r\n            }, 2500);\r\n        },\r\n        toggleDischargeView(){\r\n            this.layout.toggleDischargeView();\r\n        },\r\n        toggleCardEpisodeDisplay(){\r\n            this.layout.onCardToggle();\r\n        },\r\n        displayVisitModal(externalEpisodeId: string) {\r\n            this.store.AddLog(`Displaying visit modal for episode with external id ${externalEpisodeId}`);\r\n            this.selectedId = externalEpisodeId;\r\n            this.showVisitForm = true;\r\n        },\r\n        displayEpisodeClaimModal(episodeId: number) {\r\n            this.store.AddLog(`Displaying claim modal for episode with id ${episodeId}`);\r\n            this.selectedId = episodeId;\r\n            this.showClaimEpisodeForm = true;\r\n        },\r\n        displayDischargeModal(externalEpisodeId: string) {\r\n            this.store.AddLog(`Displaying discharge modal for episode with external id ${externalEpisodeId}`);\r\n            this.selectedId = externalEpisodeId;\r\n            this.showDischargeForm = true;\r\n        },\r\n        displaySurveyModal(slotProps: any) {\r\n            this.store.AddLog(`Displaying survey modal for episode with id ${slotProps.EpisodeId}`);\r\n            this.selectedId = slotProps.EpisodeId;\r\n            this.showSurvey = true;\r\n        },\r\n        isSidebarVisible() {\r\n            if (window.innerWidth > 1024) {\r\n                if (this.layout.mode === 'static') return !this.layout.staticMenuInactive;\r\n                else if (this.layout.mode === 'overlay') return this.layout.overlayMenuActive;\r\n                else return true;\r\n            } else return true;\r\n        },\r\n        containerClass: function(): Array<Object> {\r\n            return [\r\n                'layout-wrapper',\r\n                {\r\n                    'layout-overlay': this.layout.mode === 'overlay',\r\n                    'layout-static': this.layout.mode === 'static',\r\n                    'layout-static-sidebar-inactive': this.layout.staticMenuInactive && this.layout.mode === 'static',\r\n                    'layout-overlay-sidebar-active': this.layout.overlayMenuActive && this.layout.mode === 'overlay',\r\n                    'layout-mobile-sidebar-active': this.layout.mobileMenuActive,\r\n                },\r\n            ];\r\n        },\r\n    },\r\n});\r\n</script>\r\n","<template>\r\n\t<div :class=\"['vue-splash', { 'vue-splash--fixed': true }]\" :style=\"vueSplashStyle\">\r\n\t\t<div>\r\n\t\t\t<div class=\"vue-splash__anim\">\r\n\t\t\t\t<img :src=\"logo\" :style=\"imageStyle\" />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent } from 'vue';\r\n\r\nexport default defineComponent({\r\n\tname: 'AppSplash',\r\n\tprops: {\r\n\t\tsize: {\r\n\t\t\ttype: [Number, String],\r\n\t\t\tdefault: 180,\r\n\t\t},\r\n\t},\r\n\tcreated() {\r\n\t\tdocument.documentElement.style.setProperty('--splash-color', '#F9423A');\r\n\t},\r\n\tcomputed: {\r\n\t\tlogo() {\r\n            return require('../assets/nh_brand_symbol.png');\r\n        },\r\n\t\timageStyle() {\r\n\t\t\tlet width = this.size + 'px';\r\n\t\t\treturn {\r\n\t\t\t\twidth,\r\n\t\t\t};\r\n\t\t},\r\n\t\tvueSplashStyle() {\r\n\t\t\treturn {\r\n\t\t\t\tbackgroundColor: 'transparent',\r\n\t\t\t};\r\n\t\t},\r\n\t},\r\n});\r\n</script>","import { render } from \"./AppSplash.vue?vue&type=template&id=57d399c4\"\nimport script from \"./AppSplash.vue?vue&type=script&lang=js\"\nexport * from \"./AppSplash.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","<template>\r\n    <div class=\"p-grid p-fluid dashboard\">\r\n\t\t<div :class=\"`p-col-12 statusCard inProgress ${d_activeEpisodeFilters.includes(0) ? 'active' : ''}`\" @click=\"toggleCard(0)\">\r\n\t\t\t<Card>\r\n\t\t\t\t<template #content>\r\n\t\t\t\t\t<div class=\"flex p-jc-between m-b-1-r\">\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<div class=\"fw-600 text-xl\">In Progress</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"flex align-items-center p-jc-center bg-green-100 border-round\" style=\"width:2.5rem;height:2.5rem;\">\r\n\t\t\t\t\t\t\t<span class=\"bolder text-green-500 text-xl\">{{episodesWithStatusCount(0)}}</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<span class=\"block text-500 font-medium\">Open Episodes</span>\r\n\t\t\t\t</template>\r\n\t\t\t</Card>\r\n\t\t</div>\r\n\t\t<div :class=\"`p-col-12 statusCard intakeOverdue ${d_activeEpisodeFilters.includes(1) ? 'active' : ''}`\" @click=\"toggleCard(1)\">\r\n\t\t\t<Card>\r\n\t\t\t\t<template #content>\r\n\t\t\t\t\t<div class=\"flex p-jc-between m-b-1-r\">\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<div class=\"fw-600 text-xl\">Intake Overdue</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"flex align-items-center p-jc-center bg-blue-100 border-round\" style=\"width:2.5rem;height:2.5rem;\">\r\n\t\t\t\t\t\t\t<span class=\"bolder text-blue-500 text-xl\">{{episodesWithStatusCount(1)}}</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<span class=\"block text-500 font-medium\">7 to 14 days of inactivity</span>\r\n\t\t\t\t</template>\r\n\t\t\t</Card>\r\n\t\t</div>\r\n\t\t<div :class=\"`p-col-12 statusCard statusOverdue ${d_activeEpisodeFilters.includes(2) ? 'active' : ''}`\" @click=\"toggleCard(2)\">\r\n\t\t\t<Card>\r\n\t\t\t\t<template #content>\r\n\t\t\t\t\t<div class=\"flex p-jc-between m-b-1-r\">\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<div class=\"fw-600 text-xl\">Status Overdue</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"flex align-items-center p-jc-center bg-purple-100 border-round\" style=\"width:2.5rem;height:2.5rem;\">\r\n\t\t\t\t\t\t\t<span class=\"bolder text-purple-500 text-xl\">{{episodesWithStatusCount(2)}}</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<span class=\"block text-500 font-medium\">14 to 30 days of inactivity</span>\r\n\t\t\t\t</template>\r\n\t\t\t</Card>\r\n\t\t</div>\r\n\t\t<div :class=\"`p-col-12 statusCard close ${d_activeEpisodeFilters.includes(3) ? 'active' : ''}`\" @click=\"toggleCard(3)\">\r\n\t\t\t<Card>\r\n\t\t\t\t<template #content>\r\n\t\t\t\t\t<div class=\"flex p-jc-between m-b-1-r\">\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<div class=\"fw-600 text-xl\">Close</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"flex align-items-center p-jc-center bg-orange-100 border-round\" style=\"width:2.5rem;height:2.5rem;\">\r\n\t\t\t\t\t\t\t<span class=\"bolder text-orange-500 text-xl\">{{episodesWithStatusCount(3)}}</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<span class=\"block text-500 font-medium\">30 to 44 days of inactivity</span>\r\n\t\t\t\t</template>\r\n\t\t\t</Card>\r\n\t\t</div>\r\n\t\t<div :class=\"`p-col-12 statusCard inactive ${d_activeEpisodeFilters.includes(4) ? 'active' : ''}`\" @click=\"toggleCard(4)\">\r\n\t\t\t<Card>\r\n\t\t\t\t<template #content>\r\n\t\t\t\t\t<div class=\"flex p-jc-between m-b-1-r\">\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<div class=\"fw-600 text-xl\">Inactive</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"flex align-items-center p-jc-center bg-pink-100 border-round\" style=\"width:2.5rem;height:2.5rem;\">\r\n\t\t\t\t\t\t\t<span class=\"bolder text-pink-600 text-xl\">{{episodesWithStatusCount(4)}}</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<span class=\"block text-500 font-medium\">45+ days of inactivity</span>\r\n\t\t\t\t</template>\r\n\t\t\t</Card>\r\n\t\t</div>\r\n\r\n        <div class=\"p-col-12 p-lg-12 dashboard-main\">\r\n\t\t\t<Card>\r\n\t\t\t\t<template #title>\r\n                    <div class=\"table-header p-d-flex p-flex-column p-flex-md-row p-jc-md-between\">\r\n\t\t\t\t\t\t<h5 class=\"p-mb-2 p-m-md-0 p-as-md-center\">Patient Episodes</h5>\r\n\t\t\t\t\t\t<InputSwitch @change=\"$emit('ToggleDischargedEpisodes')\" v-model=\"d_showDischarged\" id=\"showDischarged\" v-tooltip.top=\"'Show Discharged'\" />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</template>\r\n\t\t\t\t<template #content>\r\n\t\t\t\t\t<DataTable ref=\"dt\" :autoLayout='true' scrollHeight='flex' paginatorTemplate=\"CurrentPageReport FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink RowsPerPageDropdown\" :rowsPerPageOptions=\"[5,10,15]\" currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords}\" :value=\"episodes\" @rowExpand=\"onRowExpand\" v-model:expandedRows=\"expandedRows\" dataKey=\"EpisodeId\" class=\"episode-list-dt\" responsiveLayout=\"stack\" :paginator=\"true\" :rows=\"5\" :filters=\"filters\">\r\n\t\t\t\t\t\t<template #empty>No episodes found</template>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<Column :expander=\"true\" />\r\n\t\t\t\t\t\t<Column field=\"TherapistName\" header=\"Therapist\" :sortable=\"true\"></Column>\r\n\t\t\t\t\t\t<Column field=\"BodyPartText\" header=\"Condition\" :sortable=\"true\"></Column>\r\n\t\t\t\t\t\t<Column field=\"ImpairmentText\" header=\"Impairment\" :sortable=\"true\"></Column>\r\n\t\t\t\t\t\t<Column field=\"CreateDate\" header=\"Setup\" :sortable=\"true\">\r\n\t\t\t\t\t\t\t<template #body=\"slotProps\">\r\n\t\t\t\t\t\t\t\t<span>{{formatDateTime(slotProps.data.CreateDate)}}</span>\r\n\t\t\t\t\t\t\t</template>\r\n\t\t\t\t\t\t</Column>\r\n\t\t\t\t\t\t<Column field=\"LatestIntakeTime\" header=\"Intake\" :sortable=\"true\">\r\n\t\t\t\t\t\t\t<template #body=\"slotProps\">\r\n\t\t\t\t\t\t\t\t<span>{{formatDateTime(slotProps.data.LatestIntakeTime)}}</span>\r\n\t\t\t\t\t\t\t</template>\r\n\t\t\t\t\t\t</Column>\r\n\t\t\t\t\t\t<Column field=\"LatestStatusTime\" header=\"Status\" :sortable=\"true\">\r\n\t\t\t\t\t\t\t<template #body=\"slotProps\">\r\n\t\t\t\t\t\t\t\t<span>{{formatDateTime(slotProps.data.LatestStatusTime)}}</span>\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</template>\r\n\t\t\t\t\t\t</Column>\r\n\t\t\t\t\t\t<Column field=\"DischargeTime\" header=\"Discharge\" :sortable=\"true\">\r\n\t\t\t\t\t\t\t<template #body=\"slotProps\">\r\n\t\t\t\t\t\t\t\t<span>{{formatDateTime(slotProps.data.DischargeTime)}}</span>\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</template>\r\n\t\t\t\t\t\t</Column>\r\n\t\t\t\t\t\t<Column field=\"Info\" header=\"Info\" class=\"info-column\" :sortable=\"true\">\r\n\t\t\t\t\t\t\t<template #body=\"slotProps\">\r\n\t\t\t\t\t\t\t\t<Tag v-if=\"slotProps.data.Info === 0\" class=\"bg-green-100 text-green-500\" severity=\"success\" value=\"In Progress\" ></Tag>\r\n\t\t\t\t\t\t\t\t<Tag v-else-if=\"slotProps.data.Info === 1\" class=\"bg-blue-100 text-blue-500\" severity=\"danger\" value=\"Intake Overdue\" ></Tag>\r\n\t\t\t\t\t\t\t\t<Tag v-else-if=\"slotProps.data.Info === 2\" class=\"bg-purple-100 text-purple-500\" severity=\"warning\" value=\"Status Overdue\" />\r\n\t\t\t\t\t\t\t\t<Tag v-else-if=\"slotProps.data.Info === 3\" class=\"bg-orange-100 text-orange-500\" severity=\"danger\" value=\"Close\" />\r\n\t\t\t\t\t\t\t\t<Tag v-else-if=\"slotProps.data.Info === 4\" class=\"bg-pink-100 text-pink-600\" severity=\"danger\" value=\"Inactive\" />\r\n\t\t\t\t\t\t\t\t<Tag v-else-if=\"slotProps.data.Info === 5\" class=\"bg-bluegray-100 text-bluegray-500\" severity=\"danger\" :value=\"`Discharged${slotProps.data.NPId && slotProps.data.NPId > 0 ? ' - NP' : ''}`\" />\r\n\t\t\t\t\t\t\t</template>\r\n\t\t\t\t\t\t</Column>\r\n\r\n\t\t\t\t\t\t<template #expansion=\"slotProps\">\r\n\t\t\t\t\t\t\t<template v-if=\"slotProps.data.ExternalEpisodeId\">\r\n\t\t\t\t\t\t\t\t<template v-if=\"!error\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"p-grid m-t-_5-r\">\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"p-lg-10\">\r\n\t\t\t\t\t\t\t\t\t\t\t<h3 class=\"m-b-_5-r m-t-0\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t{{generateEpisodeDetailHeader(slotProps.data)}} \r\n\t\t\t\t\t\t\t\t\t\t\t\t<span v-if=\"store.Fhir.State.Context.LaunchedByResource === 'Practitioner'\" @click=\"toggleExtEpisodeIdOp\" class=\"toggleOp color-primary bolder\" v-tooltip.top=\"'External ID (Click to edit)'\"> - {{slotProps.data.ExternalEpisodeId}}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"p-lg-2\" v-if=\"slotProps.data.Info !== 5\">\r\n\t\t\t\t\t\t\t\t\t\t\t<Button icon=\"pi pi-cog\" class=\"w-auto float-r p-text-bold p-button-sm\" @click=\"toggle\" type=\"button\" label=\"Episode Options\" aria-haspopup=\"true\" :aria-controls=\"'episode_option_menu_' + slotProps.data.EpisodeId\"/>\r\n\t\t\t\t\t\t\t\t\t\t\t<Menu class=\"w-auto\" :id=\"'episode_option_menu_' + slotProps.data.EpisodeId\" :ref=\"'episode_option_menu_' + slotProps.data.EpisodeId\" :model=\"menuItems\" :popup=\"true\" />\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t<OverlayPanel :showCloseIcon=\"true\" :dismissable=\"true\" class=\"artifact-detail-op-md\" ref=\"extEpisodeIdOp\">\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"p-col-12\">\r\n\t\t\t\t\t\t\t\t\t\t\t<h3 class=\"m-t-0\">Update External Episode ID</h3>\r\n\t\t\t\t\t\t\t\t\t\t\t<span class=\"importantMessage p-confirm-popup-message\">Editing or removing this ID may cause issues with your EMR integration. Clear the ID field to release the episode from FOTO.</span>\r\n\t\t\t\t\t\t\t\t\t\t\t<Divider type=\"dashed\"></Divider>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"p-col-12\">\r\n\t\t\t\t\t\t\t\t\t\t\t<form autocomplete=\"off\" @submit.prevent=\"submitExternalEpisodeIdEdit\" class=\"p-fluid p-grid\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"p-field p-col-12 p-md-12\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"p-float-label\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Dropdown id=\"externalEpisodeId-select-op\" v-model=\"inContextExternalIdOption\" :options=\"episodesOfCare\" optionLabel=\"active\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<template #value=\"epiProps\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div v-if=\"epiProps.value\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{{epiProps.value.period.start}} {{epiProps.value.period.end ? ' - ' + epiProps.value.period.end : ''}} {{epiProps.value.type[0]?.text}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div v-else>&nbsp;</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</template>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<template #option=\"epiProps\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>{{epiProps.option.period.start}} {{epiProps.option.period.end ? ' - ' + epiProps.option.period.end : ''}} {{epiProps.option.type[0]?.text}}</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</template>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Dropdown>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label for=\"externalEpisodeId-select-op\">Episode</label>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"p-col-6 p-md-6\" />\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"p-col-6 p-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Button type=\"submit\" label=\"Submit\" :loading=\"updatingExternalId\" icon=\"pi pi-check\" class=\"\" />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</form>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</OverlayPanel>\r\n\t\t\t\t\t\t\t\t</template>\r\n\t\t\t\t\t\t\t\t<div class=\"p-col-12\">\r\n\t\t\t\t\t\t\t\t\t<ArtifactDetail :episode=\"slotProps.data\" @Error='errorEvent' />\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</template>\r\n\t\t\t\t\t\t\t<template v-else-if=\"store.Fhir.State.Context.LaunchedByResource === 'Practitioner'\">\r\n\t\t\t\t\t\t\t\t<div class='p-col-12'>\r\n\t\t\t\t\t\t\t\t\t<h2 class=\"ta-c bolder\">This episode has not been claimed in FOTO. Would you like to claim it?</h2>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div class=\"p-col-12\">\r\n\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t\t<Button class=\"important-button p-shadow-24\" type=\"button\" label=\"Claim Episode\" @click=\"$emit('DisplayEpisodeClaim', selectedEpisode.EpisodeId)\" />\r\n\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</template>\r\n\t\t\t\t\t\t\t<template v-else>\r\n\t\t\t\t\t\t\t\t<div class='p-col-12'>\r\n\t\t\t\t\t\t\t\t\t<h2 class=\"ta-c bolder\">No data for this episode was found.</h2>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</template>\r\n\t\t\t\t\t\t</template>\r\n\t\t\t\t\t</DataTable>\r\n\t\t\t\t</template>\r\n\t\t\t</Card>\r\n\t\t</div>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { inject } from 'vue';\r\nimport { defineComponent } from '@vue/runtime-core';\r\nimport { FilterMatchMode } from 'primevue/api';\r\nimport ArtifactDetail from './artifact/ArtifactDetail.vue';\r\nimport Episode from '../models/foto/episode';\r\nimport EpisodeInfo from '../models/foto/episodeInfo';\r\nimport { EpisodeOfCare } from 'fhir/r4';\r\n\r\nexport default defineComponent({\r\n    name: 'AppDash',\r\n    components: {\r\n        ArtifactDetail,\r\n    },\r\n    setup: function(): any {\r\n        const store = inject('store');\r\n        const patient = (store as any).GetContextValue('FotoPatient');\r\n\t\tconst episodesOfCare = (store as any).Fhir.State.Context.EpisodeOfCare;\r\n\r\n        return {\r\n            store,\r\n            patient,\r\n\t\t\tepisodesOfCare\r\n        };\r\n    },\r\n\tprops: {\r\n\t\tshowDischarged: Boolean,\r\n\t\tactiveEpisodeFilters: Array\r\n\t},\r\n    data: function(): object {\r\n        return {\r\n\t\t\terror: null,\r\n\t\t\td_showDischarged: this.showDischarged,\r\n\t\t\tupdatingExternalId: false,\r\n\t\t\tinContextExternalIdOption: null,\r\n            selectedEpisode: null,\r\n\t\t\texpandedRows: [],\r\n            d_activeEpisodeFilters: this.activeEpisodeFilters,\r\n            filters: {\r\n                global: { value: null, matchMode: FilterMatchMode.CONTAINS },\r\n            },\r\n        };\r\n    },\r\n    computed: {\r\n        episodes: function(): Episode {\r\n            return this.store.Episode.FilterLocal(\r\n                (e: Episode) =>\r\n                    this.d_activeEpisodeFilters.includes(e.Info) ||\r\n                    (this.d_showDischarged && e.Info === EpisodeInfo.Discharged),\r\n            );\r\n        },\r\n\t\tmenuItems: function(): Array<Object>{\r\n\t\t\tconst items = [\r\n\t\t\t\t{\r\n\t\t\t\t\tlabel: 'View Survey',\r\n                    icon: 'pi pi-file',\r\n                    command: this.displaySurvey,\r\n\t\t\t\t}\r\n\t\t\t];\r\n\r\n\t\t\tif(this.store.Fhir.State.Context.LaunchedByResource === 'Practitioner'){\r\n\t\t\t\titems.unshift({\r\n\t\t\t\t\tlabel: 'Add Visit',\r\n\t\t\t\t\ticon: 'pi pi-plus',\r\n\t\t\t\t\tcommand: this.displayVisitForm,\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tlabel: 'Discharge',\r\n\t\t\t\t\ticon: 'pi pi-times',\r\n\t\t\t\t\tcommand: this.displayDischargeForm,\r\n\t\t\t\t})\r\n\t\t\t}\r\n\r\n\t\t\treturn items;\r\n\t\t}\r\n    },\r\n    methods: {\r\n\t\ttoggle(event: any) {\r\n            this.$refs[`episode_option_menu_${this.selectedEpisode.EpisodeId}`].toggle(event);\r\n\t\t\tevent.stopPropagation();\r\n        },\r\n\t\terrorEvent(error: any){\r\n\t\t\tthis.error = error;\r\n\t\t},\r\n\t\tasync submitExternalEpisodeIdEdit(event: any) {\r\n            try {\r\n                if (this.selectedEpisode.ExternalEpisodeId !== this.inContextExternalIdOption?.id && this.inContextExternalIdOption){\r\n\t\t\t\t\tthis.store.AddLog(`Updating external id for episode ${this.selectedEpisode.EpisodeId} with the new value of ${this.inContextExternalIdOption?.id}`);\r\n\r\n                    this.$Progress.start();\r\n                    this.updatingExternalId = true;\r\n    \r\n                    const result = await this.store.Episode.DeleteClaim(\r\n                        this.selectedEpisode.EpisodeId,\r\n                        this.selectedEpisode.ExternalEpisodeId,\r\n                    );\r\n    \r\n                    if (result)\r\n                        await this.store.Episode.Claim(this.selectedEpisode.EpisodeId, this.inContextExternalIdOption?.id);\r\n    \r\n                    this.$refs.extEpisodeIdOp.toggle(event);\r\n                    this.updatingExternalId = false;\r\n                    this.$Progress.finish();\r\n                }\r\n            } catch (e) {\r\n                this.updatingExternalId = false;\r\n\t\t\t\tPromise.reject(e);\r\n            }\r\n        },\r\n\t\ttoggleExtEpisodeIdOp(event: any) {\r\n            this.$refs.extEpisodeIdOp.toggle(event);\r\n        },\r\n\t\tgenerateEpisodeDetailHeader(episode: Episode) {\r\n            let content = `Episode Details for ${this.patient.Name}`;\r\n\r\n            if (this.patient.Alias) content += ` (${this.patient.Alias})`;\r\n            if (episode.CareTypeText) content += ` - ${episode.CareTypeText}`;\r\n            if (episode.BodyPartText) content += ` - ${episode.BodyPartText}`;\r\n\r\n            return content;\r\n        },\r\n        episodesWithStatusCount(info: EpisodeInfo) {\r\n            return this.store.Episode.State.Episodes.filter((e: Episode) => {\r\n                return e.Info === info;\r\n            }).length;\r\n        },\r\n        toggleCard(info: EpisodeInfo) {\r\n\t\t\tconst index = this.d_activeEpisodeFilters.indexOf(info);\r\n\t\t\tindex > -1 ? this.d_activeEpisodeFilters.splice(index, 1) : this.d_activeEpisodeFilters.push(info);\r\n\r\n\t\t\tthis.$emit('CardToggle', info);\r\n        },\r\n        formatDateTime(date: string) {\r\n            const newDate = new Date(date);\r\n\r\n            if (date !== null && newDate.getFullYear() !== 1)\r\n                return newDate.getMonth() + 1 + '/' + newDate.getDate() + '/' + newDate.getFullYear();\r\n        },\r\n        displayVisitForm() {\r\n            this.$emit('DisplayVisit', this.selectedEpisode.ExternalEpisodeId);\r\n        },\r\n        displayDischargeForm() {\r\n\t\t\tthis.$emit('DisplayDischarge', this.selectedEpisode.ExternalEpisodeId);\r\n        },\r\n        displaySurvey() {\r\n            this.$emit('DisplaySurvey', this.selectedEpisode);\r\n        },\r\n        onRowExpand(event: any) {\r\n            this.selectedEpisode = this.store.Episode.Get(event.data.EpisodeId);\r\n\t\t\tthis.inContextExternalIdOption = this.episodesOfCare.filter((eoc: EpisodeOfCare) => this.selectedEpisode.ExternalEpisodeId.startsWith(eoc.id))[0];\r\n\t\t\tthis.store.SetContextValue(\"SelectedEpisode\", this.selectedEpisode);\r\n        },\r\n    },\r\n});\r\n</script>","<template>\r\n    <div class=\"p-grid p-fluid\">\r\n\t\t<transition name=\"fade\" mode=\"out-in\">\r\n\t\t\t<div key=\"1\" class=\"p-lg-12\" v-if=\"loadingDetails\">\r\n\t\t\t\t<div class=\"card p-1_5\">\r\n\t\t\t\t\t<Skeleton class=\"p-mb-4\" width=\"90%\"></Skeleton>\r\n\t\t\t\t\t<Skeleton class=\"p-mb-4\" width=\"55%\"></Skeleton>\r\n\t\t\t\t\t<Skeleton class=\"p-mb-4\" width=\"75%\"></Skeleton>\r\n\t\t\t\t\t<Skeleton class=\"p-mb-4\" width=\"65%\"></Skeleton>\r\n\t\t\t\t\t<Skeleton class=\"p-mb-4\" width=\"45%\"></Skeleton>\r\n\t\t\t\t\t<Skeleton class=\"p-mb-4\" width=\"85%\"></Skeleton>\r\n\t\t\t\t\t<Skeleton class=\"p-mb-4\" width=\"100%\"></Skeleton>\r\n\t\t\t\t\t<Skeleton class=\"p-mb-4\" width=\"60%\"></Skeleton>\r\n\t\t\t\t\t<Skeleton width=\"75%\"></Skeleton>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div key=\"2\" class=\"p-lg-12\" v-else>\r\n\t\t\t\t<TabView v-if=\"artifacts.length > 0\" @tab-change=\"artifactSelected\" :scrollable=\"true\">\r\n\t\t\t\t\t<TabPanel v-for=\"artifact in artifacts\" :header=\"createPanelHeader(artifact)\" :key=\"artifact.ReportId\">\r\n                        <div class=\"p-grid p-lg-12\">\r\n                            <div class=\"p-lg-8\">\r\n                                <h3 class=\"m-t-_5-r\">\r\n                                    <span v-html=\"panelBodyHeader\" />\r\n                                    <span v-if=\"[0, 1].includes(artifact.ReportType)\">\r\n                                        <span> - </span>\r\n                                        <span v-if=\"store.Fhir.State.Context.LaunchedByResource === 'Practitioner'\" class=\"toggleOp color-primary bolder\" v-tooltip.top=\"'Visit Number (Click to edit)'\" @click=\"toggleArtifactVisitNumOp\">{{(this.inContextArtifact.Visit && this.inContextArtifact.Visit !== 0) ? 'Visit #' + this.inContextArtifact.Visit : 'Click to set visit number'}}</span>\r\n                                        <span class=\"color-primary bolder\" v-else>{{(this.inContextArtifact.Visit && this.inContextArtifact.Visit !== 0) ? 'Visit #' + this.inContextArtifact.Visit : ''}}</span>\r\n                                    </span>\r\n                                </h3>\r\n                                <OverlayPanel @show=\"artifactVisitValue = artifact.Visit\" :showCloseIcon=\"true\" :dismissable=\"true\" class=\"artifact-detail-op-sm\" :ref=\"`artifactVisitNumOp-${artifact.ReportId}`\">\r\n                                    <h4 class=\"m-t-0\">Update Visit Number</h4>\r\n\r\n                                    <form autocomplete=\"off\" @submit.prevent=\"updateVisitNumber\" class=\"p-fluid p-grid\">\r\n                                        <div class=\"p-field p-col-12 p-md-12\">\r\n                                            <span class=\"p-float-label\">\r\n                                                <InputNumber showButtons id=\"vist-num-overlay-input\" v-model=\"artifactVisitValue\" :min=\"0\" />\r\n                                                <label for=\"visit-num-overlay-input\">Visit Number</label>\r\n                                            </span>\r\n                                        </div>\r\n                                        \r\n                                        <Divider type=\"dashed\"></Divider>\r\n                                        <Button type=\"submit\" label=\"Submit\" :loading=\"updatingVisitNumber\" icon=\"pi pi-check\" class=\"\" />\r\n                                    </form>\r\n                                </OverlayPanel>\r\n                            </div>\r\n                            <div class=\"p-lg-4\" v-if=\"[0, 1, 2].includes(artifact.ReportType)\">\r\n                                <Button icon=\"pi pi-cog\" class=\"w-auto float-r p-text-bold p-button-sm\" type=\"button\" label=\"Report Options\" @click=\"toggle\" aria-haspopup=\"true\" aria-controls=\"artifact-overlay-menu\"/>\r\n                                <Menu class=\"w-auto\" id=\"artifact-overlay-menu\" :ref=\"'artifact_report_menu_' + artifact.ReportId\" :model=\"menuItems\" :popup=\"true\" />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"p-grid p-l-1-r p-r-1-r\">\r\n                            <template v-if=\"primaryAssessment\">\r\n                                <div class=\"p-lg-12\">\r\n                                    <RiskAdjustmentCriteria :artifact=\"artifact\" />\r\n                                </div>\r\n\r\n                                <div class=\"p-lg-12\">\r\n                                    <FunctionalStatusMeasureTable :primaryAssessment=\"primaryAssessment\" />\r\n                                </div>\r\n\r\n                                <div class=\"p-lg-7\">\r\n                                    <AdditionalItemTable :primaryAssessment=\"primaryAssessment\" />\r\n                                </div>\r\n\r\n                                <div class=\"p-lg-5\">\r\n                                    <ArtifactSummaryChart :primaryAssessment=\"primaryAssessment\" />\r\n                                </div>\r\n                            </template>\r\n\r\n                            <ArtifactSurveys :artifact=\"artifact\" />\r\n                        </div>\r\n\t\t\t\t\t</TabPanel>\r\n\t\t\t\t</TabView>\r\n                <div v-else>\r\n                    <div v-if=\"error\">\r\n                        <h2 class=\"ta-c bolder m-b-_5-r\">An error has occured</h2>\r\n                        <p class=\"ta-c error-icon\"><font-awesome-icon icon=\"frown\" /></p>\r\n                        <h3 class=\"ta-c m-t-_5-r\">{{error}}</h3>\r\n                        <h4 class=\"ta-c m-t-_5-r\">Please try again. If this error continues, please contact support.</h4>\r\n                    </div>\r\n                    <div v-else>\r\n                        <h2 class=\"ta-c bolder\">No episode artifacts were found. Would you like to begin a survey?</h2>\r\n                        <br /><Button class=\"important-button p-shadow-24\" type=\"button\" label=\"Launch Survey\" @click=\"launchSurvey\" /><br />\r\n                    </div>\r\n                </div>\r\n\t\t\t</div>\r\n\t\t</transition>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport Hl7Service from '../../services/hl7/hl7Service';\r\nimport { defineComponent } from '@vue/runtime-core';\r\nimport { PatientReportType } from '../../models/foto/patientReportType';\r\nimport { inject } from 'vue';\r\nimport AdditionalItemTable from './AdditionalItemTable.vue';\r\nimport Artifact from '../../models/foto/artifact';\r\nimport ArtifactSummaryChart from './ArtifactSummaryChart.vue';\r\nimport Episode from '../../models/foto/episode';\r\nimport FunctionalStatusMeasureTable from './FunctionalStatusMeasureTable.vue';\r\nimport ArtifactSurveys from './ArtifactSurveys.vue';\r\nimport RiskAdjustmentCriteria from './RiskAdjustmentCriteria.vue';\r\nimport Patient from '../../models/foto/patient';\r\nimport { FunctionalAssessment } from '../../models/foto/functionalAssessment';\r\nimport { Identifier } from 'fhir/r4';\r\n\r\nexport default defineComponent({\r\n    name: 'ArtifactDetail',\r\n    components: {\r\n        AdditionalItemTable,\r\n        ArtifactSummaryChart,\r\n        FunctionalStatusMeasureTable,\r\n        ArtifactSurveys,\r\n        RiskAdjustmentCriteria,\r\n    },\r\n    setup: function(): any {\r\n        const store = inject('store');\r\n        const patient = (store as any).GetContextValue('FotoPatient');\r\n\r\n        return {\r\n            store,\r\n            patient,\r\n        };\r\n    },\r\n    props: {\r\n        episode: Episode,\r\n    },\r\n    data: function(): any {\r\n        return {\r\n            error: null,\r\n            artifacts: [],\r\n            inContextArtifact: null,\r\n            artifactVisitValue: 0,\r\n            loadingDetails: false,\r\n            updatingVisitNumber: false,\r\n        };\r\n    },\r\n    async created() {\r\n        this.$Progress.start();\r\n        this.loadingDetails = true;\r\n\r\n        try{\r\n            this.artifacts = await this.store.Artifact.ForEpisode(this.episode.ExternalEpisodeId);\r\n            this.inContextArtifact = this.artifacts[0];\r\n            this.store.SetContextValue('SelectedArtifact', this.inContextArtifact);\r\n        }\r\n        catch(ex: any){\r\n            this.$emit('Error', ex);\r\n            this.error = ex;\r\n            Promise.reject(ex);\r\n        }\r\n\r\n        this.$Progress.finish();\r\n        this.loadingDetails = false;\r\n    },\r\n    computed: {\r\n        panelBodyHeader(){\r\n            let header = `${this.getformattedDate(this.inContextArtifact.SurveyDateTimeCompleted)} - ${PatientReportType[this.inContextArtifact.ReportType].toString()} Summary - Completed`;\r\n\r\n            if([0, 1].includes(this.inContextArtifact.ReportType) && this.inContextArtifact.FunctionalAssessments.length > 0){\r\n                const primaryMeasureAssessment = this.inContextArtifact.FunctionalAssessments.filter((fa: FunctionalAssessment) => fa.Descriptor.toLowerCase() === 'physical fs primary measure')[0];\r\n\r\n                if (primaryMeasureAssessment) {\r\n                    const scoreArrLen = primaryMeasureAssessment.FunctionalScoreSummaries?.length;\r\n                    header += ` - ${primaryMeasureAssessment?.FunctionalScoreSummaries[scoreArrLen - 1]?.FunctionalScore}`;\r\n                } else header += ' - N/A';\r\n            }\r\n\r\n            return header;\r\n        },\r\n        primaryAssessment(){\r\n            if (this.inContextArtifact.FunctionalAssessments.length > 0)\r\n                return this.inContextArtifact.FunctionalAssessments.filter((fa: FunctionalAssessment) => fa.Descriptor.toLowerCase() === 'physical fs primary measure')[0];\r\n            else\r\n                return null;\r\n        },\r\n        menuItems(){\r\n            const items = [\r\n                {\r\n                    label: 'View',\r\n                    icon: 'pi pi-eye',\r\n                    command: async () => { await this.viewReport() },\r\n                },\r\n                {\r\n                    label: 'Download',\r\n                    icon: 'pi pi-file-pdf',\r\n                    command: async () => { await this.downloadReport() },\r\n                }\r\n            ];\r\n\r\n            if(this.store.Fhir.State.Context.LaunchedByResource === 'Practitioner')\r\n                items.unshift({\r\n                    label: 'Upload to MyChart',\r\n                    icon: 'pi pi-cloud-upload',\r\n                    command: async () => { await this.uploadReport() },\r\n                });\r\n\r\n            return items;\r\n        }\r\n    },\r\n    methods: {\r\n        createPanelHeader(artifact: Artifact){\r\n            return `${this.getformattedDate(artifact.SurveyDateTimeCompleted)} Functional ${PatientReportType[artifact.ReportType].toString()} Summary`\r\n        },\r\n        artifactSelected(event: any){\r\n            this.inContextArtifact = this.artifacts[event.index];\r\n            this.store.SetContextValue('SelectedArtifact', this.inContextArtifact);\r\n        },\r\n        toggleArtifactVisitNumOp(event: any) {\r\n            this.$refs[`artifactVisitNumOp-${this.inContextArtifact.ReportId}`].toggle(event);\r\n        },\r\n        async launchSurvey() {\r\n            try{\r\n                this.store.AddLog(`Launching survey for episode ${this.episode.EpisodeId}`);\r\n                const surveyDetails = await this.store.Episode.GetSurvey(this.episode.EpisodeId);\r\n                window.open(surveyDetails.Url);\r\n            }\r\n            catch(e){\r\n                Promise.reject(e);\r\n            }\r\n        },\r\n        async updateVisitNumber(event: any) {\r\n            try{\r\n                const artifact = this.artifacts.filter((a: Artifact) => a.ReportId === this.inContextArtifact.ReportId)[0];\r\n    \r\n                if (artifact.Visit !== this.artifactVisitValue){\r\n                    this.store.AddLog(`Updating visit for report ${this.inContextArtifact.ReportId} with value ${this.artifactVisitValue}`);\r\n                    this.updatingVisitNumber = true;\r\n                    this.$Progress.start();\r\n\r\n                    await this.store.Artifact.SetVisit(this.inContextArtifact.ReportId, this.artifactVisitValue);\r\n    \r\n                    this.$Progress.finish();\r\n                    this.updatingVisitNumber = false;\r\n                }\r\n                    \r\n                this.$refs[`artifactVisitNumOp-${this.inContextArtifact.ReportId}`].toggle(event);\r\n            }\r\n            catch(e){\r\n                Promise.reject(e);\r\n            }\r\n        },\r\n        async uploadReport() {\r\n            try{\r\n                this.store.AddLog('Uploading report to mychart');\r\n\r\n                this.$Progress.start();\r\n                const report = await this.store.Artifact.GetReport(this.inContextArtifact.ReportId);\r\n                const patient = this.store.Fhir.State.Context.Patient;\r\n                const encounter = this.store.Fhir.State.Context.Encounter;\r\n                const patientId = patient.identifier.filter((i: Identifier) => i.system.endsWith('114350.1.1'))[0]?.value;\r\n                const pFName = patient.name[0]?.given[0];\r\n                const pLName = patient.name[0]?.family;\r\n                const encounterId = encounter.identifier.filter((i: Identifier) => i.system.endsWith('698084.8'))[0]?.value;\r\n                const externalId = `${this.inContextArtifact.ReportId}_${PatientReportType[this.inContextArtifact.ReportType].toLowerCase()}`;\r\n                const base64 = Buffer.from(report).toString('base64');\r\n                const message = Hl7Service.Mdm.Build(patientId, pFName, pLName, encounterId, externalId, base64);\r\n    \r\n                this.store.AddLog('HL7 message for report', message);\r\n\r\n                await Hl7Service.Mdm.Send(message);\r\n                this.$Progress.finish();\r\n            }\r\n            catch(e){\r\n                Promise.reject(e);\r\n            }\r\n        },\r\n        async downloadReport() {\r\n            try{\r\n                this.store.AddLog(`Downloading report ${this.inContextArtifact.ReportId}`);\r\n\r\n                this.$Progress.start();\r\n                const report = await this.store.Artifact.GetReport(this.inContextArtifact.ReportId);\r\n                const blob = new Blob([new Uint8Array(report)], { type: 'application/pdf' });\r\n                const link = document.createElement('a');\r\n                const reportType = PatientReportType[this.inContextArtifact.ReportType];\r\n                const pat: Patient = this.store.GetContextValue('FotoPatient') as Patient;\r\n                const dateCompleted = new Date(this.inContextArtifact.SurveyDateTimeCompleted);\r\n                const dateStarted = new Date(this.inContextArtifact.SurveyDateTimeStarted);\r\n                const dateStr = dateCompleted.getFullYear() !== 1 \r\n                    ? `${dateCompleted.getMonth() + 1}${dateCompleted.getDate()}${dateCompleted.getFullYear()}`\r\n                    : `${dateStarted.getMonth() + 1}${dateStarted.getDate()}${dateStarted.getFullYear()}`;\r\n    \r\n                link.href = URL.createObjectURL(blob);\r\n                link.download = `${pat.Alias}_${reportType}_${dateStr}.pdf`;\r\n                link.click();\r\n                this.$Progress.finish();\r\n            }\r\n            catch(e){\r\n                Promise.reject(e);\r\n            }\r\n        },\r\n        async viewReport() {\r\n            try{\r\n                this.store.AddLog(`Viewing report ${this.inContextArtifact.ReportId}`);\r\n                this.$Progress.start();\r\n                const report = await this.store.Artifact.GetReport(this.inContextArtifact.ReportId);\r\n                const blob = new Blob([new Uint8Array(report)], { type: 'application/pdf' });\r\n                const tab = window.open('about:blank');\r\n    \r\n                tab.location = URL.createObjectURL(blob) as any;\r\n                tab.focus();\r\n                this.$Progress.finish();\r\n            }\r\n            catch(e){\r\n                Promise.reject(e);\r\n            }\r\n        },\r\n        toggle(event: any) {\r\n            const ref: any = this.$refs[`artifact_report_menu_${this.inContextArtifact.ReportId}`];\r\n            ref.toggle(event);\r\n            event.stopPropagation();\r\n        },\r\n        getformattedDate(datetime: string) {\r\n            return new Date(datetime).toISOString().split('T')[0].replace(/-/g, '/');\r\n        },\r\n    },\r\n});\r\n</script>","import { render } from \"./ArtifactDetail.vue?vue&type=template&id=79ca8f35\"\nimport script from \"./ArtifactDetail.vue?vue&type=script&lang=ts\"\nexport * from \"./ArtifactDetail.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","\r\nimport { inject } from 'vue';\r\nimport { defineComponent } from '@vue/runtime-core';\r\nimport { FilterMatchMode } from 'primevue/api';\r\nimport ArtifactDetail from './artifact/ArtifactDetail.vue';\r\nimport Episode from '../models/foto/episode';\r\nimport EpisodeInfo from '../models/foto/episodeInfo';\r\nimport { EpisodeOfCare } from 'fhir/r4';\r\n\r\nexport default defineComponent({\r\n    name: 'AppDash',\r\n    components: {\r\n        ArtifactDetail,\r\n    },\r\n    setup: function(): any {\r\n        const store = inject('store');\r\n        const patient = (store as any).GetContextValue('FotoPatient');\r\n\t\tconst episodesOfCare = (store as any).Fhir.State.Context.EpisodeOfCare;\r\n\r\n        return {\r\n            store,\r\n            patient,\r\n\t\t\tepisodesOfCare\r\n        };\r\n    },\r\n\tprops: {\r\n\t\tshowDischarged: Boolean,\r\n\t\tactiveEpisodeFilters: Array\r\n\t},\r\n    data: function(): object {\r\n        return {\r\n\t\t\terror: null,\r\n\t\t\td_showDischarged: this.showDischarged,\r\n\t\t\tupdatingExternalId: false,\r\n\t\t\tinContextExternalIdOption: null,\r\n            selectedEpisode: null,\r\n\t\t\texpandedRows: [],\r\n            d_activeEpisodeFilters: this.activeEpisodeFilters,\r\n            filters: {\r\n                global: { value: null, matchMode: FilterMatchMode.CONTAINS },\r\n            },\r\n        };\r\n    },\r\n    computed: {\r\n        episodes: function(): Episode {\r\n            return this.store.Episode.FilterLocal(\r\n                (e: Episode) =>\r\n                    this.d_activeEpisodeFilters.includes(e.Info) ||\r\n                    (this.d_showDischarged && e.Info === EpisodeInfo.Discharged),\r\n            );\r\n        },\r\n\t\tmenuItems: function(): Array<Object>{\r\n\t\t\tconst items = [\r\n\t\t\t\t{\r\n\t\t\t\t\tlabel: 'View Survey',\r\n                    icon: 'pi pi-file',\r\n                    command: this.displaySurvey,\r\n\t\t\t\t}\r\n\t\t\t];\r\n\r\n\t\t\tif(this.store.Fhir.State.Context.LaunchedByResource === 'Practitioner'){\r\n\t\t\t\titems.unshift({\r\n\t\t\t\t\tlabel: 'Add Visit',\r\n\t\t\t\t\ticon: 'pi pi-plus',\r\n\t\t\t\t\tcommand: this.displayVisitForm,\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tlabel: 'Discharge',\r\n\t\t\t\t\ticon: 'pi pi-times',\r\n\t\t\t\t\tcommand: this.displayDischargeForm,\r\n\t\t\t\t})\r\n\t\t\t}\r\n\r\n\t\t\treturn items;\r\n\t\t}\r\n    },\r\n    methods: {\r\n\t\ttoggle(event: any) {\r\n            this.$refs[`episode_option_menu_${this.selectedEpisode.EpisodeId}`].toggle(event);\r\n\t\t\tevent.stopPropagation();\r\n        },\r\n\t\terrorEvent(error: any){\r\n\t\t\tthis.error = error;\r\n\t\t},\r\n\t\tasync submitExternalEpisodeIdEdit(event: any) {\r\n            try {\r\n                if (this.selectedEpisode.ExternalEpisodeId !== this.inContextExternalIdOption?.id && this.inContextExternalIdOption){\r\n\t\t\t\t\tthis.store.AddLog(`Updating external id for episode ${this.selectedEpisode.EpisodeId} with the new value of ${this.inContextExternalIdOption?.id}`);\r\n\r\n                    this.$Progress.start();\r\n                    this.updatingExternalId = true;\r\n    \r\n                    const result = await this.store.Episode.DeleteClaim(\r\n                        this.selectedEpisode.EpisodeId,\r\n                        this.selectedEpisode.ExternalEpisodeId,\r\n                    );\r\n    \r\n                    if (result)\r\n                        await this.store.Episode.Claim(this.selectedEpisode.EpisodeId, this.inContextExternalIdOption?.id);\r\n    \r\n                    this.$refs.extEpisodeIdOp.toggle(event);\r\n                    this.updatingExternalId = false;\r\n                    this.$Progress.finish();\r\n                }\r\n            } catch (e) {\r\n                this.updatingExternalId = false;\r\n\t\t\t\tPromise.reject(e);\r\n            }\r\n        },\r\n\t\ttoggleExtEpisodeIdOp(event: any) {\r\n            this.$refs.extEpisodeIdOp.toggle(event);\r\n        },\r\n\t\tgenerateEpisodeDetailHeader(episode: Episode) {\r\n            let content = `Episode Details for ${this.patient.Name}`;\r\n\r\n            if (this.patient.Alias) content += ` (${this.patient.Alias})`;\r\n            if (episode.CareTypeText) content += ` - ${episode.CareTypeText}`;\r\n            if (episode.BodyPartText) content += ` - ${episode.BodyPartText}`;\r\n\r\n            return content;\r\n        },\r\n        episodesWithStatusCount(info: EpisodeInfo) {\r\n            return this.store.Episode.State.Episodes.filter((e: Episode) => {\r\n                return e.Info === info;\r\n            }).length;\r\n        },\r\n        toggleCard(info: EpisodeInfo) {\r\n\t\t\tconst index = this.d_activeEpisodeFilters.indexOf(info);\r\n\t\t\tindex > -1 ? this.d_activeEpisodeFilters.splice(index, 1) : this.d_activeEpisodeFilters.push(info);\r\n\r\n\t\t\tthis.$emit('CardToggle', info);\r\n        },\r\n        formatDateTime(date: string) {\r\n            const newDate = new Date(date);\r\n\r\n            if (date !== null && newDate.getFullYear() !== 1)\r\n                return newDate.getMonth() + 1 + '/' + newDate.getDate() + '/' + newDate.getFullYear();\r\n        },\r\n        displayVisitForm() {\r\n            this.$emit('DisplayVisit', this.selectedEpisode.ExternalEpisodeId);\r\n        },\r\n        displayDischargeForm() {\r\n\t\t\tthis.$emit('DisplayDischarge', this.selectedEpisode.ExternalEpisodeId);\r\n        },\r\n        displaySurvey() {\r\n            this.$emit('DisplaySurvey', this.selectedEpisode);\r\n        },\r\n        onRowExpand(event: any) {\r\n            this.selectedEpisode = this.store.Episode.Get(event.data.EpisodeId);\r\n\t\t\tthis.inContextExternalIdOption = this.episodesOfCare.filter((eoc: EpisodeOfCare) => this.selectedEpisode.ExternalEpisodeId.startsWith(eoc.id))[0];\r\n\t\t\tthis.store.SetContextValue(\"SelectedEpisode\", this.selectedEpisode);\r\n        },\r\n    },\r\n});\r\n","import { render } from \"./AppDash.vue?vue&type=template&id=23559620\"\nimport script from \"./AppDash.vue?vue&type=script&lang=ts\"\nexport * from \"./AppDash.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","<template>\r\n\t<div class=\"layout-logo\">\r\n\t\t<img alt=\"Logo\" src=\"../assets/logo_anhc-foto-white.svg\" />\r\n\t</div>\r\n\t<div class=\"layout-topbar\">\r\n\t\t<div class=\"layout-topbar-icons\">\r\n\t\t\t<button class=\"p-link\">\r\n\t\t\t\t<Avatar v-tooltip.left=\"`Welcome${firstName ? ', ' + firstName : ''}`\" icon=\"pi pi-user\" size=\"large\" :label=\"initials\" />\r\n\t\t\t</button>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent } from '@vue/runtime-core';\r\nimport { inject } from 'vue';\r\n\r\nexport default defineComponent({\r\n\tname: 'AppTopBar',\r\n\tsetup() {\r\n\t\tconst store = inject('store');\r\n\t\tconst practitioner = store.Fhir.State.Context.Practitioner;\r\n\t\tlet firstName = null;\r\n\t\tlet initials = null;\r\n\r\n\t\tif (practitioner?.name.length > 0) {\r\n\t\t\tconst lastName = practitioner?.name[0].family;\r\n\r\n\t\t\tif (practitioner?.name[0].given.length > 0) firstName = practitioner.name[0].given[0];\r\n\r\n\t\t\tif (firstName) initials = firstName[0];\r\n\t\t\tif (lastName) initials += lastName[0];\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tfirstName,\r\n\t\t\tinitials\r\n\t\t};\r\n\t},\r\n});\r\n</script>","import { render } from \"./AppTopBar.vue?vue&type=template&id=646c1a8c\"\nimport script from \"./AppTopBar.vue?vue&type=script&lang=js\"\nexport * from \"./AppTopBar.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","<template>\r\n    <Card class=\"layout-sidebar\">\r\n        <template #content>\r\n            <div class=\"layout-profile\">\r\n                <div class=\"p-col-12\">\r\n                    <Card class=\"bs-none\">\r\n                        <template class=\"gender-avatar-content\" #content>\r\n                            <Avatar v-if=\"patient?.gender?.toLowerCase() === 'female'\" class=\"text-pink-400 bg-pink-100 h-8-r w-8-r fs-5-r bg-s-b female-avatar\" size=\"xlarge\" shape=\"circle\">\r\n                                <font-awesome-icon icon=\"venus\" />\r\n                            </Avatar>\r\n                            <Avatar v-else-if=\"patient?.gender?.toLowerCase() === 'male'\" class=\"text-blue-400 bg-blue-100 h-8-r w-8-r fs-5-r bg-s-b male-avatar\" size=\"xlarge\" shape=\"circle\">\r\n                                <font-awesome-icon icon=\"mars\" />\r\n                            </Avatar>\r\n                            <Avatar v-else class=\"h-8-r w-8-r fs-5-r bg-s-b text-purple-400 bg-purple-100\" size=\"xlarge\" shape=\"circle\">\r\n                                <font-awesome-icon icon=\"genderless\" />\r\n                            </Avatar>\r\n                        </template>\r\n                        <template #footer>\r\n                            <h2 class=\"ta-c m-b-_5 m-t-1\">{{patient?.name[0]?.text}}</h2>\r\n                            <p class=\"ta-c fw-500 text-500\">{{age}} year old {{patient?.gender?.toLowerCase()}}</p>\r\n                        </template>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n            <div class=\"layout-menu-container\">\r\n                <div class=\"p-col-12\">\r\n                    <Accordion :multiple=\"false\">\r\n                        <AccordionTab>\r\n                            <template #header>\r\n                                <font-awesome-icon class=\"m-r-5 fs-1_2 min-w-1\" icon=\"user\" />\r\n                                <span>Demographics</span>\r\n                            </template>\r\n                            <DataTable :autoLayout='true' :value=\"demographics\" class=\"p-datatable-sm app-menu-demographic-table hide-header br-tl-5 br-tr-5\" responsiveLayout=\"scroll\">\r\n                                <template #header>\r\n                                    <h5 class=\"p-m-0 ta-c\">General</h5>\r\n                                </template>\r\n                                <Column field=\"key\" />\r\n                                <Column class=\"ta-r\" field=\"value\" />\r\n                            </DataTable>\r\n\r\n                            <DataTable :autoLayout='true' v-if=\"patient?.address.length > 0\" :value=\"patient.address\" class=\"p-datatable-sm hide-header br-bl-5 br-br-5\" responsiveLayout=\"scroll\">\r\n                                <template #header>\r\n                                    <h5 class=\"p-m-0 ta-c\">Address</h5>\r\n                                </template>\r\n                                <Column field=\"use\">\r\n                                    <template #body=\"slotProps\">{{capitalizeFirstLetter(slotProps.data.use)}}</template>\r\n                                </Column>\r\n                                <Column class=\"ta-r\" field=\"line[0]\">\r\n                                    <template #body=\"slotProps\">{{slotProps.data.line[0]}}, {{slotProps.data.city}}, {{slotProps.data.state}}, {{slotProps.data.postalCode}}</template>\r\n                                </Column>\r\n                            </DataTable>\r\n\r\n                            <DataTable :autoLayout='true' v-if=\"patient?.telecom.length > 0\" :value=\"patient.telecom\" class=\"p-datatable-sm hide-header br-bl-5 br-br-5\" responsiveLayout=\"scroll\">\r\n                                <template #header>\r\n                                    <h5 class=\"p-m-0 ta-c\">Communication</h5>\r\n                                </template>\r\n                                <Column field=\"system\">\r\n                                    <template #body=\"slotProps\">{{capitalizeFirstLetter(slotProps.data.system)}}</template>\r\n                                </Column>\r\n                                <Column class=\"ta-r\" field=\"value\" />\r\n                            </DataTable>\r\n                        </AccordionTab>\r\n                        <AccordionTab>\r\n                            <template #header>\r\n                                <font-awesome-icon class=\"m-r-5 fs-1_2 min-w-1\" icon=\"book-medical\" />\r\n                                <span>Episode</span>\r\n                            </template>\r\n                            <div v-if=\"d_store.Fhir.State.Context.EpisodeOfCare?.length > 0\">\r\n                                <DataTable :autoLayout='true' v-for=\"ep in d_store.Fhir.State.Context.EpisodeOfCare\" :key=\"ep.id\" :value=\"populateEpisodeDetails(ep)\" class=\"p-datatable-sm hide-header br-bl-5 br-br-5\" responsiveLayout=\"scroll\">\r\n                                    <template #header>\r\n                                        <h5 class=\"p-m-0 ta-c\">{{`${ep.period.start}${ep.period.end ? ' - ' + ep.period.end : ''}`}}</h5>\r\n                                    </template>\r\n                                    <Column field=\"key\" />\r\n                                    <Column class=\"ta-r\" field=\"value\" />\r\n                                </DataTable>\r\n                            </div>\r\n                            <div class=\"p-datatable p-component p-datatable-gridlines p-datatable-sm\" v-else>\r\n                                <div class=\"p-datatable-header\">\r\n                                    <h5 class=\"p-m-0 ta-c\">Associated Episodes</h5>\r\n                                </div>\r\n\r\n                                <div class=\"p-datatable-wrapper\">\r\n                                    <table role=\"table\" class=\"p-datatable-table\">\r\n                                        <tbody role=\"rowgroup\" class=\"p-datatable-tbody\">\r\n                                            <tr role=\"row\" colspan=\"12\">\r\n                                                <td role=\"cell\" class=\"ta-c\" colspan=\"12\">No active episodes found</td>\r\n                                            </tr>\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n                            </div>\r\n                        </AccordionTab>\r\n                        <AccordionTab>\r\n                            <template #header>\r\n                                <font-awesome-icon class=\"m-r-5 fs-1_2 min-w-1\" icon=\"calendar-day\" />\r\n                                <span>Encounter</span>\r\n                            </template>\r\n                            <DataTable :autoLayout='true' :value=\"encounter\" class=\"p-datatable-sm hide-header br-bl-5 br-br-5\" responsiveLayout=\"scroll\">\r\n                                <template #header>\r\n                                    <h5 class=\"p-m-0 ta-c\">Details</h5>\r\n                                </template>\r\n                                <Column field=\"key\"/>\r\n                                <Column class=\"ta-r\" field=\"value\" />\r\n                            </DataTable>\r\n                        </AccordionTab>\r\n                        <AccordionTab v-for=\"list in lists\" :key=\"list.name\">\r\n                            <template #header>\r\n                                <font-awesome-icon class=\"m-r-5 fs-1_2 min-w-1\" :icon=\"\r\n                                    list.name === 'Allergies' ? 'allergies' \r\n                                    : list.name === 'Immunizations' ? 'syringe' \r\n                                    : list.name === 'Medications' ? 'prescription-bottle-alt' \r\n                                    : 'exclamation-triangle'\" />\r\n                                <span>{{list.name}}</span>\r\n                            </template>\r\n                            <div v-if=\"list.data && ((list.data.length === 1 && list.data[0].emptyReason) || list.data.length === 0)\" class=\"p-datatable p-component p-datatable-gridlines p-datatable-sm\">\r\n                                <div class=\"p-datatable-header\">\r\n                                    <h5 class=\"p-m-0 ta-c\">Active {{list.name}}</h5>\r\n                                </div>\r\n\r\n                                <div class=\"p-datatable-wrapper\">\r\n                                    <table role=\"table\" class=\"p-datatable-table\">\r\n                                        <tbody role=\"rowgroup\" class=\"p-datatable-tbody\" :id=\"'list-table-body-' + list.name\">\r\n                                            <tr role=\"row\" colspan=\"12\">\r\n                                                <td role=\"cell\" class=\"ta-c\" colspan=\"12\">No active {{list.name}} found</td>\r\n                                            </tr>\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div v-else class=\"p-datatable p-component p-datatable-sm\">\r\n                                <div class=\"p-datatable-header\">\r\n                                    <h5 class=\"p-m-0 ta-c\">Active {{list.name}}</h5>\r\n                                </div>\r\n\r\n                                <div class=\"p-datatable-wrapper\">\r\n                                    <table role=\"table\" class=\"p-datatable-table\">\r\n                                        <tbody role=\"rowgroup\" class=\"p-datatable-tbody\" :id=\"'list-table-body-' + list.name\" />\r\n                                    </table>\r\n                                </div>\r\n                            </div>\r\n                        </AccordionTab>\r\n                    </Accordion>\r\n                </div>\r\n            </div>\r\n        </template>\r\n    </Card>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent } from '@vue/runtime-core';\r\nimport { EpisodeOfCare, Extension, Identifier, List } from 'fhir/r4';\r\nimport { inject } from 'vue';\r\n\r\nexport default defineComponent({\r\n    name: 'AppSidebar',\r\n    setup: function(): any {\r\n        return {\r\n            d_store: inject('store'),\r\n        };\r\n    },\r\n    data() {\r\n        return {\r\n            lists: [\r\n                {\r\n                    name: 'Allergies',\r\n                    data: (this.d_store as any).Fhir.State.Context.Allergies?.filter((a: List) => a.status === 'current'),\r\n                    useFullRow: false,\r\n                },\r\n                {\r\n                    name: 'Immunizations',\r\n                    data: (this.d_store as any).Fhir.State.Context.Immunizations?.filter((a: List) => a.status === 'current'),\r\n                    useFullRow: false,\r\n                },\r\n                {\r\n                    name: 'Medications',\r\n                    data: (this.d_store as any).Fhir.State.Context.Medications?.filter((a: List) => a.status === 'current'),\r\n                    useFullRow: false,\r\n                },\r\n                {\r\n                    name: 'Problems',\r\n                    data: (this.d_store as any).Fhir.State.Context.Problems?.filter((a: List) => a.status === 'current'),\r\n                    useFullRow: true,\r\n                },\r\n            ],\r\n            patient: (this.d_store as any).Fhir.State.Context.Patient,\r\n        };\r\n    },\r\n    mounted() {\r\n        this.lists.forEach((list: any) => {\r\n            if (list.data && list.data[0]?.entry?.length > 1) this.generateListTableBody(list.name, list.data[0].entry, list.useFullRow);\r\n        });\r\n    },\r\n    computed: {\r\n        age(){\r\n            const today = new Date();\r\n            const birthDate = new Date(this.patient?.birthDate);\r\n            const age = today.getFullYear() - birthDate.getFullYear();\r\n            const m = today.getMonth() - birthDate.getMonth();\r\n\r\n            return m < 0 || (m === 0 && today.getDate() < birthDate.getDate()) ? age - 1 : age;\r\n        },\r\n        demographics(){\r\n            return [\r\n                {\r\n                    key: 'Birth Day',\r\n                    value: this.patient?.birthDate\r\n                },\r\n                {\r\n                    key: 'Alias',\r\n                    value: this.getIdentifierValue('mychartlogin')\r\n                },\r\n                {\r\n                    key: 'Birth Sex',\r\n                    value: this.getExtensionValue('us-core-birthsex')\r\n                },\r\n                {\r\n                    key: 'Race',\r\n                    value: this.getExtensionValue('us-core-race')\r\n                },\r\n                {\r\n                    key: 'Ethnicity',\r\n                    value: this.getExtensionValue('us-core-ethnicity')\r\n                }\r\n            ];\r\n        },\r\n        encounter(){\r\n            const encounter = this.d_store.Fhir.State.Context.Encounter;\r\n            const encounterDetails = [];\r\n            let period = encounter?.period.start;\r\n\r\n            if (encounter?.period.end) period += ` - ${encounter.period.end}`;\r\n\r\n            if (period) {\r\n                encounterDetails.push({\r\n                    key: 'Period',\r\n                    value: period,\r\n                });\r\n            }\r\n\r\n            if (encounter?.status) {\r\n                encounterDetails.push({\r\n                    key: 'Status',\r\n                    value: this.capitalizeFirstLetter(encounter.status),\r\n                });\r\n            }\r\n\r\n            if (encounter?.type.length > 0) {\r\n                encounterDetails.push({\r\n                    key: 'Type',\r\n                    value: encounter.type[0]?.text,\r\n                });\r\n            }\r\n\r\n            if (encounter?.location.length > 0) {\r\n                encounterDetails.push({\r\n                    key: 'Location',\r\n                    value: encounter.location[0].location.display,\r\n                });\r\n            }\r\n\r\n            return encounterDetails;\r\n        }\r\n    },\r\n    methods: {\r\n        generateListTableBody(listName: string, data: any, useFullRow: boolean = false) {\r\n            let value = '<tr role=\"row\" colspan=\"12\">';\r\n            const items = [...new Set(data.slice().sort((a: any, b: any) => a.item.display.localeCompare(b.item.display)).map((a: any) => a.item.display))];\r\n\r\n            if (!useFullRow) {\r\n                let count = 0;\r\n\r\n                items.forEach((item: any) => {\r\n                    if (count % 2 === 0) value += `<td role=\"cell\" colspan=\"6\">${item}</td>`;\r\n                    else value += `<td role=\"cell\" colspan=\"6\">${item}</td></tr>`;\r\n\r\n                    count++;\r\n                });\r\n\r\n                if (items && items.length !== 0 && items.length % 2 !== 0) value += \"<td role='cell' colspan='6'></td></tr>\";\r\n                else value += '</tr>';\r\n            } \r\n            else items.forEach((item: any) => { value += `<tr><td role=\"cell\">${item}</td></tr>`; });\r\n\r\n            const tBody: HTMLElement = document.querySelector(`#list-table-body-${listName}`);\r\n            if (tBody) tBody.innerHTML = value;\r\n        },\r\n        populateEpisodeDetails(episode: EpisodeOfCare) {\r\n            let episodeDetails = [];\r\n            const type = episode?.type.map((t: any) => `${t.text}`).join(', ');\r\n            const condition = episode?.diagnosis.map((t: any) => `${t.condition.display}`).join(', ');\r\n\r\n            if (episode?.status) {\r\n                episodeDetails.push({\r\n                    key: 'Status',\r\n                    value: this.capitalizeFirstLetter(episode?.status),\r\n                });\r\n            }\r\n\r\n            if (condition) {\r\n                episodeDetails.push({\r\n                    key: 'Condition',\r\n                    value: condition,\r\n                });\r\n            }\r\n\r\n            if (type) {\r\n                episodeDetails.push({\r\n                    key: 'Type',\r\n                    value: type,\r\n                });\r\n            }\r\n\r\n            return episodeDetails;\r\n        },\r\n        getIdentifierValue(key: string) {\r\n            const id = this.patient?.identifier.filter((i: Identifier) => i.type?.text?.toLowerCase() === key);\r\n            return id && id.length > 0 ? id[0].value : '--';\r\n        },\r\n        getExtensionValue(key: string) {\r\n            const ext = this.patient?.extension.filter((e: Extension) => e.url.toLowerCase().includes(key))[0];\r\n            let valueCc = null;\r\n\r\n            if (ext) {\r\n                if (ext.extension && ext.extension.length > 0) {\r\n                    const ombCat = ext.extension.filter((e: Extension) => e.url.toLowerCase() === 'ombCategory')[0];\r\n\r\n                    if (ombCat) valueCc = ombCat;\r\n                    else return ext.extension.filter((e: Extension) => e.url.toLowerCase() === 'text')[0]?.valueString;\r\n                } \r\n                else if (ext.valueString) return ext.valueString;\r\n                else if (ext.valueCode) return ext.valueCode;\r\n                else if (ext.valueCodeableConcept) valueCc = ext.valueCodeableConcept.coding[0];\r\n            }\r\n\r\n            if (valueCc) {\r\n                if (valueCc.valueCoding.code && valueCc.valueCoding.dispaly) return `(${valueCc.valueCoding.code}) ${valueCc.valueCoding.display}`;\r\n                else if (valueCc.valueCoding.code) return `${valueCc.valueCoding.code}`;\r\n                else if (valueCc.valueCoding.display) return `${valueCc.valueCoding.display}`;\r\n            }\r\n\r\n            return '--';\r\n        },\r\n        capitalizeFirstLetter(string: string) {\r\n            return string.charAt(0).toUpperCase() + string.slice(1);\r\n        },\r\n    },\r\n});\r\n</script>","\r\nimport { defineComponent } from '@vue/runtime-core';\r\nimport { EpisodeOfCare, Extension, Identifier, List } from 'fhir/r4';\r\nimport { inject } from 'vue';\r\n\r\nexport default defineComponent({\r\n    name: 'AppSidebar',\r\n    setup: function(): any {\r\n        return {\r\n            d_store: inject('store'),\r\n        };\r\n    },\r\n    data() {\r\n        return {\r\n            lists: [\r\n                {\r\n                    name: 'Allergies',\r\n                    data: (this.d_store as any).Fhir.State.Context.Allergies?.filter((a: List) => a.status === 'current'),\r\n                    useFullRow: false,\r\n                },\r\n                {\r\n                    name: 'Immunizations',\r\n                    data: (this.d_store as any).Fhir.State.Context.Immunizations?.filter((a: List) => a.status === 'current'),\r\n                    useFullRow: false,\r\n                },\r\n                {\r\n                    name: 'Medications',\r\n                    data: (this.d_store as any).Fhir.State.Context.Medications?.filter((a: List) => a.status === 'current'),\r\n                    useFullRow: false,\r\n                },\r\n                {\r\n                    name: 'Problems',\r\n                    data: (this.d_store as any).Fhir.State.Context.Problems?.filter((a: List) => a.status === 'current'),\r\n                    useFullRow: true,\r\n                },\r\n            ],\r\n            patient: (this.d_store as any).Fhir.State.Context.Patient,\r\n        };\r\n    },\r\n    mounted() {\r\n        this.lists.forEach((list: any) => {\r\n            if (list.data && list.data[0]?.entry?.length > 1) this.generateListTableBody(list.name, list.data[0].entry, list.useFullRow);\r\n        });\r\n    },\r\n    computed: {\r\n        age(){\r\n            const today = new Date();\r\n            const birthDate = new Date(this.patient?.birthDate);\r\n            const age = today.getFullYear() - birthDate.getFullYear();\r\n            const m = today.getMonth() - birthDate.getMonth();\r\n\r\n            return m < 0 || (m === 0 && today.getDate() < birthDate.getDate()) ? age - 1 : age;\r\n        },\r\n        demographics(){\r\n            return [\r\n                {\r\n                    key: 'Birth Day',\r\n                    value: this.patient?.birthDate\r\n                },\r\n                {\r\n                    key: 'Alias',\r\n                    value: this.getIdentifierValue('mychartlogin')\r\n                },\r\n                {\r\n                    key: 'Birth Sex',\r\n                    value: this.getExtensionValue('us-core-birthsex')\r\n                },\r\n                {\r\n                    key: 'Race',\r\n                    value: this.getExtensionValue('us-core-race')\r\n                },\r\n                {\r\n                    key: 'Ethnicity',\r\n                    value: this.getExtensionValue('us-core-ethnicity')\r\n                }\r\n            ];\r\n        },\r\n        encounter(){\r\n            const encounter = this.d_store.Fhir.State.Context.Encounter;\r\n            const encounterDetails = [];\r\n            let period = encounter?.period.start;\r\n\r\n            if (encounter?.period.end) period += ` - ${encounter.period.end}`;\r\n\r\n            if (period) {\r\n                encounterDetails.push({\r\n                    key: 'Period',\r\n                    value: period,\r\n                });\r\n            }\r\n\r\n            if (encounter?.status) {\r\n                encounterDetails.push({\r\n                    key: 'Status',\r\n                    value: this.capitalizeFirstLetter(encounter.status),\r\n                });\r\n            }\r\n\r\n            if (encounter?.type.length > 0) {\r\n                encounterDetails.push({\r\n                    key: 'Type',\r\n                    value: encounter.type[0]?.text,\r\n                });\r\n            }\r\n\r\n            if (encounter?.location.length > 0) {\r\n                encounterDetails.push({\r\n                    key: 'Location',\r\n                    value: encounter.location[0].location.display,\r\n                });\r\n            }\r\n\r\n            return encounterDetails;\r\n        }\r\n    },\r\n    methods: {\r\n        generateListTableBody(listName: string, data: any, useFullRow: boolean = false) {\r\n            let value = '<tr role=\"row\" colspan=\"12\">';\r\n            const items = [...new Set(data.slice().sort((a: any, b: any) => a.item.display.localeCompare(b.item.display)).map((a: any) => a.item.display))];\r\n\r\n            if (!useFullRow) {\r\n                let count = 0;\r\n\r\n                items.forEach((item: any) => {\r\n                    if (count % 2 === 0) value += `<td role=\"cell\" colspan=\"6\">${item}</td>`;\r\n                    else value += `<td role=\"cell\" colspan=\"6\">${item}</td></tr>`;\r\n\r\n                    count++;\r\n                });\r\n\r\n                if (items && items.length !== 0 && items.length % 2 !== 0) value += \"<td role='cell' colspan='6'></td></tr>\";\r\n                else value += '</tr>';\r\n            } \r\n            else items.forEach((item: any) => { value += `<tr><td role=\"cell\">${item}</td></tr>`; });\r\n\r\n            const tBody: HTMLElement = document.querySelector(`#list-table-body-${listName}`);\r\n            if (tBody) tBody.innerHTML = value;\r\n        },\r\n        populateEpisodeDetails(episode: EpisodeOfCare) {\r\n            let episodeDetails = [];\r\n            const type = episode?.type.map((t: any) => `${t.text}`).join(', ');\r\n            const condition = episode?.diagnosis.map((t: any) => `${t.condition.display}`).join(', ');\r\n\r\n            if (episode?.status) {\r\n                episodeDetails.push({\r\n                    key: 'Status',\r\n                    value: this.capitalizeFirstLetter(episode?.status),\r\n                });\r\n            }\r\n\r\n            if (condition) {\r\n                episodeDetails.push({\r\n                    key: 'Condition',\r\n                    value: condition,\r\n                });\r\n            }\r\n\r\n            if (type) {\r\n                episodeDetails.push({\r\n                    key: 'Type',\r\n                    value: type,\r\n                });\r\n            }\r\n\r\n            return episodeDetails;\r\n        },\r\n        getIdentifierValue(key: string) {\r\n            const id = this.patient?.identifier.filter((i: Identifier) => i.type?.text?.toLowerCase() === key);\r\n            return id && id.length > 0 ? id[0].value : '--';\r\n        },\r\n        getExtensionValue(key: string) {\r\n            const ext = this.patient?.extension.filter((e: Extension) => e.url.toLowerCase().includes(key))[0];\r\n            let valueCc = null;\r\n\r\n            if (ext) {\r\n                if (ext.extension && ext.extension.length > 0) {\r\n                    const ombCat = ext.extension.filter((e: Extension) => e.url.toLowerCase() === 'ombCategory')[0];\r\n\r\n                    if (ombCat) valueCc = ombCat;\r\n                    else return ext.extension.filter((e: Extension) => e.url.toLowerCase() === 'text')[0]?.valueString;\r\n                } \r\n                else if (ext.valueString) return ext.valueString;\r\n                else if (ext.valueCode) return ext.valueCode;\r\n                else if (ext.valueCodeableConcept) valueCc = ext.valueCodeableConcept.coding[0];\r\n            }\r\n\r\n            if (valueCc) {\r\n                if (valueCc.valueCoding.code && valueCc.valueCoding.dispaly) return `(${valueCc.valueCoding.code}) ${valueCc.valueCoding.display}`;\r\n                else if (valueCc.valueCoding.code) return `${valueCc.valueCoding.code}`;\r\n                else if (valueCc.valueCoding.display) return `${valueCc.valueCoding.display}`;\r\n            }\r\n\r\n            return '--';\r\n        },\r\n        capitalizeFirstLetter(string: string) {\r\n            return string.charAt(0).toUpperCase() + string.slice(1);\r\n        },\r\n    },\r\n});\r\n","import { render } from \"./AppSidebar.vue?vue&type=template&id=61083f6a\"\nimport script from \"./AppSidebar.vue?vue&type=script&lang=ts\"\nexport * from \"./AppSidebar.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","import EpisodeInfo from \"./foto/episodeInfo\";\r\n\r\nexport default class Layout{\r\n    userId: string;\r\n    menuActive: boolean;\r\n    overlayMenuActive: boolean;\r\n    loading: boolean;\r\n    mobileMenuActive: boolean;\r\n    menuClick: boolean;\r\n    staticMenuInactive: boolean;\r\n    colorMode: string;\r\n    mode: string;\r\n    showDischargedEpisodes: boolean;\r\n    activeEpisodeFilters: Array<EpisodeInfo> = [\r\n        EpisodeInfo.InProgress,\r\n        EpisodeInfo.IntakeOverdue,\r\n        EpisodeInfo.StatusOverdue,\r\n        EpisodeInfo.Close,\r\n        EpisodeInfo.Inactive,\r\n    ];\r\n\r\n    constructor(userid: string){\r\n        this.userId = userid;\r\n        this.menuActive = true;\r\n        this.overlayMenuActive = false;\r\n        this.loading = true;\r\n        this.mobileMenuActive = false;\r\n        this.menuClick = false;\r\n        this.staticMenuInactive = false;\r\n        this.colorMode = localStorage.getItem(`nh-foto-sof-color-mode-${userid}`);\r\n        this.mode = localStorage.getItem(`nh-foto-sof-sidebar-mode-${userid}`) === 'overlay' ? 'overlay' : 'static';\r\n        this.showDischargedEpisodes = localStorage.getItem(`nh-foto-sof-show-discharged-episodes-${userid}`) === 'false' ? false : true;\r\n        const activeEpiFilters = localStorage.getItem(`nh-foto-sof-active-episode-filters-${userid}`);\r\n\r\n        if(activeEpiFilters)\r\n            this.activeEpisodeFilters = activeEpiFilters.split(',').map((f: string) => parseInt(f));\r\n\r\n        this.colorMode === 'dark' ? this.setDark() : this.setLight();\r\n    }\r\n\r\n    toggleMode(){\r\n        this.mode = this.mode === 'overlay' ? 'static' : 'overlay';\r\n        localStorage.setItem(`nh-foto-sof-sidebar-mode-${this.userId}`, this.mode);\r\n    }\r\n\r\n    toggleColorMode(){\r\n        this.colorMode === 'dark' ? this.setLight() : this.setDark();\r\n        localStorage.setItem(`nh-foto-sof-color-mode-${this.userId}`, this.colorMode);\r\n    }\r\n\r\n    toggleDischargeView(){\r\n        this.showDischargedEpisodes = !this.showDischargedEpisodes;\r\n        localStorage.setItem(`nh-foto-sof-show-discharged-episodes-${this.userId}`, this.showDischargedEpisodes.toString());\r\n    }\r\n\r\n    onCardToggle(){\r\n        localStorage.setItem(`nh-foto-sof-active-episode-filters-${this.userId}`, this.activeEpisodeFilters.join(','));\r\n    }\r\n\r\n    private setDark(){\r\n        const body = document.querySelector('body');\r\n        const themeElement = document.getElementById('theme-link');\r\n        themeElement.setAttribute('href', themeElement.getAttribute('href').replace('light', 'dark'));\r\n\r\n        body.classList.remove('light');\r\n        this.colorMode = 'dark';\r\n        body.classList.add('dark');\r\n    }\r\n\r\n    private setLight(){\r\n        const body = document.querySelector('body');\r\n        const themeElement = document.getElementById('theme-link');\r\n        themeElement.setAttribute('href', themeElement.getAttribute('href').replace('dark', 'light'));\r\n\r\n        body.classList.remove('dark');\r\n        this.colorMode = 'light';\r\n        body.classList.add('light');\r\n    }\r\n}","<template>\r\n\t<div class=\"confirmation-content\">\r\n\t\t<transition name=\"fade\" mode=\"out-in\">\r\n\t\t\t<div key=\"1\" class=\"p-grid\" v-if=\"!loading\">\r\n\t\t\t\t<div class=\"p-col-12 p-lg-12\">\r\n\t\t\t\t\t<img :src=\"surveyDetails.QrCode\" class=\"center\" alt=\"Episode Survery QR Code\" />\r\n\t\t\t\t\t<p style=\"text-align: center; margin:.5em\">\r\n\t\t\t\t\t\t<Tag severity=\"success\" icon=\"pi pi-info-circle\">Access Code: {{surveyDetails.LobbyCode}}</Tag>\r\n\t\t\t\t\t</p>\r\n\t\t\t\t</div>\r\n\r\n                <div class=\"p-col-12 p-md-6\" v-if=\"store.Fhir.State.Context.LaunchedByResource === 'Practitioner'\">\r\n                    <Button @click=\"launchSurvey\" class=\"p-button\" style=\"width: 100%;\">\r\n                        <font-awesome-icon icon=\"rocket\" class=\"p-button-icon p-button-left\" />\r\n                        <span class=\"p-button-label p-text-bold\">Launch</span>\r\n                    </Button>\r\n                </div>\r\n\r\n                <div class=\"p-col-12 p-md-6\" v-if=\"store.Fhir.State.Context.LaunchedByResource === 'Practitioner'\">\r\n                    <Button :disabled=\"!validEmail\" :loading=\"sending\" @click=\"sendEmail\" class=\"p-button\" style=\"width:100%;\">\r\n                        <font-awesome-icon icon=\"envelope\" class=\"p-button-icon p-button-left\" />\r\n                        <span class=\"p-button-label p-text-bold\">Email</span>\r\n                    </Button>\r\n                </div>\r\n\r\n                <div class=\"p-col-10 p-md-10 p-md-offset-1\" v-if=\"store.Fhir.State.Context.LaunchedByResource !== 'Practitioner'\">\r\n                    <Button @click=\"launchSurvey\" class=\"p-button\" style=\"width: 100%;\">\r\n                        <font-awesome-icon icon=\"rocket\" class=\"p-button-icon p-button-left\" />\r\n                        <span class=\"p-button-label p-text-bold\">Launch</span>\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n\t\t\t<div key=\"2\" class=\"p-grid\" v-else>\r\n                <div class=\"p-col-12 p-lg-12\" style=\"margin-top: 1rem;\">\r\n                    <Skeleton size=\"130px\" class=\"center\"></Skeleton>\r\n                </div>\r\n                <div class=\"p-col-12 p-lg-12\">\r\n                    <Skeleton class=\"center m-b-_5-e m-t-_5-e\" height=\"1.5rem\" width=\"45%\"></Skeleton>\r\n                </div>\r\n                <div class=\"p-col-12 p-md-6\">\r\n                    <Skeleton height=\"3rem\" width=\"100%\"></Skeleton>\r\n                </div>\r\n                <div class=\"p-col-12 p-md-6\">\r\n                    <Skeleton height=\"3rem\" width=\"100%\"></Skeleton>\r\n                </div>\r\n\t\t\t</div>\r\n\t\t</transition>\r\n\t</div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { inject } from 'vue';\r\nimport { defineComponent } from '@vue/runtime-core';\r\nimport Patient from '../../models/foto/patient';\r\nimport Email from '../../models/foto/email';\r\nimport SurveyDetails from '../../models/foto/surveyDetails';\r\n\r\nexport default defineComponent({\r\n    name: 'SurveyDetailContent',\r\n    setup: function(): any {\r\n        return {\r\n            store: inject('store'),\r\n        };\r\n    },\r\n    props: {\r\n        episodeId: Number,\r\n    },\r\n    async created() {\r\n        this.patient = this.store.GetContextValue('FotoPatient') as Patient;\r\n        this.surveyDetails = await this.store.Episode.GetSurvey(this.episodeId);\r\n        this.loading = false;\r\n    },\r\n    data: function(): any {\r\n        return {\r\n            sending: false,\r\n            loading: true,\r\n            patient: null,\r\n            surveyDetails: new SurveyDetails(),\r\n        };\r\n    },\r\n    methods: {\r\n        launchSurvey() {\r\n            window.open(this.surveyDetails.Url);\r\n            this.store.AddLog(`Launched survey ${this.surveyDetails.Url}`);\r\n        },\r\n        async sendEmail() {\r\n            try{\r\n                this.store.AddLog(`Sending survey email for episode ${this.episodeId} to email ${this.patient.Email}`);\r\n\r\n                this.$Progress.start();\r\n                this.sending = true;\r\n                const email = new Email(this.patient.Email, this.patient.Name);\r\n                const episode = await this.store.Episode.Get(this.episodeId);\r\n                episode.Artifacts = await this.store.Artifact.ForEpisode(episode.ExternalEpisodeId);\r\n    \r\n                if (episode.Artifacts.length === 0) {\r\n                    email.Content = `<p>Hi ${this.patient.firstName},</p><p>The comprehensive evaluation that you will have to start your therapy treatment includes a \r\n                        computerized functional assessment that will help your clinician better understand your condition and how it impacts your quality of life. \r\n                        This information will help your clinician develop treatment goals with you and is an important part of your treatment.</p><p>You have the option of completing \r\n                        the survey online prior to your first appointment, rather than in the clinic before your first treatment.</p><p>Please click the link to take your survey.  \r\n                        <a href=\"${this.surveyDetails.Url}\">${this.surveyDetails.Url}</a></p><p>The information you share is confidential, a part of your medical record, and is subject to all \r\n                        protected health care information regulations.</p><p>Thank you,</p><p>FOTO</p>`;\r\n                } else {\r\n                    email.Content = `<p>Hi ${this.patient.firstName},</p><p>At the beginning of your therapy treatment you completed a computerized functional assessment related to your impairment. \r\n                        Please complete the questionnaire again to reassess how the treatment for your impairment has helped to improve your function and pain. You will also have the opportunity \r\n                        to respond regarding your satisfaction with several aspects of your treatment.</p><p>Please click the link to take your survey. <a href=\"${this.surveyDetails.Url}\">${this.surveyDetails.Url}</a></p>\r\n                        <p>The information you share is confidential, a part of your medical record, and is subject to all protected health care information regulations.</p><p>Thank you,</p><p>FOTO</p></p>`;\r\n                }\r\n    \r\n                await this.store.Artifact.EmailSurveyInformation(email);\r\n                this.sending = false;\r\n                this.$Progress.finish();\r\n            }\r\n            catch(er){\r\n                Promise.reject(er);\r\n            }\r\n        },\r\n    },\r\n    computed: {\r\n        validEmail() {\r\n            return this.patient.email && this.patient.email.indexOf('@') !== -1 && this.patient.email.indexOf('.') !== -1;\r\n        },\r\n    },\r\n});\r\n</script>","export default class Email {\r\n    constructor(address: string, name: string){\r\n        this.ToAddress = address;\r\n        this.ToName = name;\r\n    }\r\n\r\n    ToAddress: string;\r\n    ToName: string;\r\n    Content: string;\r\n}","export default class SurveyDetails  \r\n{\r\n    public Url: string | null = \"\";\r\n    public LobbyCode: string | null = \"\";\r\n    public QrCode: string | null = \"\";\r\n}","\r\nimport { inject } from 'vue';\r\nimport { defineComponent } from '@vue/runtime-core';\r\nimport Patient from '../../models/foto/patient';\r\nimport Email from '../../models/foto/email';\r\nimport SurveyDetails from '../../models/foto/surveyDetails';\r\n\r\nexport default defineComponent({\r\n    name: 'SurveyDetailContent',\r\n    setup: function(): any {\r\n        return {\r\n            store: inject('store'),\r\n        };\r\n    },\r\n    props: {\r\n        episodeId: Number,\r\n    },\r\n    async created() {\r\n        this.patient = this.store.GetContextValue('FotoPatient') as Patient;\r\n        this.surveyDetails = await this.store.Episode.GetSurvey(this.episodeId);\r\n        this.loading = false;\r\n    },\r\n    data: function(): any {\r\n        return {\r\n            sending: false,\r\n            loading: true,\r\n            patient: null,\r\n            surveyDetails: new SurveyDetails(),\r\n        };\r\n    },\r\n    methods: {\r\n        launchSurvey() {\r\n            window.open(this.surveyDetails.Url);\r\n            this.store.AddLog(`Launched survey ${this.surveyDetails.Url}`);\r\n        },\r\n        async sendEmail() {\r\n            try{\r\n                this.store.AddLog(`Sending survey email for episode ${this.episodeId} to email ${this.patient.Email}`);\r\n\r\n                this.$Progress.start();\r\n                this.sending = true;\r\n                const email = new Email(this.patient.Email, this.patient.Name);\r\n                const episode = await this.store.Episode.Get(this.episodeId);\r\n                episode.Artifacts = await this.store.Artifact.ForEpisode(episode.ExternalEpisodeId);\r\n    \r\n                if (episode.Artifacts.length === 0) {\r\n                    email.Content = `<p>Hi ${this.patient.firstName},</p><p>The comprehensive evaluation that you will have to start your therapy treatment includes a \r\n                        computerized functional assessment that will help your clinician better understand your condition and how it impacts your quality of life. \r\n                        This information will help your clinician develop treatment goals with you and is an important part of your treatment.</p><p>You have the option of completing \r\n                        the survey online prior to your first appointment, rather than in the clinic before your first treatment.</p><p>Please click the link to take your survey.  \r\n                        <a href=\"${this.surveyDetails.Url}\">${this.surveyDetails.Url}</a></p><p>The information you share is confidential, a part of your medical record, and is subject to all \r\n                        protected health care information regulations.</p><p>Thank you,</p><p>FOTO</p>`;\r\n                } else {\r\n                    email.Content = `<p>Hi ${this.patient.firstName},</p><p>At the beginning of your therapy treatment you completed a computerized functional assessment related to your impairment. \r\n                        Please complete the questionnaire again to reassess how the treatment for your impairment has helped to improve your function and pain. You will also have the opportunity \r\n                        to respond regarding your satisfaction with several aspects of your treatment.</p><p>Please click the link to take your survey. <a href=\"${this.surveyDetails.Url}\">${this.surveyDetails.Url}</a></p>\r\n                        <p>The information you share is confidential, a part of your medical record, and is subject to all protected health care information regulations.</p><p>Thank you,</p><p>FOTO</p></p>`;\r\n                }\r\n    \r\n                await this.store.Artifact.EmailSurveyInformation(email);\r\n                this.sending = false;\r\n                this.$Progress.finish();\r\n            }\r\n            catch(er){\r\n                Promise.reject(er);\r\n            }\r\n        },\r\n    },\r\n    computed: {\r\n        validEmail() {\r\n            return this.patient.email && this.patient.email.indexOf('@') !== -1 && this.patient.email.indexOf('.') !== -1;\r\n        },\r\n    },\r\n});\r\n","import { render } from \"./SurveyLaunch.vue?vue&type=template&id=07988e50\"\nimport script from \"./SurveyLaunch.vue?vue&type=script&lang=ts\"\nexport * from \"./SurveyLaunch.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","<template>\r\n    <form autocomplete=\"off\" @submit.prevent=\"submit(!v$.$invalid)\" class=\"p-fluid p-grid\">\r\n\t\t<div class=\"p-field p-col-12 p-md-6\">\r\n\t\t\t<span class=\"p-float-label\">\r\n\t\t\t\t<Dropdown id=\"clinic\" @change=\"processSelection('Clinic', 'Alias', 'SiteId', 'SiteText', false)\" v-model=\"episode.SiteId\" :options=\"store.Code.State.Clinic\" optionLabel=\"Alias\" optionValue=\"Id\" :class=\"{ 'p-invalid': submitted && v$.episode.SiteId.$invalid }\" />\r\n\t\t\t\t<label for=\"clinic\">Clinic</label>\r\n\t\t\t</span>\r\n\t\t\t<small v-if=\"(v$.episode.SiteId.$invalid && submitted) || v$.episode.SiteId.$pending.$response\" class=\"p-error\" >A clinic is required.</small>\r\n        </div>\r\n\t\t<div class=\"p-field p-col-12 p-md-6\">\r\n\t\t\t<span class=\"p-float-label\">\r\n\t\t\t\t<Dropdown id=\"clinician\" @change=\"processSelection('Clinician', 'Name', 'TherapistId', 'TherapistName', false)\" v-model=\"episode.TherapistId\" :options=\"store.Code.State.Clinician\" placeholder=\"p-emptylabel\" optionLabel=\"Name\" optionValue=\"Id\" :class=\"{ 'p-invalid': submitted && v$.episode.TherapistId.$invalid }\" />\r\n\t\t\t\t<label for=\"clinician\">Clinician</label>\r\n\t\t\t</span>\r\n\t\t\t<small v-if=\"(v$.episode.TherapistId.$invalid && submitted) || v$.episode.TherapistId.$pending.$response\" class=\"p-error\" >A therapist is required.</small>\r\n\t\t</div>\r\n\r\n\t\t<div class=\"p-field p-col-12 p-md-6\">\r\n\t\t\t<span class=\"p-float-label\">\r\n\t\t\t\t<Dropdown id=\"careType\" @change=\"processSelection('CareType', 'Display', 'CareTypeId', 'CareTypeText', true)\" v-model=\"episode.CareTypeId\" :options=\"store.Code.State.CareType\" optionLabel=\"Display\" optionValue=\"Value\" :class=\"{ 'p-invalid': submitted && v$.episode.CareTypeId.$invalid }\" />\r\n\t\t\t\t<label for=\"careType\">Care Type</label>\r\n\t\t\t</span>\r\n\t\t\t<small v-if=\"(v$.episode.CareTypeId.$invalid && submitted) || v$.episode.CareTypeId.$pending.$response\" class=\"p-error\" >A care type is required.</small>\r\n\t\t</div>\r\n\r\n\t\t<div class=\"p-field p-col-12 p-md-6\">\r\n\t\t\t<span class=\"p-float-label\">\r\n\t\t\t\t<Dropdown :loading=\"isLoadingOptions\" id=\"bodypart\" @change=\"processSelection('BodyPart', 'Display', 'BodyPartId', 'BodyPartText', true)\" v-model=\"episode.BodyPartId\" :options=\"store.Code.State.BodyPart\" optionLabel=\"Display\" optionValue=\"Value\" :class=\"{ 'p-invalid': submitted && !episode.BodyPartId && !episode.ImpairmentId }\" />\r\n\t\t\t\t<label for=\"bodypart\">Body Part/Condition</label>\r\n\t\t\t</span>\r\n\t\t\t<small v-if=\"!episode.BodyPartId && !episode.ImpairmentId && submitted\" class=\"p-error\" >A body part or impairment is required.</small>\r\n\t\t</div>\r\n\r\n\t\t<div class=\"p-field p-col-12 p-md-6\">\r\n\t\t\t<span class=\"p-float-label\">\r\n\t\t\t\t<Dropdown :loading=\"isLoadingOptions\" id=\"impairment\" @change=\"processSelection('Impairment', 'Display', 'ImpairmentId', 'ImpairmentText', true)\" v-model=\"episode.ImpairmentId\" :options=\"store.Code.State.Impairment\" optionLabel=\"Display\" optionValue=\"Value\" :class=\"{ 'p-invalid': submitted && !episode.BodyPartId && !episode.ImpairmentId }\" />\r\n\t\t\t\t<label for=\"impairment\">Impairment</label>\r\n\t\t\t</span>\r\n\t\t\t<small v-if=\"!episode.BodyPartId && !episode.ImpairmentId && submitted\" class=\"p-error\" >An impairment or body part is required.</small>\r\n\t\t</div>\r\n\r\n\t\t<div class=\"p-field p-col-12 p-md-6\">\r\n\t\t\t<span class=\"p-float-label\">\r\n\t\t\t\t<Dropdown :loading=\"isLoadingOptions\" id=\"surgeryType\" @change=\"processSelection('SurgeryType', 'Display', 'SurgeryTypeId', 'SurgeryTypeText', true)\" v-model=\"episode.SurgeryTypeId\" :options=\"store.Code.State.SurgeryType\" optionLabel=\"Display\" />\r\n\t\t\t\t<label for=\"surgeryType\">Surgery Type</label>\r\n\t\t\t</span>\r\n\t\t</div>\r\n\r\n\t\t<div class=\"p-field p-col-12 p-md-6\">\r\n\t\t\t<span class=\"p-float-label\">\r\n\t\t\t\t<Dropdown id=\"payerSource\" v-model=\"episode.PayerSourceId\" @change=\"processSelection('PayerSource', 'Display', 'PayerSourceId', 'PayerSourceText', false)\" :options=\"store.Code.State.PayerSource\" optionLabel=\"Display\" optionValue=\"Value\" :class=\"{ 'p-invalid': submitted && v$.episode.PayerSourceId.$invalid }\" />\r\n\t\t\t\t<label for=\"payerSource\">Payer Source</label>\r\n\t\t\t</span>\r\n\t\t\t<small v-if=\"(v$.episode.PayerSourceId.$invalid && submitted) || v$.episode.PayerSourceId.$pending.$response\" class=\"p-error\">A payer source is required.</small>\r\n\t\t</div>\r\n\r\n\t\t<div class=\"p-field p-col-12 p-md-6\">\r\n\t\t\t<span class=\"p-float-label\">\r\n\t\t\t\t<Dropdown id=\"payerSource\" :loading=\"isLoadingOptions\" @change=\"processSelection('PrimaryMeasure', 'Display', 'PrimaryMeasureId', 'PrimaryMeasureText', true)\" v-model=\"episode.PrimaryMeasureId\" :options=\"store.Code.State.PrimaryMeasure\" optionLabel=\"Display\" optionValue=\"Value\" />\r\n\t\t\t\t<label for=\"payerSource\">Primary Measure</label>\r\n\t\t\t</span>\r\n\t\t</div>\r\n\r\n\t\t<div class=\"p-field p-col-12 p-md-12\">\r\n\t\t\t<span class=\"p-float-label\">\r\n\t\t\t\t<MultiSelect :showToggleAll=\"false\" :loading=\"isLoadingOptions\" v-model=\"selectedSecondaryMeasures\" :options=\"store.Code.State.SecondaryMeasure\" optionLabel=\"Display\" :filter=\"true\" class=\"multiselect-sec-measure\">\r\n\t\t\t\t\t<template #value=\"slotProps\">\r\n\t\t\t\t\t\t<div class=\"sec-measure-item-value\" v-for=\"option of slotProps.value\" :key=\"option.code\">\r\n\t\t\t\t\t\t\t<div>{{option.Display}}</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<template v-if=\"!slotProps.value || slotProps.value.length === 0\">\r\n\t\t\t\t\t\t</template>\r\n\t\t\t\t\t</template>\r\n\t\t\t\t\t<template #option=\"slotProps\">\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<div>{{slotProps.option.Display}}</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</template>\r\n\t\t\t\t</MultiSelect>\r\n\t\t\t\t<label for=\"clinic\">Secondary Measure</label>\r\n\t\t\t</span>\r\n        </div>\r\n\t\t\r\n        <div class=\"p-field p-col-12 p-md-12\">\r\n            <span class=\"p-float-label\">\r\n                <Dropdown id=\"externalEpisodeId\" v-model=\"selectedExternalIdOption\" :options=\"store.Fhir.State.Context.EpisodeOfCare\" optionLabel=\"active\">\r\n                    <template #value=\"slotProps\">\r\n                        <div v-if=\"slotProps.value\">\r\n                            {{slotProps.value.period.start}} {{slotProps.value.period.end ? ' - ' + slotProps.value.period.end : ''}} {{slotProps.value.type[0]?.text}}\r\n                        </div>\r\n                        <div v-else>\r\n                            &nbsp;\r\n                        </div>\r\n                    </template>\r\n                    <template #option=\"slotProps\">\r\n                        <div>{{slotProps.option.period.start}} {{slotProps.option.period.end ? ' - ' + slotProps.option.period.end : ''}} {{slotProps.option.type[0]?.text}}</div>\r\n                    </template>\r\n                </Dropdown>\r\n                <label for=\"externalEpisodeId\">Epic Episode</label>\r\n            </span>\r\n            <small v-if=\"!selectedExternalIdOption?.id && submitted\" class=\"p-error center\">An epic episode is required.</small>\r\n        </div>\r\n\r\n\r\n        <Divider type=\"dashed\"></Divider>\r\n\r\n\t\t<div class=\"p-col-12 p-md-8\"></div>\r\n\t\t<div class=\"p-col-12 p-md-4\">\r\n\t\t\t<Button type=\"submit\" label=\"Submit\" :loading=\"loading\" icon=\"pi pi-check\" class=\"\" />\r\n\t\t</div>\r\n    </form>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport useVuelidate from '@vuelidate/core';\r\nimport { required } from '@vuelidate/validators';\r\nimport { defineComponent } from '@vue/runtime-core';\r\nimport { inject } from 'vue';\r\nimport Episode from '../../models/foto/episode';\r\nimport Code from '../../models/code';\r\nimport ApplicationStore from '../../stores/applicationStore';\r\n\r\nexport default defineComponent({\r\n    name: 'EpisodeCreationForm',\r\n    setup() {\r\n        const store = inject('store') as ApplicationStore;\r\n        const patient = store.GetContextValue('FotoPatient');\r\n\r\n        return {\r\n            loading: false,\r\n            store: store,\r\n            patient: patient,\r\n            v$: useVuelidate(),\r\n        };\r\n    },\r\n    data: function(): any {\r\n        return {\r\n            selectedExternalIdOption: null,\r\n            selectedSecondaryMeasures: null,\r\n            episode: new Episode(),\r\n            submitted: false,\r\n            isLoadingOptions: false,\r\n        };\r\n    },\r\n    async created() {\r\n        await this.store.Code.SetClinics();\r\n        await this.store.Code.SetClinicians();\r\n        await this.store.Code.SetCareTypes();\r\n        await this.store.Code.SetPayerSource();\r\n\r\n        const episodes = this.store.Fhir.State.Context.EpisodeOfCare;\r\n        if (episodes?.length === 1) this.selectedExternalIdOption = episodes[0];\r\n    },\r\n    methods: {\r\n        async processSelection(codeSet: string, codeTextField: string, episodeIdField: string, episodeTextField: string, updateOptions: boolean) {\r\n            try{\r\n                const id = this.episode[episodeIdField];\r\n                const code = this.store.Code.State[codeSet].filter((c: any) => c?.Id == id || c?.Value == id)[0];\r\n    \r\n                this.episode[episodeTextField] = code[codeTextField];\r\n    \r\n                if (updateOptions) await this.updateOptions(codeSet);\r\n            }\r\n            catch(er){\r\n                Promise.reject(er);\r\n            }\r\n        },\r\n        async submit() {\r\n            this.submitted = true;\r\n            let externalId = this.selectedExternalIdOption?.id;\r\n\r\n            try{\r\n                if (!this.v$.episode.$invalid && externalId) {\r\n                    this.loading = true;\r\n                    this.$Progress.start();\r\n    \r\n                    const existingEp = this.store.Episode.FilterLocal((e: Episode) => { e.ExternalEpisodeId === externalId });\r\n    \r\n                    if(existingEp && existingEp.length > 0) externalId += `_${existingEp.length}`;\r\n    \r\n                    this.episode.SecondaryBallotText = this.episode.SecondaryMeasureIds.map((sp: Code) => sp.Display).join(',');\r\n                    this.episode.SecondaryMeasureIds = this.selectedSecondaryMeasures.map((sp: Code) => sp.Value);\r\n                    this.episode.CreateDate = new Date();\r\n                    this.episode.ExternalPatientId = this.patient.ExternalID;\r\n                    this.episode.ExternalEpisodeId = externalId;\r\n                    this.store.AddLog('Creating episode', this.episode);\r\n                    await this.store.Episode.Add(this.episode);\r\n    \r\n                    this.$emit('close');\r\n                    this.$Progress.finish();\r\n                    this.loading = false;\r\n                }\r\n            }\r\n            catch(er){\r\n                Promise.reject(er);\r\n            }\r\n        },\r\n        updateOptions: async function(updatedField: string): Promise<void> {\r\n            this.isLoadingOptions = true;\r\n\r\n            try{\r\n                this.store.AddLog('Updating option values for episode creation, with the current values set as', this.episode);\r\n\r\n                if (updatedField.toLocaleLowerCase() === 'caretype') {\r\n                    this.episode.BodyPartId = null;\r\n                    this.episode.ImpairmentId = null;\r\n                    this.episode.PrimaryMeasureId = null;\r\n                    this.episode.SecondaryMeasureIds = [];\r\n                } else if (updatedField.toLocaleLowerCase() === 'bodypart') {\r\n                    this.episode.ImpairmentId = null;\r\n                    this.episode.PrimaryMeasureId = null;\r\n                    this.episode.SecondaryMeasureIds = [];\r\n                } else if (updatedField.toLocaleLowerCase() === 'impairment') {\r\n                    this.episode.PrimaryMeasureId = null;\r\n                    this.episode.SecondaryMeasureIds = [];\r\n                }\r\n    \r\n                let impairments: Array<Code> = [];\r\n    \r\n                if (this.episode.CareTypeId !== null) {\r\n                    await this.store.Code.SetBodyParts(this.episode.CareTypeId);\r\n    \r\n                    if (this.episode.BodyPartId !== null) {\r\n                        impairments = await this.store.Code.SetImpairments(this.episode.CareTypeId, this.episode.BodyPartId);\r\n    \r\n                        if (this.episode.ImpairmentId !== null) \r\n                            await this.store.Code.SetSurgeryTypes(this.episode.BodyPartId, this.episode.ImpairmentId);\r\n                    } \r\n                    else \r\n                        impairments = await this.store.Code.SetImpairments(this.episode.CareTypeId);\r\n                }\r\n    \r\n                if (impairments?.length === 1) {\r\n                    this.episode.ImpairmentId = impairments[0].Value;\r\n                    this.processSelection('Impairment', 'Display', 'ImpairmentId', 'ImpairmentText', false);\r\n                }\r\n    \r\n                if (this.episode.SiteId !== null && ((this.episode.BodyPartId !== null && this.episode.BodyPartId !== -1) || (this.episode.ImpairmentId !== null && this.episode.ImpairmentId !== -1))) {\r\n                    const primaryMeasures = await this.store.Code.SetPrimaryMeasure(\r\n                        this.episode.SiteId\r\n                        , this.episode.CareTypeId\r\n                        , this.episode.BodyPartId !== null ? this.episode.BodyPartId : -1\r\n                        , this.episode.ImpairmentId !== null ? this.episode.ImpairmentId : -1,\r\n                    );\r\n    \r\n                    if (primaryMeasures?.length > 0) {\r\n                        this.episode.PrimaryMeasureId = primaryMeasures[0].Value;\r\n                        this.processSelection('PrimaryMeasure', 'Display', 'PrimaryMeasureId', 'PrimaryMeasureText', false);\r\n                    }\r\n    \r\n                    if (this.episode.PrimaryMeasureId !== null) {\r\n                        await this.store.Code.SetSecondaryMeasure(\r\n                            this.episode.SiteId\r\n                            , this.episode.CareTypeId\r\n                            , this.episode.BodyPartId !== null ? this.episode.BodyPartId : -1\r\n                            , this.episode.ImpairmentId !== null ? this.episode.ImpairmentId : -1\r\n                            , this.episode.PrimaryMeasureId,\r\n                        );\r\n                    }\r\n                }\r\n            }\r\n            catch(er){\r\n                Promise.reject(er);\r\n            }\r\n\r\n            this.isLoadingOptions = false;\r\n        },\r\n    },\r\n    validations() {\r\n        return {\r\n            episode: {\r\n                SiteId: {\r\n                    required,\r\n                },\r\n                TherapistId: {\r\n                    required,\r\n                },\r\n                CareTypeId: {\r\n                    required,\r\n                },\r\n                PayerSourceId: {\r\n                    required,\r\n                },\r\n            },\r\n        };\r\n    },\r\n});\r\n</script>","\r\nimport useVuelidate from '@vuelidate/core';\r\nimport { required } from '@vuelidate/validators';\r\nimport { defineComponent } from '@vue/runtime-core';\r\nimport { inject } from 'vue';\r\nimport Episode from '../../models/foto/episode';\r\nimport Code from '../../models/code';\r\nimport ApplicationStore from '../../stores/applicationStore';\r\n\r\nexport default defineComponent({\r\n    name: 'EpisodeCreationForm',\r\n    setup() {\r\n        const store = inject('store') as ApplicationStore;\r\n        const patient = store.GetContextValue('FotoPatient');\r\n\r\n        return {\r\n            loading: false,\r\n            store: store,\r\n            patient: patient,\r\n            v$: useVuelidate(),\r\n        };\r\n    },\r\n    data: function(): any {\r\n        return {\r\n            selectedExternalIdOption: null,\r\n            selectedSecondaryMeasures: null,\r\n            episode: new Episode(),\r\n            submitted: false,\r\n            isLoadingOptions: false,\r\n        };\r\n    },\r\n    async created() {\r\n        await this.store.Code.SetClinics();\r\n        await this.store.Code.SetClinicians();\r\n        await this.store.Code.SetCareTypes();\r\n        await this.store.Code.SetPayerSource();\r\n\r\n        const episodes = this.store.Fhir.State.Context.EpisodeOfCare;\r\n        if (episodes?.length === 1) this.selectedExternalIdOption = episodes[0];\r\n    },\r\n    methods: {\r\n        async processSelection(codeSet: string, codeTextField: string, episodeIdField: string, episodeTextField: string, updateOptions: boolean) {\r\n            try{\r\n                const id = this.episode[episodeIdField];\r\n                const code = this.store.Code.State[codeSet].filter((c: any) => c?.Id == id || c?.Value == id)[0];\r\n    \r\n                this.episode[episodeTextField] = code[codeTextField];\r\n    \r\n                if (updateOptions) await this.updateOptions(codeSet);\r\n            }\r\n            catch(er){\r\n                Promise.reject(er);\r\n            }\r\n        },\r\n        async submit() {\r\n            this.submitted = true;\r\n            let externalId = this.selectedExternalIdOption?.id;\r\n\r\n            try{\r\n                if (!this.v$.episode.$invalid && externalId) {\r\n                    this.loading = true;\r\n                    this.$Progress.start();\r\n    \r\n                    const existingEp = this.store.Episode.FilterLocal((e: Episode) => { e.ExternalEpisodeId === externalId });\r\n    \r\n                    if(existingEp && existingEp.length > 0) externalId += `_${existingEp.length}`;\r\n    \r\n                    this.episode.SecondaryBallotText = this.episode.SecondaryMeasureIds.map((sp: Code) => sp.Display).join(',');\r\n                    this.episode.SecondaryMeasureIds = this.selectedSecondaryMeasures.map((sp: Code) => sp.Value);\r\n                    this.episode.CreateDate = new Date();\r\n                    this.episode.ExternalPatientId = this.patient.ExternalID;\r\n                    this.episode.ExternalEpisodeId = externalId;\r\n                    this.store.AddLog('Creating episode', this.episode);\r\n                    await this.store.Episode.Add(this.episode);\r\n    \r\n                    this.$emit('close');\r\n                    this.$Progress.finish();\r\n                    this.loading = false;\r\n                }\r\n            }\r\n            catch(er){\r\n                Promise.reject(er);\r\n            }\r\n        },\r\n        updateOptions: async function(updatedField: string): Promise<void> {\r\n            this.isLoadingOptions = true;\r\n\r\n            try{\r\n                this.store.AddLog('Updating option values for episode creation, with the current values set as', this.episode);\r\n\r\n                if (updatedField.toLocaleLowerCase() === 'caretype') {\r\n                    this.episode.BodyPartId = null;\r\n                    this.episode.ImpairmentId = null;\r\n                    this.episode.PrimaryMeasureId = null;\r\n                    this.episode.SecondaryMeasureIds = [];\r\n                } else if (updatedField.toLocaleLowerCase() === 'bodypart') {\r\n                    this.episode.ImpairmentId = null;\r\n                    this.episode.PrimaryMeasureId = null;\r\n                    this.episode.SecondaryMeasureIds = [];\r\n                } else if (updatedField.toLocaleLowerCase() === 'impairment') {\r\n                    this.episode.PrimaryMeasureId = null;\r\n                    this.episode.SecondaryMeasureIds = [];\r\n                }\r\n    \r\n                let impairments: Array<Code> = [];\r\n    \r\n                if (this.episode.CareTypeId !== null) {\r\n                    await this.store.Code.SetBodyParts(this.episode.CareTypeId);\r\n    \r\n                    if (this.episode.BodyPartId !== null) {\r\n                        impairments = await this.store.Code.SetImpairments(this.episode.CareTypeId, this.episode.BodyPartId);\r\n    \r\n                        if (this.episode.ImpairmentId !== null) \r\n                            await this.store.Code.SetSurgeryTypes(this.episode.BodyPartId, this.episode.ImpairmentId);\r\n                    } \r\n                    else \r\n                        impairments = await this.store.Code.SetImpairments(this.episode.CareTypeId);\r\n                }\r\n    \r\n                if (impairments?.length === 1) {\r\n                    this.episode.ImpairmentId = impairments[0].Value;\r\n                    this.processSelection('Impairment', 'Display', 'ImpairmentId', 'ImpairmentText', false);\r\n                }\r\n    \r\n                if (this.episode.SiteId !== null && ((this.episode.BodyPartId !== null && this.episode.BodyPartId !== -1) || (this.episode.ImpairmentId !== null && this.episode.ImpairmentId !== -1))) {\r\n                    const primaryMeasures = await this.store.Code.SetPrimaryMeasure(\r\n                        this.episode.SiteId\r\n                        , this.episode.CareTypeId\r\n                        , this.episode.BodyPartId !== null ? this.episode.BodyPartId : -1\r\n                        , this.episode.ImpairmentId !== null ? this.episode.ImpairmentId : -1,\r\n                    );\r\n    \r\n                    if (primaryMeasures?.length > 0) {\r\n                        this.episode.PrimaryMeasureId = primaryMeasures[0].Value;\r\n                        this.processSelection('PrimaryMeasure', 'Display', 'PrimaryMeasureId', 'PrimaryMeasureText', false);\r\n                    }\r\n    \r\n                    if (this.episode.PrimaryMeasureId !== null) {\r\n                        await this.store.Code.SetSecondaryMeasure(\r\n                            this.episode.SiteId\r\n                            , this.episode.CareTypeId\r\n                            , this.episode.BodyPartId !== null ? this.episode.BodyPartId : -1\r\n                            , this.episode.ImpairmentId !== null ? this.episode.ImpairmentId : -1\r\n                            , this.episode.PrimaryMeasureId,\r\n                        );\r\n                    }\r\n                }\r\n            }\r\n            catch(er){\r\n                Promise.reject(er);\r\n            }\r\n\r\n            this.isLoadingOptions = false;\r\n        },\r\n    },\r\n    validations() {\r\n        return {\r\n            episode: {\r\n                SiteId: {\r\n                    required,\r\n                },\r\n                TherapistId: {\r\n                    required,\r\n                },\r\n                CareTypeId: {\r\n                    required,\r\n                },\r\n                PayerSourceId: {\r\n                    required,\r\n                },\r\n            },\r\n        };\r\n    },\r\n});\r\n","import { render } from \"./EpisodeCreationForm.vue?vue&type=template&id=f27922f2\"\nimport script from \"./EpisodeCreationForm.vue?vue&type=script&lang=ts\"\nexport * from \"./EpisodeCreationForm.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","<template>\r\n    <form autocomplete=\"off\" @submit.prevent=\"submit(!v$.$invalid)\" class=\"p-fluid\">\r\n\t\t<div class=\"p-field p-col-12 p-md-12\">\r\n\t\t\t<span class=\"p-float-label\">\r\n\t\t\t\t<Dropdown id=\"clinicianType\" v-model=\"visit.ClinicianType\" :options=\"options.clinicianType\" optionLabel=\"display\" optionValue=\"value\" :class=\"{ 'p-invalid': submitted && v$.visit.ClinicianType.$invalid }\" />\r\n\t\t\t\t<label for=\"clinicianType\">Clinician Type</label>\r\n\t\t\t</span>\r\n\t\t\t<small v-if=\"(v$.visit.ClinicianType.$invalid && submitted) || v$.visit.ClinicianType.$pending.$response\" class=\"p-error\" >A clinician type is required.</small>\r\n        </div>\r\n\r\n\t\t<div class=\"p-field p-col-12 p-md-12\">\r\n\t\t\t<span class=\"p-float-label\">\r\n\t\t\t\t<Calendar id=\"visitDate\" v-model=\"visit.VisitDate\" :showIcon=\"true\" :class=\"{ 'p-invalid': submitted && v$.visit.VisitDate.$invalid }\"/>\r\n\t\t\t\t<label for=\"visitDate\">Visit Date</label>\r\n\t\t\t</span>\r\n\t\t\t<small v-if=\"(v$.visit.VisitDate.$invalid && submitted) || v$.visit.VisitDate.$pending.$response\" class=\"p-error\">A visit date is required.</small>\r\n        </div>\r\n\r\n\t\t<div class=\"p-field p-col-12 p-md-12\">\r\n\t\t\t<span class=\"p-float-label\">\r\n\t\t\t\t<InputNumber showButtons id=\"minutesSpent\" v-model=\"visit.MinutesSpent\" suffix=\" minutes\" :min=\"1\" :class=\"{ 'p-invalid': submitted && v$.visit.MinutesSpent.$invalid }\" />\r\n\t\t\t\t<label for=\"minutesSpent\">Length</label>\r\n\t\t\t</span>\r\n\t\t\t<small v-if=\"(v$.visit.MinutesSpent.$invalid && submitted) || v$.visit.MinutesSpent.$pending.$response\" class=\"p-error\" >A visit length is required.</small>\r\n        </div>\r\n\r\n\t\t<div class=\"p-field p-col-12 p-md-12\">\r\n\t\t\t<span class=\"p-float-label\">\r\n\t\t\t\t<InputNumber showButtons id=\"revenues\" v-model=\"visit.Revenue\" mode=\"currency\" currency=\"USD\" locale=\"en-US\" :min=\"0\" :class=\"{ 'p-invalid': submitted && v$.visit.Revenue.$invalid }\" />\r\n\t\t\t\t<label for=\"revenue\">Revenue</label>\r\n\t\t\t</span>\r\n\t\t\t<small v-if=\"(v$.visit.Revenue.$invalid && submitted) || v$.visit.Revenue.$pending.$response\" class=\"p-error\">A revenue value is required.</small>\r\n        </div>\r\n\r\n\t\t<Divider type=\"dashed\"></Divider>\r\n\r\n\t\t<div class=\"p-grid\">\r\n\t\t\t<div class=\"p-col-12 p-md-8\"></div>\r\n\t\t\t<div class=\"p-col-12 p-md-4\">\r\n\t\t\t\t<Button type=\"submit\" label=\"Submit\" :loading=\"loading\" icon=\"pi pi-check\" class=\"\" />\r\n\t\t\t</div>\r\n\t\t</div>\r\n    </form>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport useVuelidate from '@vuelidate/core';\r\nimport { required } from '@vuelidate/validators';\r\nimport { defineComponent } from '@vue/runtime-core';\r\nimport { inject } from 'vue';\r\nimport ApplicationStore from '../../stores/applicationStore';\r\nimport Visit from '../../models/foto/visit';\r\n\r\nexport default defineComponent({\r\n    name: 'ArtifactVisitCreationForm',\r\n    setup: function(): any {\r\n        return {\r\n            store: inject('store') as ApplicationStore,\r\n            v$: useVuelidate(),\r\n            options: {\r\n                clinicianType: ['ATC', 'CCCSLP', 'COTA', 'DC', 'DPT', 'EP', 'LPN', 'MPT', 'MSPT', 'NA', 'OT', 'Other', \r\n                    'OTR', 'PhD', 'PT', 'PTA', 'RN', 'SLP', 'SPT', 'ST', 'RT'].map(i =>{ return { display: i, value: i }}),\r\n            },\r\n        };\r\n    },\r\n    props: {\r\n        externalEpisodeId: String,\r\n    },\r\n    data: function(): any {\r\n        return {\r\n            visit: new Visit() as Visit,\r\n            loading: false,\r\n            submitted: false,\r\n        };\r\n    },\r\n    methods: {\r\n        async submit() {\r\n            this.submitted = true;\r\n\r\n            try{\r\n                if (!this.v$.visit.$invalid) {\r\n                    this.loading = true;\r\n                    this.$Progress.start();\r\n    \r\n                    this.store.AddLog(`Adding visit to episode with external id of ${this.externalEpisodeId}`, this.visit);\r\n                    this.visit.ExternalEpisodeId = this.externalEpisodeId;\r\n                    await this.store.Episode.AddVisit(this.visit);\r\n    \r\n                    this.$emit('close');\r\n                    this.$Progress.finish();\r\n                    this.loading = false;\r\n                }\r\n            }\r\n            catch(er){\r\n                Promise.reject(er);\r\n            }\r\n        },\r\n    },\r\n    validations() {\r\n        return {\r\n            visit: {\r\n                ClinicianType: {\r\n                    required,\r\n                },\r\n                MinutesSpent: {\r\n                    required,\r\n                },\r\n                Revenue: {\r\n                    required,\r\n                },\r\n                VisitDate: {\r\n                    required,\r\n                },\r\n            },\r\n        };\r\n    },\r\n});\r\n</script>\r\n","export default class Visit \r\n{\r\n    ClinicianType: string;\r\n    ExternalEpisodeId: string;\r\n    MinutesSpent: number;\r\n    Revenue: number;\r\n    VisitDate: Date;\r\n}","\r\nimport useVuelidate from '@vuelidate/core';\r\nimport { required } from '@vuelidate/validators';\r\nimport { defineComponent } from '@vue/runtime-core';\r\nimport { inject } from 'vue';\r\nimport ApplicationStore from '../../stores/applicationStore';\r\nimport Visit from '../../models/foto/visit';\r\n\r\nexport default defineComponent({\r\n    name: 'ArtifactVisitCreationForm',\r\n    setup: function(): any {\r\n        return {\r\n            store: inject('store') as ApplicationStore,\r\n            v$: useVuelidate(),\r\n            options: {\r\n                clinicianType: ['ATC', 'CCCSLP', 'COTA', 'DC', 'DPT', 'EP', 'LPN', 'MPT', 'MSPT', 'NA', 'OT', 'Other', \r\n                    'OTR', 'PhD', 'PT', 'PTA', 'RN', 'SLP', 'SPT', 'ST', 'RT'].map(i =>{ return { display: i, value: i }}),\r\n            },\r\n        };\r\n    },\r\n    props: {\r\n        externalEpisodeId: String,\r\n    },\r\n    data: function(): any {\r\n        return {\r\n            visit: new Visit() as Visit,\r\n            loading: false,\r\n            submitted: false,\r\n        };\r\n    },\r\n    methods: {\r\n        async submit() {\r\n            this.submitted = true;\r\n\r\n            try{\r\n                if (!this.v$.visit.$invalid) {\r\n                    this.loading = true;\r\n                    this.$Progress.start();\r\n    \r\n                    this.store.AddLog(`Adding visit to episode with external id of ${this.externalEpisodeId}`, this.visit);\r\n                    this.visit.ExternalEpisodeId = this.externalEpisodeId;\r\n                    await this.store.Episode.AddVisit(this.visit);\r\n    \r\n                    this.$emit('close');\r\n                    this.$Progress.finish();\r\n                    this.loading = false;\r\n                }\r\n            }\r\n            catch(er){\r\n                Promise.reject(er);\r\n            }\r\n        },\r\n    },\r\n    validations() {\r\n        return {\r\n            visit: {\r\n                ClinicianType: {\r\n                    required,\r\n                },\r\n                MinutesSpent: {\r\n                    required,\r\n                },\r\n                Revenue: {\r\n                    required,\r\n                },\r\n                VisitDate: {\r\n                    required,\r\n                },\r\n            },\r\n        };\r\n    },\r\n});\r\n","import { render } from \"./ArtifactVisitCreationForm.vue?vue&type=template&id=7651729b\"\nimport script from \"./ArtifactVisitCreationForm.vue?vue&type=script&lang=ts\"\nexport * from \"./ArtifactVisitCreationForm.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","<template>\r\n    <form autocomplete=\"off\" @submit.prevent=\"submit(!v$.$invalid)\" class=\"p-fluid\">\r\n\t\t<div class=\"p-field p-col-12 p-md-12\">\r\n\t\t\t<span class=\"p-float-label\">\r\n\t\t\t\t<Calendar id=\"lastVisit\" v-model=\"discharge.LastVisit\" :showIcon=\"true\" :class=\"{ 'p-invalid': submitted && v$.discharge.LastVisit.$invalid }\"/>\r\n\t\t\t\t<label for=\"lastVisit\">Last Visit</label>\r\n\t\t\t</span>\r\n            <small v-if=\"(v$.discharge.LastVisit.$invalid && submitted) || v$.discharge.LastVisit.$pending.$response\" class=\"p-error\" >A last visit value is required.</small>\r\n        </div>\r\n\r\n\t\t<div class=\"p-field p-col-12 p-md-12\">\r\n\t\t\t<span class=\"p-float-label\">\r\n\t\t\t\t<InputNumber showButtons id=\"interruptionDays\" v-model=\"discharge.InterruptionDays\" suffix=\" days\" :min=\"0\" :class=\"{ 'p-invalid': submitted && v$.discharge.InterruptionDays.$invalid }\" />\r\n\t\t\t\t<label for=\"interruptionDays\">Interruption</label>\r\n\t\t\t</span>\r\n            <small v-if=\"(v$.discharge.InterruptionDays.$invalid && submitted) || v$.discharge.InterruptionDays.$pending.$response\" class=\"p-error\">An interruption days value is requred.</small>\r\n        </div>\r\n\r\n\t\t<div class=\"p-field p-col-12 p-md-12\">\r\n\t\t\t<span class=\"p-float-label\">\r\n\t\t\t\t<Textarea :autoResize=\"true\" v-model=\"discharge.ClinicianComments\" rows=\"5\" />\r\n\t\t\t\t<label for=\"comments\">Comments</label>\r\n\t\t\t</span>\r\n        </div>\r\n\r\n\t\t<Divider type=\"dashed\"></Divider>\r\n\r\n\t\t<div class=\"p-grid\">\r\n\t\t\t<div class=\"p-col-12 p-md-8\"></div>\r\n\t\t\t<div class=\"p-col-12 p-md-4\">\r\n\t\t\t\t<Button type=\"submit\" label=\"Submit\" :loading=\"loading\" icon=\"pi pi-check\" class=\"\" />\r\n\t\t\t</div>\r\n\t\t</div>\r\n    </form>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport useVuelidate from '@vuelidate/core';\r\nimport { required } from '@vuelidate/validators';\r\nimport { defineComponent } from '@vue/runtime-core';\r\nimport { inject } from 'vue';\r\nimport ApplicationStore from '../../stores/applicationStore';\r\nimport Discharge from '../../models/foto/discharge';\r\n\r\nexport default defineComponent({\r\n    name: 'EpisodeDischargeForm',\r\n    setup() {\r\n        return {\r\n            store: inject('store') as ApplicationStore,\r\n            v$: useVuelidate(),\r\n        };\r\n    },\r\n    props: {\r\n        externalEpisodeId: String,\r\n    },\r\n    data: function(): any {\r\n        return {\r\n            discharge: new Discharge() as Discharge,\r\n            submitted: false,\r\n            loading: false,\r\n        };\r\n    },\r\n    methods: {\r\n        async submit() {\r\n            this.submitted = true;\r\n\r\n            try{\r\n                if (!this.v$.discharge.$invalid) {\r\n                    this.store.AddLog('Discharging episode', this.episode);\r\n                    this.loading = true;\r\n                    this.$Progress.start();\r\n\r\n                    this.discharge.ExternalEpisodeId = this.externalEpisodeId;\r\n                    await this.store.Episode.Discharge(this.discharge);\r\n    \r\n                    this.loading = false;\r\n                    this.$emit('close');\r\n                    this.$Progress.finish();\r\n                }\r\n            }\r\n            catch(er){\r\n                Promise.reject(er);\r\n            }\r\n        },\r\n    },\r\n    validations() {\r\n        return {\r\n            discharge: {\r\n                InterruptionDays: {\r\n                    required,\r\n                },\r\n                LastVisit: {\r\n                    required,\r\n                },\r\n            },\r\n        };\r\n    },\r\n});\r\n</script>\r\n","export default class Discharge {\r\n    ClinicianComments: string = '';\r\n    ExternalEpisodeId: string;\r\n    InterruptionDays: number;\r\n    LastVisit: string;\r\n}","\r\nimport useVuelidate from '@vuelidate/core';\r\nimport { required } from '@vuelidate/validators';\r\nimport { defineComponent } from '@vue/runtime-core';\r\nimport { inject } from 'vue';\r\nimport ApplicationStore from '../../stores/applicationStore';\r\nimport Discharge from '../../models/foto/discharge';\r\n\r\nexport default defineComponent({\r\n    name: 'EpisodeDischargeForm',\r\n    setup() {\r\n        return {\r\n            store: inject('store') as ApplicationStore,\r\n            v$: useVuelidate(),\r\n        };\r\n    },\r\n    props: {\r\n        externalEpisodeId: String,\r\n    },\r\n    data: function(): any {\r\n        return {\r\n            discharge: new Discharge() as Discharge,\r\n            submitted: false,\r\n            loading: false,\r\n        };\r\n    },\r\n    methods: {\r\n        async submit() {\r\n            this.submitted = true;\r\n\r\n            try{\r\n                if (!this.v$.discharge.$invalid) {\r\n                    this.store.AddLog('Discharging episode', this.episode);\r\n                    this.loading = true;\r\n                    this.$Progress.start();\r\n\r\n                    this.discharge.ExternalEpisodeId = this.externalEpisodeId;\r\n                    await this.store.Episode.Discharge(this.discharge);\r\n    \r\n                    this.loading = false;\r\n                    this.$emit('close');\r\n                    this.$Progress.finish();\r\n                }\r\n            }\r\n            catch(er){\r\n                Promise.reject(er);\r\n            }\r\n        },\r\n    },\r\n    validations() {\r\n        return {\r\n            discharge: {\r\n                InterruptionDays: {\r\n                    required,\r\n                },\r\n                LastVisit: {\r\n                    required,\r\n                },\r\n            },\r\n        };\r\n    },\r\n});\r\n","import { render } from \"./EpisodeDischargeForm.vue?vue&type=template&id=50c1271e\"\nimport script from \"./EpisodeDischargeForm.vue?vue&type=script&lang=ts\"\nexport * from \"./EpisodeDischargeForm.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","<template>\r\n    <form autocomplete=\"off\" @submit.prevent=\"submit\" class=\"p-fluid\">\r\n        <div class=\"p-col-12 p-lg-12\">\r\n            <Fieldset legend=\"External ID\">\r\n                <div class=\"p-field p-col-12 p-md-12\">\r\n                    <DataTable :autoLayout='true' :value=\"episodeOptions\" v-model:selection=\"selectedEpisode\" dataKey=\"id\" responsiveLayout=\"scroll\" >\r\n                        <template #header>\r\n                            <div class=\"table-header p-d-flex p-flex-column p-flex-md-row p-jc-md-between\">\r\n                                <h3 class=\"p-mb-2 p-m-md-0 p-as-md-center\">Select an Episode</h3>\r\n                                <span class=\"p-float-label\">\r\n                                    <Dropdown @change=\"loadEpisodes\" :filter=\"true\" id=\"type\" v-model=\"selectedType\" :options=\"types\" optionLabel=\"Display\" optionValue=\"Value\" />\r\n                                    <label for=\"type\">Episode Type</label>\r\n                                </span>\r\n                            </div>\r\n                        </template>\r\n                        <template #empty v-if=\"!selectedType\">Please select an episode type from the dropdown above</template>\r\n                        <template #empty v-else-if=\"selectedType && episodeOptions.length === 0\">No episodes found</template>\r\n                        <Column selectionMode=\"single\" headerStyle=\"width: 3em\"></Column>\r\n                        <Column header=\"Diagnosis\">\r\n                            <template #body=\"slotProps\">\r\n                                <span>{{slotProps.data.diagnosis.map((d) => d.condition.display).join(', ')}}</span>\r\n                            </template>                \r\n                        </Column>\r\n                        <Column header=\"Type\">\r\n                            <template #body=\"slotProps\">\r\n                                <span>{{slotProps.data.type.map((t) => t.text).join(', ')}}</span>\r\n                            </template>\r\n                        </Column>\r\n                        <Column field=\"status\" header=\"Status\"></Column>\r\n                        <Column field=\"period.start\" header=\"Start\"></Column>\r\n                        <Column field=\"period.end\" header=\"End\"></Column>\r\n                    </DataTable>\r\n                </div>\r\n\r\n                <p v-if=\"(!selectedEpisode && submitted)\" class=\"p-error ta-c\" style=\"margin-bottom:0; text-align:center;\">An episode must be selected</p>\r\n            </FieldSet>\r\n        </div>\r\n        \r\n        <Divider type=\"dashed\"></Divider>\r\n\r\n        <div class=\"p-grid\">\r\n            <div class=\"p-col-12 p-md-10\"></div>\r\n            <div class=\"p-col-12 p-md-2\">\r\n                <Button type=\"submit\" label=\"Submit\" :loading=\"loading\" icon=\"pi pi-check\" class=\"\" />\r\n            </div>\r\n        </div>\r\n    </form>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent } from '@vue/runtime-core';\r\nimport { inject } from 'vue';\r\nimport ApplicationStore from '../../stores/applicationStore';\r\nimport Code from '../../models/code';\r\nimport { BundleEntry, Coding, Resource } from 'fhir/r4';\r\n\r\nexport default defineComponent({\r\n    name: 'ClaimEpisodeForm',\r\n    setup() {\r\n        const store = inject('store') as ApplicationStore\r\n        const codes = store.Fhir.State.ValueSet.EpisodeOfCareType?.expansion?.contains;\r\n        let types = [];\r\n\r\n        if (codes && codes.length > 0)\r\n            types = [...codes].sort((a: any, b: any) => a.display.localeCompare(b.display)).map((c: Coding) => new Code(`${c.system}|${c.code}`, `${c.display} (${c.code})`));\r\n\r\n        return {\r\n            store,\r\n            types\r\n        };\r\n    },\r\n    props: {\r\n        episodeId: Number,\r\n    },\r\n    data: function(): any {\r\n        return {\r\n            loading: false,\r\n            submitted: false,\r\n            selectedType: null,\r\n            selectedEpisode: null,\r\n            episodeOptions: [],\r\n        };\r\n    },\r\n    methods: {\r\n        async loadEpisodes() {\r\n            try{\r\n                this.submitted = false;\r\n                this.selectedEpisode = null;\r\n                const options = await this.store.Fhir.EpisodeSearch(this.selectedType);\r\n                this.episodeOptions = options.entry.map((e: BundleEntry) => e.resource).filter((e: Resource) => e.resourceType.toLowerCase() !== 'operationoutcome');\r\n            }\r\n            catch(er){\r\n                Promise.reject(er);\r\n            }\r\n        },\r\n        async submit() {\r\n            this.submitted = true;\r\n\r\n            try{\r\n                if (this.selectedEpisode) {\r\n                    this.store.AddLog(`Claiming episode id of ${this.episodeId} with the value of ${this.selectedEpisode.id}`);\r\n                    this.loading = true;\r\n                    this.$Progress.start();\r\n    \r\n                    this.store.Episode.Claim(this.episodeId, this.selectedEpisode.id);\r\n    \r\n                    this.loading = false;\r\n                    this.$emit('close');\r\n                    this.$Progress.finish();\r\n                }\r\n            }\r\n            catch(er){\r\n                Promise.reject(er);\r\n            }\r\n        },\r\n    },\r\n});\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n.p-datatable-emptymessage > td {\r\n\ttext-align: center !important;\r\n}\r\n</style>","export default class Code {\r\n    constructor(value: string | null = null, display: string | null = null){\r\n        this.Value = value;\r\n        this.Display = display;\r\n    }\r\n\r\n    public Value: string | null = null;\r\n    public Display: string | null = null;\r\n}","\r\nimport { defineComponent } from '@vue/runtime-core';\r\nimport { inject } from 'vue';\r\nimport ApplicationStore from '../../stores/applicationStore';\r\nimport Code from '../../models/code';\r\nimport { BundleEntry, Coding, Resource } from 'fhir/r4';\r\n\r\nexport default defineComponent({\r\n    name: 'ClaimEpisodeForm',\r\n    setup() {\r\n        const store = inject('store') as ApplicationStore\r\n        const codes = store.Fhir.State.ValueSet.EpisodeOfCareType?.expansion?.contains;\r\n        let types = [];\r\n\r\n        if (codes && codes.length > 0)\r\n            types = [...codes].sort((a: any, b: any) => a.display.localeCompare(b.display)).map((c: Coding) => new Code(`${c.system}|${c.code}`, `${c.display} (${c.code})`));\r\n\r\n        return {\r\n            store,\r\n            types\r\n        };\r\n    },\r\n    props: {\r\n        episodeId: Number,\r\n    },\r\n    data: function(): any {\r\n        return {\r\n            loading: false,\r\n            submitted: false,\r\n            selectedType: null,\r\n            selectedEpisode: null,\r\n            episodeOptions: [],\r\n        };\r\n    },\r\n    methods: {\r\n        async loadEpisodes() {\r\n            try{\r\n                this.submitted = false;\r\n                this.selectedEpisode = null;\r\n                const options = await this.store.Fhir.EpisodeSearch(this.selectedType);\r\n                this.episodeOptions = options.entry.map((e: BundleEntry) => e.resource).filter((e: Resource) => e.resourceType.toLowerCase() !== 'operationoutcome');\r\n            }\r\n            catch(er){\r\n                Promise.reject(er);\r\n            }\r\n        },\r\n        async submit() {\r\n            this.submitted = true;\r\n\r\n            try{\r\n                if (this.selectedEpisode) {\r\n                    this.store.AddLog(`Claiming episode id of ${this.episodeId} with the value of ${this.selectedEpisode.id}`);\r\n                    this.loading = true;\r\n                    this.$Progress.start();\r\n    \r\n                    this.store.Episode.Claim(this.episodeId, this.selectedEpisode.id);\r\n    \r\n                    this.loading = false;\r\n                    this.$emit('close');\r\n                    this.$Progress.finish();\r\n                }\r\n            }\r\n            catch(er){\r\n                Promise.reject(er);\r\n            }\r\n        },\r\n    },\r\n});\r\n","import { render } from \"./ClaimEpisodeForm.vue?vue&type=template&id=0a8f3d5e\"\nimport script from \"./ClaimEpisodeForm.vue?vue&type=script&lang=ts\"\nexport * from \"./ClaimEpisodeForm.vue?vue&type=script&lang=ts\"\n\nimport \"./ClaimEpisodeForm.vue?vue&type=style&index=0&id=0a8f3d5e&lang=scss\"\nscript.render = render\n\nexport default script","\r\nimport { defineComponent, inject, reactive } from '@vue/runtime-core';\r\nimport AppSplash from '../components/AppSplash.vue';\r\nimport AppDash from '../components/AppDash.vue';\r\nimport AppTopBar from '../components/AppTopBar.vue';\r\nimport AppSidebar from '../components/AppSidebar.vue';\r\nimport Layout from '../models/layout';\r\nimport SurveyLaunch from '../components/form/SurveyLaunch.vue';\r\nimport EpisodeCreationForm from '../components/form/EpisodeCreationForm.vue';\r\nimport ArtifactVisitCreationForm from '../components/form/ArtifactVisitCreationForm.vue';\r\nimport EpisodeDischargeForm from '../components/form/EpisodeDischargeForm.vue';\r\nimport ClaimEpisodeForm from '../components/form/ClaimEpisodeForm.vue';\r\n\r\nexport default defineComponent({\r\n    name: 'App',\r\n    components: {\r\n        SurveyLaunch,\r\n        EpisodeCreationForm,\r\n        ArtifactVisitCreationForm,\r\n        EpisodeDischargeForm,\r\n        ClaimEpisodeForm,\r\n        AppSplash,\r\n        AppTopBar,\r\n        AppDash,\r\n        AppSidebar,\r\n    },\r\n    setup() {\r\n        const store = inject('store');\r\n        const fhirClient = inject('fhirclient');\r\n        const layout = reactive(new Layout((fhirClient as any)?.user?.id));\r\n\r\n        return {\r\n            fhirClient,\r\n            store,\r\n            layout\r\n        };\r\n    },\r\n    data: function(): any {\r\n        return {\r\n            selectedId: null,\r\n            outboundPatient: null,\r\n            showClaimEpisodeForm: false,\r\n            showSurvey: false,\r\n            showDischargeForm: false,\r\n            showVisitForm: false,\r\n            showEpisodeForm: false,\r\n        };\r\n    },\r\n    async created() {\r\n        try {\r\n            this.$Progress.start();\r\n            (Window as any).$toast = this.$toast;\r\n            (Window as any).$progress = this.$Progress;\r\n\r\n            const started = performance.now();\r\n            await this.store.InitAsync(this.fhirClient);\r\n            const stopped = performance.now();\r\n\r\n            this.outboundPatient = this.store.GetContextValue('FotoPatient');\r\n            this.removeLoaderAfterElapsed(stopped - started);\r\n        } catch (e) {\r\n            Promise.reject(e);\r\n        }\r\n    },\r\n    provide() {\r\n        return {\r\n            store: this.store,\r\n        };\r\n    },\r\n    computed: {\r\n        speedDialItems: function(): Array<object> {\r\n            const items = [\r\n                {\r\n                    label: this.layout.mode === 'static' ? 'Hide Sidebar' : 'Show Sidebar',\r\n                    icon: this.layout.mode === 'static' ? 'pi pi-align-justify' : 'pi pi-align-right',\r\n                    command: () => {\r\n                        this.store.AddLog(`Toggling layout mode to ${this.layout.colorMode === 'static' ? 'overlay' : 'static'}`);\r\n                        this.layout.toggleMode()\r\n                    }\r\n                },\r\n                {\r\n                    label: this.layout.colorMode === 'light' ? 'Dark Mode' : 'Light Mode',\r\n                    icon: this.layout.colorMode === 'light' ? 'pi pi-moon' : 'pi pi-sun',\r\n                    command: () => {\r\n                        this.layout.loading = true;\r\n                        this.store.AddLog(`Toggling color mode to ${this.layout.colorMode === 'light' ? 'dark' : 'light'}`);\r\n                        setTimeout(() => this.layout.toggleColorMode(), 500)\r\n                        setTimeout(() => {\r\n                            this.layout.loading = false;\r\n                        }, 2500);\r\n                    }\r\n                },\r\n                {\r\n                    label: 'Refresh Data',\r\n                    icon: 'pi pi-refresh',\r\n                    command: async () => { \r\n                        this.layout.loading = true;\r\n                        this.store.AddLog('Refreshing data');\r\n                        \r\n                        const started = performance.now();\r\n                        this.store = await this.store.Refresh(this.fhirClient);\r\n                        const stopped = performance.now();\r\n\r\n                        this.removeLoaderAfterElapsed(stopped - started);\r\n                    },\r\n                },\r\n            ];\r\n                    \r\n            if(this.store.Fhir.State.Context.LaunchedByResource === \"Practitioner\"){\r\n                items.unshift({\r\n                    label: 'Create Episode',\r\n                    icon: 'pi pi-plus-circle',\r\n                    command: () => {\r\n                        this.showEpisodeForm = true\r\n                        this.store.AddLog('Displaying episode creation form.');\r\n                    }\r\n                });\r\n            }\r\n\r\n            return items;\r\n        },\r\n    },\r\n    methods: {\r\n        removeLoaderAfterElapsed(elapsed: number){\r\n            if(elapsed < 2500){\r\n                setTimeout(() => {\r\n                    this.$Progress.finish();\r\n                    this.layout.loading = false;                    \r\n                }, 2500 - elapsed)\r\n            }\r\n            else{\r\n                this.$Progress.finish();\r\n                this.layout.loading = false;\r\n            }\r\n            setTimeout(() => {\r\n                this.layout.loading = false;\r\n            }, 2500);\r\n        },\r\n        toggleDischargeView(){\r\n            this.layout.toggleDischargeView();\r\n        },\r\n        toggleCardEpisodeDisplay(){\r\n            this.layout.onCardToggle();\r\n        },\r\n        displayVisitModal(externalEpisodeId: string) {\r\n            this.store.AddLog(`Displaying visit modal for episode with external id ${externalEpisodeId}`);\r\n            this.selectedId = externalEpisodeId;\r\n            this.showVisitForm = true;\r\n        },\r\n        displayEpisodeClaimModal(episodeId: number) {\r\n            this.store.AddLog(`Displaying claim modal for episode with id ${episodeId}`);\r\n            this.selectedId = episodeId;\r\n            this.showClaimEpisodeForm = true;\r\n        },\r\n        displayDischargeModal(externalEpisodeId: string) {\r\n            this.store.AddLog(`Displaying discharge modal for episode with external id ${externalEpisodeId}`);\r\n            this.selectedId = externalEpisodeId;\r\n            this.showDischargeForm = true;\r\n        },\r\n        displaySurveyModal(slotProps: any) {\r\n            this.store.AddLog(`Displaying survey modal for episode with id ${slotProps.EpisodeId}`);\r\n            this.selectedId = slotProps.EpisodeId;\r\n            this.showSurvey = true;\r\n        },\r\n        isSidebarVisible() {\r\n            if (window.innerWidth > 1024) {\r\n                if (this.layout.mode === 'static') return !this.layout.staticMenuInactive;\r\n                else if (this.layout.mode === 'overlay') return this.layout.overlayMenuActive;\r\n                else return true;\r\n            } else return true;\r\n        },\r\n        containerClass: function(): Array<Object> {\r\n            return [\r\n                'layout-wrapper',\r\n                {\r\n                    'layout-overlay': this.layout.mode === 'overlay',\r\n                    'layout-static': this.layout.mode === 'static',\r\n                    'layout-static-sidebar-inactive': this.layout.staticMenuInactive && this.layout.mode === 'static',\r\n                    'layout-overlay-sidebar-active': this.layout.overlayMenuActive && this.layout.mode === 'overlay',\r\n                    'layout-mobile-sidebar-active': this.layout.mobileMenuActive,\r\n                },\r\n            ];\r\n        },\r\n    },\r\n});\r\n","import { render } from \"./App.vue?vue&type=template&id=78c82b70\"\nimport script from \"./App.vue?vue&type=script&lang=ts\"\nexport * from \"./App.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","import * as R4 from 'fhir/r4';\r\n\r\nexport default class Patient {\r\n    private internalID: number | null = null;\r\n    private firstName: string = '';\r\n    private lastName: string = '';\r\n    private middleIntial: string = '';\r\n    private dateOfBirth: Date | null = null;\r\n    private email: string = '';\r\n    private gender: string = '';\r\n    private language: string = '';\r\n    private externalID: string = '';\r\n    private externalSiteID: string = '';\r\n    private alias: string = '';\r\n\r\n    set Alias(al: R4.Identifier | string) {\r\n        if (typeof al !== 'string') {\r\n            if (al.value) this.alias = al.value;\r\n        } \r\n        else if (al) this.alias = al;\r\n    }\r\n\r\n    get Alias() {\r\n        return this.alias;\r\n    }\r\n\r\n    set InternalID(id: number | null) {\r\n        this.internalID = id;\r\n    }\r\n\r\n    get InternalID() {\r\n        return this.internalID;\r\n    }\r\n\r\n    set ExternalSiteID(id: R4.Reference | string) {\r\n        if (typeof id !== 'string') {\r\n            if (id && id.reference) this.externalSiteID = id.reference.toLowerCase().replace('organization/', '');\r\n        } \r\n        else if (id) this.externalSiteID = id;\r\n    }\r\n\r\n    get ExternalSiteID() {\r\n        return this.externalSiteID;\r\n    }\r\n\r\n    get ExternalID() {\r\n        return this.externalID;\r\n    }\r\n\r\n    set ExternalID(id: R4.Identifier | string) {\r\n        if (typeof id !== 'string') {\r\n            if (id && id.value) this.externalID = id.value;\r\n        } \r\n        else if (id) this.externalID = id;\r\n    }\r\n\r\n    set Language(lang: R4.PatientCommunication | string) {\r\n        if (typeof lang !== 'string') {\r\n            if (lang && lang.language.coding) this.language = lang.language.coding[0].code ?? '';\r\n        } \r\n        else if (lang) this.language = lang.substring(0, 2);\r\n    }\r\n\r\n    get Language() {\r\n        return this.language;\r\n    }\r\n\r\n    set Gender(gender: string) {\r\n        if (gender.length > 0) this.gender = gender[0];\r\n    }\r\n\r\n    get Gender() {\r\n        return this.gender;\r\n    }\r\n\r\n    set Email(email: R4.ContactPoint | string) {\r\n        if (email) {\r\n            let em: string = '';\r\n\r\n            if (typeof email !== 'string') {\r\n                if (email.value) em = email.value;\r\n            } \r\n            else em = email;\r\n\r\n            if (em.includes('@') && em.includes('.')) this.email = em;\r\n        }\r\n    }\r\n\r\n    get Email() {\r\n        return this.email;\r\n    }\r\n\r\n    set DateOfBirth(date: string) {\r\n        this.dateOfBirth = new Date(date);\r\n    }\r\n\r\n    get DateOfBirth() {\r\n        return this.dateOfBirth?.toDateString() ?? '';\r\n    }\r\n\r\n    get DateOfBirthStr() {\r\n        return this.dateOfBirth ?? `/Date(${this.dateOfBirth.getTime()}-0400)/`;\r\n    }\r\n\r\n    set Name(name: R4.HumanName | string) {\r\n        if (typeof name !== 'string') {\r\n            if (name.family)\r\n                this.lastName = name.family;\r\n\r\n            if (name.given) {\r\n                if (name.given?.length > 0) this.firstName = name.given[0];\r\n                if (name.given.length > 1) this.middleIntial = name.given[1][0];\r\n            }\r\n        } else {\r\n            const nameParts: string[] = name.split(' ');\r\n\r\n            if (nameParts.length > 1) {\r\n                this.firstName = nameParts[0];\r\n\r\n                if (nameParts.length > 2) {\r\n                    this.middleIntial = nameParts[1][0];\r\n                    this.lastName = nameParts[2];\r\n                } \r\n                else this.lastName = nameParts[1];\r\n            }\r\n        }\r\n    }\r\n\r\n    get Name() {\r\n        if(this.middleIntial) return `${this.firstName} ${this.middleIntial} ${this.lastName}`;\r\n        else return `${this.firstName} ${this.lastName}`;\r\n    }\r\n\r\n    set FirstName(fName: string) {\r\n        this.firstName = fName;\r\n    }\r\n\r\n    get FirstName() {\r\n        return this.firstName;\r\n    }\r\n\r\n    set LastName(lName: string) {\r\n        this.lastName = lName;\r\n    }\r\n\r\n    get LastName() {\r\n        return this.lastName;\r\n    }\r\n\r\n    set MiddleIntitial(mInitial: string) {\r\n        if (mInitial) this.middleIntial = mInitial[0];\r\n    }\r\n\r\n    get MiddleInitial() {\r\n        return this.middleIntial;\r\n    }\r\n\r\n    ToJSON(): string {\r\n        return JSON.stringify([\r\n            {\r\n                FirstName: this.FirstName,\r\n                LastName: this.LastName,\r\n                Alias: this.Alias,\r\n                DateOfBirth: this.dateOfBirth,\r\n                Email: this.Email,\r\n                ExternalId: this.ExternalID,\r\n                ExternalSiteId: this.ExternalSiteID,\r\n                Gender: this.Gender,\r\n                Language: this.Language,\r\n                MiddleInitial: this.MiddleInitial,\r\n            },\r\n        ]);\r\n    }\r\n\r\n    static FromResource(pat: R4.Patient, locationName: string | undefined): Patient {\r\n        const patient = new Patient();\r\n\r\n        if (pat.id) patient.ExternalID = pat.id;\r\n\r\n        if (pat.communication) patient.Language = pat.communication[0];\r\n        else patient.Language = 'en';\r\n\r\n        if (pat.gender) patient.Gender = pat.gender;\r\n\r\n        if (pat.name) patient.Name = pat.name.filter(x => x.use == 'official')[0] as R4.HumanName;\r\n\r\n        if (pat.birthDate && pat.birthDate !== '') patient.DateOfBirth = pat.birthDate;\r\n        else throw new Error('Unable to find patient birthdate. Please provide a birthdate for this patient.');\r\n\r\n        if (pat.telecom) patient.Email = pat.telecom.filter(x => x.system == 'email')[0];\r\n\r\n        if (pat.managingOrganization) patient.ExternalSiteID = pat.managingOrganization;\r\n\r\n        if (locationName) patient.ExternalSiteID = locationName;\r\n\r\n        if (pat.identifier && pat.identifier.length > 0) {\r\n            const alias = pat.identifier.filter(i => i.type?.text?.toUpperCase() == 'MYCHARTLOGIN');\r\n            if (alias && alias.length > 0) patient.Alias = alias[0];\r\n        }\r\n\r\n        return patient;\r\n    }\r\n}\r\n","export default class ToastService {\r\n    static Success(message: string, length: number = 8000){\r\n        (<any>Window).$toast.add({\r\n            severity: 'success',\r\n            summary: 'Success',\r\n            detail: message,\r\n            life: length,\r\n        });\r\n    }\r\n\r\n    static Warning(message: string, length: number = 8000){\r\n        (<any>Window).$toast.add({\r\n            severity: 'warn',\r\n            summary: 'Warning',\r\n            detail: message,\r\n            life: length,\r\n        });\r\n    }\r\n\r\n    static Error(message: string, length: number = 8000){\r\n        (<any>Window).$toast.add({\r\n            severity: 'error',\r\n            summary: 'Error',\r\n            detail: message,\r\n            life: length,\r\n        });\r\n    }\r\n}\r\n","import ApiResponse from '../../models/api/apiResponse';\r\nimport ToastService from '../toastService';\r\n\r\nexport default class ApiService {\r\n    private readonly _cacheKey: string;\r\n\r\n    constructor(cacheKey: string){\r\n        this._cacheKey = \"nh-foto-sof-\" + cacheKey;\r\n    }\r\n\r\n    async Fetch<T>(request: Request, cache: boolean = true, successMessage: string = null): Promise<T> {\r\n        try{\r\n            if(cache){\r\n                const result = await this.SearchCache(request.url);\r\n                if(result) return result;\r\n            }\r\n\r\n            const response = await fetch(request);\r\n\r\n            if(response.ok){\r\n                const clonedResp = response.clone();\r\n                const content = await response.json() as ApiResponse;\r\n                \r\n                if (!content.successful) throw new Error(content.errorMessage);\r\n                if(successMessage) ToastService.Success(successMessage);\r\n                \r\n                await this.PutCache(request.url, clonedResp);\r\n                \r\n                return content.data as T;\r\n            }\r\n            else throw new Error(await response.text());\r\n        }\r\n        catch(error: any){\r\n            error.request = request; \r\n            Promise.reject(error);\r\n        }\r\n    }\r\n\r\n    async PutCache(key: string | Request, response: Response){\r\n        const cache = await caches.open(this._cacheKey);\r\n        await cache.put(key, response);\r\n    }\r\n\r\n    async SearchCache(key: string | Request){\r\n        const cache = await caches.open(this._cacheKey);\r\n        const match = await cache.match(key);\r\n\r\n        if(match && match.ok){\r\n            const content = await match.json() as ApiResponse;\r\n\r\n            if (content.successful) \r\n                return content.data;\r\n        }\r\n    }\r\n}\r\n","import Patient from '@/models/foto/patient';\r\nimport ApiResponse from '@/models/api/apiResponse';\r\nimport ApiService from '@/services/api/apiService';\r\n\r\nexport default class PatientService {\r\n    private readonly _apiService: ApiService;\r\n\r\n    constructor(cachesKey: string){\r\n        this._apiService = new ApiService(\"patient-\" + cachesKey);\r\n    }\r\n\r\n    async Create(patient: Patient): Promise<ApiResponse> {\r\n        return await this._apiService.Fetch<any>(new Request(`/api/Foto/patient2/json`,\r\n        {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: patient.ToJSON()\r\n        }), false);\r\n    }\r\n}\r\n","import { FunctionalAssessment } from \"./functionalAssessment\";\r\nimport { PatientReported } from \"./patientReported\";\r\nimport { PatientReportType } from \"./patientReportType\";\r\nimport { PQRSClaimsReportingCode } from \"./pqrsClaimsReportingCode\";\r\nimport { RiskAdjustedCriteria } from \"./riskAdjustedCriteria\";\r\n\r\nexport default class Artifact \r\n{\r\n    EpisodeId: number;\r\n    ExternalEpisodeId: string;\r\n    FunctionalAssessments: FunctionalAssessment[];\r\n    PatientReportedItems: PatientReported[];\r\n    PQRSClaimsReportingCodes: PQRSClaimsReportingCode[];\r\n    ReportId: number;\r\n    ReportType: PatientReportType;\r\n    RiskAdjustedItems: RiskAdjustedCriteria[];\r\n    SurveyDateTimeCompleted: string;\r\n    SurveyDateTimeStarted: string;\r\n    Visit: number;\r\n}","import Artifact from '@/models/foto/artifact';\r\nimport Email from '@/models/foto/email';\r\nimport ApiService from '@/services/api/apiService';\r\nimport ToastService from '../toastService';\r\n\r\nexport default class ArtifactService {\r\n    private readonly _apiService: ApiService;\r\n\r\n    constructor(cachesKey: string){\r\n        this._apiService = new ApiService(\"artifact-\" + cachesKey);\r\n    }\r\n\r\n    async GetReport(artifact: Artifact): Promise<Array<any>> {\r\n        return await this._apiService.Fetch<Array<any>>(new Request(`/api/Foto/report/json/${artifact.ReportId}/${artifact.ReportType}`,\r\n        {\r\n            method: 'GET',\r\n            headers: { 'Content-Type': 'application/json' },\r\n        }));\r\n    }\r\n\r\n    async GetArtifacts(externalEpisodeId: string, useCache: boolean = false) : Promise<Array<Artifact>> {\r\n        const artifacts: Array<Artifact> = await this._apiService.Fetch<Array<Artifact>>(new Request(`/api/Foto/artifact2/json/episode/${externalEpisodeId}`,\r\n        {\r\n            method: 'GET',\r\n            headers: { 'Content-Type': 'application/json' },\r\n        }), useCache);\r\n\r\n        return artifacts\r\n            .map((a: Artifact) => Object.assign(new Artifact(), a))\r\n            .sort((a: Artifact, b: Artifact) => b.SurveyDateTimeCompleted.localeCompare(a.SurveyDateTimeCompleted));\r\n    }\r\n\r\n    async SetVisit(artifact: Artifact, visit: number): Promise<any> {\r\n        const response = await this._apiService.Fetch<any>(new Request(`/api/Foto/episode/ArtifactVisit`, {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({\r\n                ExternalEpisodeId: artifact.ExternalEpisodeId,\r\n                ReportId: artifact.ReportId,\r\n                VisitNumber: visit\r\n            })\r\n        }), false);\r\n\r\n        const artifacts = await this.GetArtifacts(artifact.ExternalEpisodeId, true);\r\n        const changed_index = artifacts.findIndex((a: Artifact) => a.ReportId === artifact.ReportId);\r\n\r\n        if(changed_index >= 0){\r\n            artifact.Visit = visit;\r\n            artifacts[changed_index].Visit = visit;\r\n            await this._apiService.PutCache(`/api/Foto/artifact2/json/episode/${artifact.ExternalEpisodeId}`, new Response(JSON.stringify(artifacts)));\r\n        }\r\n\r\n        ToastService.Success(\"Visit number updated successfully\");\r\n\r\n        return response;\r\n    }\r\n\r\n    async Email(email: Email): Promise<string>{\r\n        return await this._apiService.Fetch<any>(new Request(`/api/Foto/Survey/Email`, {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(email)\r\n        }), false, 'Email sent successfully');\r\n    }\r\n}","import Artifact from \"@/models/foto/artifact\";\r\nimport Email from \"@/models/foto/email\";\r\nimport Episode from \"@/models/foto/episode\";\r\nimport ArtifactService from \"@/services/foto/artifactService\";\r\nimport { reactive, readonly } from \"vue\";\r\n\r\nexport default class ArtifactStore {\r\n    private ArtifactState: any = reactive({\r\n        Artifacts: [] as Array<Episode>\r\n    });\r\n    \r\n    public State: any = readonly(this.ArtifactState);\r\n\r\n    private readonly _externalPatientId: string;\r\n    private readonly _artifactService: ArtifactService;\r\n\r\n    constructor(externalPatientId: string){\r\n        this._externalPatientId = externalPatientId;\r\n        this._artifactService = new ArtifactService(this._externalPatientId);\r\n    }\r\n    \r\n    async ForEpisode(externalEpisodeId: string){\r\n        this.ArtifactState.Artifacts = await this._artifactService.GetArtifacts(externalEpisodeId);\r\n        return this.State.Artifacts;\r\n    }\r\n\r\n    async SetVisit(reportId: number, value: number){\r\n        const artifact = this.ArtifactState.Artifacts.filter((a: Artifact) => a.ReportId === reportId)[0];\r\n        return await this._artifactService.SetVisit(artifact, value);\r\n    }\r\n\r\n    async GetReport(reportId: number){\r\n        const artifact = this.ArtifactState.Artifacts.filter((a: Artifact) => a.ReportId === reportId)[0];\r\n        return await this._artifactService.GetReport(artifact);\r\n    }\r\n\r\n    async EmailSurveyInformation(email: Email){\r\n        return await this._artifactService.Email(email);\r\n    }\r\n}\r\n","export default class Clinician {\r\n    FirstName: string;\r\n    LastName: string;\r\n    Alias: string;\r\n    Credentials: string;\r\n    Email: string;\r\n    Id: number;\r\n    NPI: string;\r\n    Qualifications: string;\r\n    Enabled: boolean;\r\n\r\n    get Name(){\r\n        return `${this.FirstName} ${this.LastName}`;\r\n    }\r\n}","import Code from '@/models/code';\r\nimport Clinic from '@/models/foto/clinic';\r\nimport Clinician from '@/models/foto/clinician';\r\nimport ApiService from '@/services/api/apiService';\r\n\r\nexport default class CodeService {\r\n    private readonly _apiService: ApiService;\r\n\r\n    constructor(cachesKey: string){\r\n        this._apiService = new ApiService(\"code-\" + cachesKey);\r\n    }\r\n\r\n    async GetCodes(listName: string) : Promise<Array<Code>>{\r\n        const response = await this._apiService.Fetch<Array<any>>(new Request(`/api/Foto/episode/${listName}`,\r\n        {\r\n            method: 'GET',\r\n            headers: { 'Content-Type': 'application/json' },\r\n        }));\r\n\r\n        return response.map((code: any) => new Code(code.Key, code.Value));\r\n    }\r\n\r\n    async GetClinics() : Promise<Array<Clinic>>{\r\n        return await this._apiService.Fetch<Array<any>>(new Request(`/api/Foto/clinic/json/`,\r\n        {\r\n            method: 'GET',\r\n            headers: { 'Content-Type': 'application/json' },\r\n        }));\r\n    }\r\n\r\n    async GetClinicians() : Promise<Array<Clinician>>{\r\n        return await this._apiService.Fetch<Array<any>>(new Request(`/api/Foto/clinician/json/`,\r\n        {\r\n            method: 'GET',\r\n            headers: { 'Content-Type': 'application/json' },\r\n        }));\r\n    }\r\n}\r\n","import ICodeState from \"@/interfaces/ICodeState\";\r\nimport Clinician from \"@/models/foto/clinician\";\r\nimport CodeService from \"@/services/foto/codeService\";\r\nimport { reactive, readonly } from \"vue\";\r\n\r\nexport default class CodeListStore {\r\n    private _codeState: any = reactive(\r\n        {\r\n            PrimaryMeasure: [],\r\n            SecondaryMeasure: [],\r\n            CareType: [],\r\n            PayerSource: [],\r\n            BodyPart: [],\r\n            Impairment: [],\r\n            SurgeryType: [],\r\n            Clinic: [],\r\n            Clinician: []\r\n        }\r\n    );\r\n    \r\n    State: ICodeState = readonly(this._codeState); \r\n    private readonly _locationId: string;\r\n    private readonly _codeService: CodeService;\r\n\r\n    constructor(locationId: string){\r\n        this._locationId = locationId;\r\n        this._codeService = new CodeService(this._locationId);\r\n    }\r\n\r\n    async SetCareTypes() {\r\n        this._codeState.CareType = await this._codeService.GetCodes(\"GetCareTypeList/\");\r\n        return this._codeState.CareType;\r\n    }\r\n\r\n    async SetPayerSource(){\r\n        this._codeState.PayerSource = await this._codeService.GetCodes(\"GetPayerSourceList/\");\r\n        return this._codeState.PayerSource;\r\n    }\r\n\r\n    async SetBodyParts(careTypeId: string){\r\n        this._codeState.BodyPart = await this._codeService.GetCodes(`GetBodyPartList/${careTypeId}`);\r\n        return this._codeState.BodyPart;\r\n    }\r\n\r\n    async SetImpairments(careTypeId: string, bodyPartId: string | null = null){\r\n        let uri:string = `GetImpairmentList/${careTypeId}`;\r\n\r\n        if(bodyPartId !== null) uri += `/${bodyPartId}`;\r\n\r\n        try{\r\n            this._codeState.Impairment = await this._codeService.GetCodes(uri);\r\n        }\r\n        catch(ex: any){\r\n            this._codeState.Impairment = await this._codeService.GetCodes(`GetImpairmentList/${careTypeId}`);\r\n        }\r\n        \r\n        return this._codeState.Impairment;\r\n    }\r\n\r\n    public async SetSurgeryTypes(bodyPartId: string, impairmentId: string){\r\n        this._codeState.SurgeryType = await this._codeService.GetCodes(`GetSurgeryTypeList/${bodyPartId}/${impairmentId}`);\r\n        return this._codeState.SurgeryType;\r\n    }\r\n\r\n    async SetClinics(){\r\n        this._codeState.Clinic = await this._codeService.GetClinics();\r\n        return this._codeState.Clinic;\r\n    }\r\n\r\n    async SetClinicians(){\r\n        this._codeState.Clinician = (await this._codeService.GetClinicians()).map(c => Object.assign(new Clinician(), c));\r\n        return this._codeState.Clinician;\r\n    }\r\n\r\n    async SetPrimaryMeasure(siteId: string, careTypeId: string, bodypartId: string, impairmentId: string){\r\n        this._codeState.PrimaryMeasure = await this._codeService.GetCodes(`GetPrimaryMeasureList/${siteId}/${careTypeId}/${bodypartId}/${impairmentId}`);\r\n        return this._codeState.PrimaryMeasure;\r\n    }\r\n\r\n    async SetSecondaryMeasure(siteId: string, careTypeId: string, bodypartId: string, impairmentId: string, primaryMeasureId:string){\r\n        this._codeState.SecondaryMeasure = await this._codeService.GetCodes(`GetSecondaryMeasureList/${siteId}/${careTypeId}/${bodypartId}/${impairmentId}/${primaryMeasureId}`);\r\n        return this._codeState.SecondaryMeasure;\r\n    }\r\n}\r\n","import Episode from '@/models/foto/episode';\r\nimport ApiService from '@/services/api/apiService';\r\nimport Visit from '@/models/foto/visit';\r\nimport Discharge from '@/models/foto/discharge';\r\nimport SurveyDetails from '@/models/foto/surveyDetails';\r\nimport ToastService from '../toastService';\r\n\r\nexport default class EpisodeService {\r\n    private readonly _apiService: ApiService;\r\n\r\n    constructor(cachesKey: string){\r\n        this._apiService = new ApiService(\"episode-\" + cachesKey);\r\n    }\r\n\r\n    async Claim(episode: Episode, externalEpisodeId: string) : Promise<any>{\r\n        const result = await this._apiService.Fetch<any>(new Request(`/api/Foto/episode/json/claim2`,\r\n        {\r\n            method: 'PUT',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({\r\n                episodeId: episode.EpisodeId,\r\n                externalEpisodeId: externalEpisodeId  \r\n            })\r\n        }), false);\r\n\r\n        if(result.Success){\r\n            const episodes = await this.GetAll(episode.ExternalPatientId);\r\n            const episode_index = episodes.findIndex((e: Episode) => e.EpisodeId === episode.EpisodeId);\r\n            episodes[episode_index].ExternalEpisodeId = externalEpisodeId;\r\n            episode.ExternalEpisodeId = externalEpisodeId;\r\n\r\n            await this._apiService.PutCache(`/api/Foto/episode/json/GetEpisodeStatus/${episode.ExternalPatientId}/Both`, new Response(JSON.stringify(episodes)));\r\n            ToastService.Success(\"Episode claimed successfully.\");\r\n        }\r\n        else\r\n            ToastService.Error(`Unable to claim episode: ${result.Text}`);\r\n\r\n        return result;\r\n    }\r\n\r\n    async DeleteClaim(episode: Episode, externalEpisodeId: string) : Promise<any>{\r\n        const result = await this._apiService.Fetch<any>(new Request(`/api/Foto/episode/${externalEpisodeId}/${episode.EpisodeId}`,\r\n        {\r\n            method: 'DELETE',\r\n            headers: { 'Content-Type': 'application/json' },\r\n        }), false);\r\n\r\n        if(result){\r\n            const episodes = await this.GetAll(episode.ExternalPatientId);\r\n            const episode_index = episodes.findIndex((e: Episode) => e.EpisodeId === episode.EpisodeId);\r\n            episodes[episode_index].ExternalEpisodeId = null;\r\n            episode.ExternalEpisodeId = null;\r\n\r\n            await this._apiService.PutCache(`/api/Foto/episode/json/GetEpisodeStatus/${episode.ExternalPatientId}/Both`, new Response(JSON.stringify(episodes)));\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    async GetAll(patientExternalId: string): Promise<Array<Episode>> {\r\n        const response = (await this._apiService.Fetch<any>(new Request(`/api/Foto/episode/json/GetEpisodeStatus/${patientExternalId}/Both`,\r\n        {\r\n            method: 'GET',\r\n            headers: { 'Content-Type': 'application/json' },\r\n        })));\r\n\r\n        response.forEach((e: any) => { e.ExternalPatientId = patientExternalId; });\r\n\r\n        return response.map((e: any) => Object.assign(new Episode(), e));\r\n    }\r\n\r\n    async GetSurvey(episodeId: string): Promise<SurveyDetails>{\r\n        const details = new SurveyDetails();\r\n\r\n        details.Url = await this._apiService.Fetch<any>(new Request(`/api/Foto/episode/SurveyURL/${episodeId}`,\r\n        {\r\n            method: 'GET',\r\n            headers: { 'Content-Type': 'application/json' },\r\n        }), false);\r\n\r\n        details.LobbyCode = await this._apiService.Fetch<any>(new Request(`/api/Foto/episode/SurveyLobbyCode/${episodeId}`,\r\n        {\r\n            method: 'GET',\r\n            headers: { 'Content-Type': 'application/json' },\r\n        }), false);\r\n\r\n        details.QrCode = await this._apiService.Fetch<any>(new Request(`/api/Foto/episode/SurveyQRcode/${episodeId}`,\r\n        {\r\n            method: 'GET',\r\n            headers: { 'Content-Type': 'application/json' },\r\n        }), false);\r\n\r\n        return details.Url === '' || details.QrCode === '' ? null : details;\r\n    }\r\n\r\n    async AddVisit(visit: Visit): Promise<any>{\r\n        const result = await this._apiService.Fetch<any>(new Request(`/api/Foto/visit2/json`,\r\n        {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(visit)\r\n        }), false);\r\n\r\n        if(result[0].Success)\r\n            ToastService.Success(\"Visit added successfully.\");\r\n        else\r\n            ToastService.Error(result.Text);\r\n\r\n        return result;\r\n    }\r\n\r\n    async Discharge(episode: Episode, discharge: Discharge): Promise<any>{\r\n        const response = await this._apiService.Fetch<any>(new Request(`/api/Foto/discharge/json`,\r\n        {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(discharge)\r\n        }), false);\r\n\r\n        if(response.ResultCode === 0)\r\n            ToastService.Error(response.Text);\r\n        else if(response.ResultCode === 1)\r\n            ToastService.Warning(response.Text);\r\n        else{\r\n            const episodes = await this.GetAll(episode.ExternalPatientId);\r\n            const epiIndex = episodes.findIndex((e: Episode) => e.EpisodeId === episode.EpisodeId);\r\n            episodes[epiIndex].DischargeTime = new Date();\r\n            episode.DischargeTime = new Date();\r\n\r\n            await this._apiService.PutCache(`/api/Foto/episode/json/GetEpisodeStatus/${episode.ExternalPatientId}/Both`, new Response(JSON.stringify(episodes)));            \r\n            ToastService.Success(\"Episode discharged successfully.\");\r\n        }\r\n\r\n        return response;\r\n    }\r\n\r\n    async Create(episode: Episode): Promise<any> {\r\n        const result = await this._apiService.Fetch<any>(new Request(`/api/Foto/episode/json/Creation`,\r\n        {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(episode.Json)\r\n        }), false, 'Episode created successfully!');\r\n\r\n        if(result.ValidEpisode && result.EpisodeCreationResponse.EpisodeId){\r\n            episode.EpisodeId = result.EpisodeCreationResponse.EpisodeId;\r\n            const episodes = await this.GetAll(episode.ExternalPatientId);\r\n            episodes.push(episode);\r\n            await this._apiService.PutCache(`/api/Foto/episode/json/GetEpisodeStatus/${episode.ExternalPatientId}/Both`, new Response(JSON.stringify(episodes)));\r\n\r\n            ToastService.Success(\"Episode created successfully.\");\r\n        }\r\n        else\r\n            ToastService.Error(`Error creating episode: ${result.InvalidEpisodeReasons.join(', ')}`);\r\n\r\n        return result;\r\n    }\r\n}","import Discharge from \"@/models/foto/discharge\";\r\nimport Episode from \"@/models/foto/episode\";\r\nimport SurveyDetails from \"@/models/foto/surveyDetails\";\r\nimport Visit from \"@/models/foto/visit\";\r\nimport EpisodeService from \"@/services/foto/episodeService\";\r\nimport { reactive, readonly } from \"vue\";\r\n\r\nexport default class EpisodeStore {\r\n    private EpisodeState: any = reactive({\r\n        Episodes: [] as Array<Episode>\r\n    });\r\n    \r\n    private readonly _externalPatientId: string;\r\n    private readonly _episodeService: EpisodeService;\r\n\r\n    constructor(externalPatientId: string){\r\n        this._externalPatientId = externalPatientId;\r\n        this._episodeService = new EpisodeService(this._externalPatientId);\r\n    }\r\n\r\n    public State: any = readonly(this.EpisodeState);\r\n    \r\n    FilterLocal(filterFunc: Function){\r\n        return this.EpisodeState.Episodes.filter((e: Episode) => filterFunc(e));\r\n    }\r\n\r\n    Get(episodeId: Number) : Episode{\r\n        return this.EpisodeState.Episodes.filter((e: Episode) => e.EpisodeId == episodeId)[0];\r\n    }\r\n\r\n    async DeleteClaim(episodeId: number, externalEpisodeId: string){\r\n        const episode = this.Get(episodeId);\r\n        return await this._episodeService.DeleteClaim(episode, externalEpisodeId);\r\n    }\r\n\r\n    async Claim(episodeId: number, externalEpisodeId: string){\r\n        const episode = this.Get(episodeId);\r\n        const existingEpisodes = this.EpisodeState.Episodes.filter((e: Episode) => e.ExternalEpisodeId.startsWith(externalEpisodeId));\r\n\r\n        if(existingEpisodes.length > 0)\r\n            externalEpisodeId += `_${existingEpisodes.length}`;\r\n\r\n        return await this._episodeService.Claim(episode, externalEpisodeId);\r\n    }\r\n\r\n    async ForPatient(externalPatientId: string) : Promise<Array<Episode>>{\r\n        this.EpisodeState.Episodes = (await this._episodeService.GetAll(externalPatientId)).map((e: Episode) => Object.assign(new Episode(), e));\r\n        return this.EpisodeState.Episodes;\r\n    }\r\n\r\n    GetByExternalId(externalId: string): Episode {\r\n        return this.EpisodeState.Episodes.filter((e: Episode) => e.ExternalEpisodeId == externalId)[0];\r\n    }\r\n\r\n    async GetSurvey(episodeId: string | Number) : Promise<SurveyDetails>{\r\n        return await this._episodeService.GetSurvey(episodeId.toString());\r\n    }\r\n\r\n    async AddVisit(visit: Visit) : Promise<any>{\r\n        return await this._episodeService.AddVisit(visit);\r\n    }\r\n\r\n    async Add(episode: Episode) : Promise<any>{\r\n        const existingEpisodes = this.EpisodeState.Episodes.filter((e: Episode) => e.ExternalEpisodeId.startsWith(episode.ExternalEpisodeId));\r\n\r\n        if(existingEpisodes.length > 0)\r\n            episode.ExternalEpisodeId += `_${existingEpisodes.length}`;\r\n\r\n        const result: any = await this._episodeService.Create(episode);\r\n\r\n        if(result.ValidEpisode && result.EpisodeCreationResponse.EpisodeId)\r\n            this.EpisodeState.Episodes.push(episode);\r\n\r\n        return result;\r\n    }\r\n\r\n    async Discharge(discharge: Discharge) : Promise<any>{\r\n        const episode = this.GetByExternalId(discharge.ExternalEpisodeId);\r\n        return await this._episodeService.Discharge(episode, discharge);\r\n    }\r\n}\r\n","import * as R4 from 'fhir/r4';\r\n\r\nexport default class LaunchContext {\r\n    Patient: R4.Patient | null;\r\n    Location: R4.Location | null;\r\n    Encounter: R4.Encounter | null;\r\n    EpisodeOfCare: R4.EpisodeOfCare | null;\r\n    Practitioner: R4.Practitioner | null;\r\n    LaunchedByResource: String | null;\r\n}","import Client from 'fhirclient/lib/Client';\r\nimport * as R4 from 'fhir/r4';\r\n\r\nexport default class FhirService {\r\n    private FhirClient: Client;\r\n    private _cacheKey: string;\r\n\r\n    constructor(client: Client) {\r\n        this.FhirClient = client;\r\n        this._cacheKey = \"nh-foto-sof-fhir-\";\r\n    }\r\n\r\n    public async Get<Type extends R4.Resource>(reference: string): Promise<Type> {\r\n        const cacheKey = `${this._cacheKey}-${reference}`;\r\n        const match = await this.SearchCache(cacheKey);\r\n\r\n        if(match)\r\n            return match;\r\n\r\n        const response = await this.FhirClient.request(reference);\r\n        await this.PutCache(cacheKey, new Response(JSON.stringify(response)));\r\n\r\n        return response;\r\n    }\r\n\r\n    public async ReadPatient(): Promise<R4.Patient>{\r\n        const cacheKey = `${this._cacheKey}-patient-${this.FhirClient.patient.id}`;\r\n        const match = await this.SearchCache(cacheKey);\r\n\r\n        if(match)\r\n            return match;\r\n\r\n        const response = await this.FhirClient.patient.read();\r\n        await this.PutCache(cacheKey, new Response(JSON.stringify(response)));\r\n\r\n        return response;\r\n    }\r\n\r\n    public async ReadUser(): Promise<R4.Practitioner>{\r\n        const cacheKey = `${this._cacheKey}-${this.FhirClient.user.resourceType.toLowerCase()}-${this.FhirClient.patient.id}`;\r\n        const match = await this.SearchCache(cacheKey);\r\n\r\n        if(match)\r\n            return match;\r\n\r\n        const response = await this.FhirClient.user.read();\r\n        await this.PutCache(cacheKey, new Response(JSON.stringify(response)));\r\n\r\n        return response as R4.Practitioner;\r\n    }\r\n\r\n    public GetState(key: string){\r\n        return this.FhirClient.getState(`tokenResponse.${key}`);\r\n    }\r\n\r\n    private async PutCache(key: string | Request, response: Response){\r\n        const cache = await caches.open(this._cacheKey);\r\n        await cache.put(key, response);\r\n    }\r\n\r\n    private async SearchCache(key: string | Request){\r\n        const cache = await caches.open(this._cacheKey);\r\n        const match = await cache.match(key);\r\n\r\n        if(match && match.ok){\r\n            console.log('match', match);\r\n            return await match.json();\r\n        }\r\n    }\r\n}\r\n","import LaunchContext from \"@/models/fhir/launchContext\";\r\nimport FhirService from \"@/services/fhir/fhirService\";\r\nimport * as R4 from 'fhir/r4';\r\nimport { reactive, readonly } from \"vue\";\r\nimport Client from \"fhirclient/lib/Client\";\r\n\r\nexport default class FhirStore {\r\n    private FhirState: any = reactive({\r\n        Context: new LaunchContext(),\r\n        ValueSet: {\r\n            EpisodeOfCareType: []\r\n        }\r\n    });\r\n    public FhirService: FhirService;\r\n    public State: any = readonly(this.FhirState);\r\n\r\n    async InitAsync(client: Client){\r\n        this.FhirService = new FhirService(client);\r\n        this.FhirState.Context.LaunchedByResource = client.user.resourceType;\r\n\r\n        await this.UpdateState();\r\n    }\r\n\r\n    async UpdateState(){\r\n        this.FhirState.Context.Practitioner = await this.SetPractitioner(true);\r\n        this.FhirState.Context.Patient = await this.SetPatient(true);\r\n        this.FhirState.Context.Encounter = await this.SetEncounter(this.FhirService.GetState('encounter'), true);\r\n        this.FhirState.Context.EpisodeOfCare = await this.SetEpisodeOfCare(this.State.Context.Encounter, false);\r\n        this.FhirState.Context.Location = await this.SetLocation(true);\r\n        this.FhirState.Context.Allergies = await this.SetList('allergies');\r\n        this.FhirState.Context.Problems = await this.SetList('problems');\r\n        this.FhirState.Context.Medications = await this.SetList('medications');\r\n        this.FhirState.Context.Immunizations = await this.SetList('immunizations');\r\n        this.FhirState.ValueSet.EpisodeOfCareType = await this.GetValueSet('EpisodeOfCare.type');\r\n    }\r\n\r\n    public async EpisodeSearch(type: string){\r\n        return await this.FhirService.Get(`EpisodeOfCare?patient=${this.FhirState.Context.Patient.id}&type=${type}`);\r\n    }\r\n\r\n    private async GetValueSet(name: string){\r\n        return await this.FhirService.Get(`ValueSet/$expand?context=${name}&contextDirection=outgoing`)\r\n    }\r\n\r\n    private async SetList(code: string){\r\n        const list = await this.FhirService.Get(`List?patient=${this.FhirState.Context.Patient.id}&code=${code}`);\r\n        return (list as R4.Bundle).entry.map(e => e.resource);\r\n    }\r\n\r\n    private async SetPractitioner(errorIfNotFound = false) {\r\n        const practitioner = (await this.FhirService.ReadUser()) as R4.Practitioner;\r\n\r\n        if (!practitioner && errorIfNotFound) throw new Error('Practitioner not found in EMR');\r\n\r\n        return practitioner;\r\n    }\r\n\r\n    private async SetPatient(errorIfNotFound: boolean = false) {\r\n        const pat = await this.FhirService.ReadPatient();\r\n\r\n        if (!pat && errorIfNotFound) throw new Error('Patient not found in EMR');\r\n\r\n        return pat;\r\n    }\r\n\r\n    private async SetLocation(errorIfNotFound: boolean = false) {\r\n        let location = null;\r\n        const locationId = this.FhirService.GetState('loginDepartment');\r\n\r\n        if(locationId)\r\n            location = await this.FhirService.Get<R4.Location>(`Location/${locationId}`);\r\n\r\n        if (!location && errorIfNotFound) throw new Error('Location not found in EMR');\r\n\r\n        return location;\r\n    }\r\n\r\n    private async SetEncounter(encounterId: string, errorIfNotFound: boolean = false) {\r\n        const enc = await this.FhirService.Get<R4.Encounter>(`Encounter/${encounterId}`);\r\n\r\n        if (!enc && errorIfNotFound) throw new Error('Encounter not found in EMR');\r\n\r\n        return enc;\r\n    }\r\n\r\n    private async SetEpisodeOfCare(encounter: R4.Encounter, errorIfNotFound: boolean = false) {\r\n        const episodeOfCare = [];\r\n\r\n        if (encounter?.episodeOfCare && encounter.episodeOfCare?.length > 0) {\r\n            for(let count = 0; count < encounter.episodeOfCare.length; count++){\r\n                const eocRef = encounter.episodeOfCare[count]?.reference;\r\n                if (eocRef && eocRef !== '') episodeOfCare.push(await this.FhirService.Get<R4.EpisodeOfCare>(eocRef));\r\n            }\r\n        }\r\n\r\n        if (episodeOfCare.length === 0 && errorIfNotFound) throw new Error('Episode of care not found in EMR');\r\n\r\n        return episodeOfCare;\r\n    }\r\n}\r\n","import Patient from \"@/models/foto/patient\";\r\nimport PatientService from \"@/services/foto/patientService\";\r\nimport Client from \"fhirclient/lib/Client\";\r\nimport { reactive, readonly } from \"vue\";\r\nimport ArtifactStore from \"./artifactStore\";\r\nimport CodeListStore from \"./codeListStore\";\r\nimport EpisodeStore from \"./episodeStore\";\r\nimport FhirStore from \"./fhirStore\";\r\n\r\nexport default class ApplicationStore {\r\n    private _context: any = reactive({\r\n        State: {},\r\n        Log: []\r\n    });\r\n\r\n    public Episode: EpisodeStore;\r\n    public Code: CodeListStore;\r\n    public Artifact: ArtifactStore;\r\n    public Fhir: FhirStore;\r\n    public Context: any = readonly(this._context);\r\n    \r\n    async InitAsync(fhirClient: Client){\r\n        this.Fhir = new FhirStore();\r\n        await this.Fhir.InitAsync(fhirClient);\r\n        \r\n        const outboundPatient = Patient.FromResource(this.Fhir.State.Context.Patient, '');\r\n        const patientService = new PatientService(outboundPatient.ExternalID as string);\r\n        \r\n        await patientService.Create(outboundPatient);\r\n\r\n        this.Code = new CodeListStore(outboundPatient.ExternalSiteID as string);\r\n        this.Artifact = new ArtifactStore(outboundPatient.ExternalID as string);\r\n        this.Episode = new EpisodeStore(outboundPatient.ExternalID as string);\r\n        \r\n        await this.Episode.ForPatient(outboundPatient.ExternalID as string);\r\n\r\n        this._context.State = {\r\n            LaunchedBy: this.Fhir.State.Context.LaunchedByResource,\r\n            Practitioner: this.Fhir.State.Context.Practitioner,\r\n            Patient: this.Fhir.State.Context.Patient,\r\n            Encounter: this.Fhir.State.Context.Encounter,\r\n            Episode: this.Fhir.State.Context.EpisodeOfCare,\r\n            Location: this.Fhir.State.Context.Location,\r\n            FotoPatient: outboundPatient\r\n        };\r\n    }\r\n\r\n    async Refresh(fhirClient: Client){\r\n        const store = new ApplicationStore();\r\n        store._context.Log = this._context.Log;\r\n\r\n        const cache_keys = await caches.keys();\r\n        for(const key of cache_keys){\r\n            await caches.delete(key);\r\n        }\r\n\r\n        await store.InitAsync(fhirClient);\r\n\r\n        return store;\r\n    }\r\n\r\n    SetContextValue(key: string, value: any, serialize = true){\r\n        this._context[key] = value;\r\n        this.AddLog(`Set value ${key}`, value, serialize);\r\n    }\r\n\r\n    GetContextValue(key: string){\r\n        return this._context.State[key];\r\n    }\r\n\r\n    AddLog(log: string, data: any = null, serialize = true){\r\n        this._context.Log.push(`${new Date().toLocaleString()} - ${log}${data ? serialize ? ` - ${JSON.stringify(data)}` : ` - ${data}` : ''}`);\r\n    }\r\n}\r\n","/* eslint-disable */\r\nimport {LineController} from 'chart.js';\r\n\r\nexport default class ShadowLine extends LineController {\r\n  draw() {\r\n    const chart = this.chart;\r\n    const ctx = chart.ctx;\r\n    const _stroke = ctx.stroke;\r\n\r\n    ctx.stroke = function() {\r\n        ctx.save();\r\n        ctx.shadowColor = ctx.strokeStyle as string;\r\n        ctx.shadowBlur = 7;\r\n        ctx.shadowOffsetX = 0;\r\n        ctx.shadowOffsetY = 3;\r\n        _stroke.apply(this, arguments as any);\r\n        ctx.restore();\r\n    };\r\n\r\n    super.draw.apply(this, arguments as any);\r\n    ctx.stroke = _stroke;\r\n  }\r\n}\r\nShadowLine.id = 'shadowLine';","//vue\r\nimport { createApp } from 'vue';\r\nimport FhirClient from 'fhirclient';\r\nimport App from './App.vue'\r\n\r\nimport ApplicationStore from '../stores/applicationStore';\r\n\r\n//chartjs\r\nimport { Chart as chartjs } from \"chart.js\";\r\nimport ShadowLine from \"../models/shadowLine\";\r\nchartjs.register(ShadowLine);\r\n\r\n//FontAwesome\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { faRocket, faPaperPlane, faEnvelope, faQrcode, faFileDownload, faEye, faGenderless, faMars, faVenus, faUser, faBookMedical, faCalendarDay, \r\n  faAllergies, faSyringe, faPrescriptionBottleAlt, faExclamationTriangle, faFrown } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/vue-fontawesome';\r\n\r\n//PrimeVue\r\nimport 'primeflex/primeflex.css';\r\nimport 'primevue/resources/primevue.min.css';\r\nimport 'primeflex/primeflex.css';\r\nimport 'primeicons/primeicons.css';\r\nimport PrimeVue from 'primevue/config';\r\nimport Accordion from 'primevue/accordion';\r\nimport AccordionTab from 'primevue/accordiontab';\r\nimport Avatar from 'primevue/avatar';\r\nimport BadgeDirective from 'primevue/badgedirective';\r\nimport Button from 'primevue/button';\r\nimport Calendar from 'primevue/calendar';\r\nimport Card from 'primevue/card';\r\nimport Checkbox from 'primevue/checkbox';\r\nimport Chart from 'primevue/chart';\r\nimport Column from 'primevue/column';\r\nimport ColumnGroup from 'primevue/columngroup';\r\nimport ContextMenu from 'primevue/contextmenu';\r\nimport DataTable from 'primevue/datatable';\r\nimport Dialog from 'primevue/dialog';\r\nimport Divider from 'primevue/divider'\r\nimport Dropdown from 'primevue/dropdown';\r\nimport Fieldset from 'primevue/fieldset';\r\nimport Image from 'primevue/image';\r\nimport InlineMessage from 'primevue/inlinemessage';\r\nimport Inplace from 'primevue/inplace';\r\nimport InputSwitch from 'primevue/inputswitch';\r\nimport InputText from 'primevue/inputtext';\r\nimport InputNumber from 'primevue/inputnumber';\r\nimport Menu from 'primevue/menu';\r\nimport MultiSelect from 'primevue/multiselect';\r\nimport OverlayPanel from 'primevue/overlaypanel';\r\nimport Password from 'primevue/password';\r\nimport ProgressBar from 'primevue/progressbar';\r\nimport ProgressSpinner from 'primevue/progressspinner';\r\nimport Ripple from 'primevue/ripple';\r\nimport Row from 'primevue/row';\r\nimport ScrollPanel from 'primevue/scrollpanel';\r\nimport Skeleton from 'primevue/skeleton';\r\nimport Sidebar from 'primevue/sidebar';\r\nimport SpeedDial from 'primevue/speeddial';\r\nimport SplitButton from 'primevue/splitbutton';\r\nimport Splitter from 'primevue/splitter';\r\nimport SplitterPanel from 'primevue/splitterpanel';\r\nimport TabMenu from 'primevue/tabmenu';\r\nimport Textarea from 'primevue/textarea';\r\nimport Toast from 'primevue/toast';\r\nimport ToastService from 'primevue/toastservice';\r\nimport TabView from 'primevue/tabview';\r\nimport TabPanel from 'primevue/tabpanel';\r\nimport Tag from 'primevue/tag';\r\nimport Timeline from 'primevue/timeline';\r\nimport Tooltip from 'primevue/tooltip';\r\nimport VueProgressBar from \"@aacassandra/vue3-progressbar\";\r\n(\r\n\tasync () => {\r\n\t\tconst app = createApp(App);\r\n\t\t\r\n\t\tlibrary.add(faRocket, faPaperPlane, faEnvelope, faQrcode, faEye, faFileDownload, faGenderless, faMars, faVenus, faUser, faBookMedical, faCalendarDay, \r\n\t\tfaAllergies, faSyringe, faPrescriptionBottleAlt, faExclamationTriangle, faFrown);\r\n\t\tapp.use(PrimeVue, { ripple: true, inputStyle: 'outlined' });\r\n\t\tapp.use(ToastService);\r\n\t\tapp.use(VueProgressBar, {\r\n\t\t\tcolor: \"#0388E5\",\r\n\t\t\tfailedColor: \"red\",\r\n\t\t\tthickness: \"4px\",\r\n\t\t\tlocation: 'top',\r\n\t\t\tautoRevert: true,\r\n\t\t\tinverse: false,\r\n\t\t\tautoFinish: false,\r\n\t\t\ttransition: {\r\n\t\t\t\tspeed: \".1s\",\r\n\t\t\t\topacity: \"0s\",\r\n\t\t\t\ttermination: 800,\r\n\t\t\t}\r\n\t\t});\r\n\t\t\r\n\t\tapp.component('font-awesome-icon', FontAwesomeIcon);\r\n\t\tapp.component('Accordion', Accordion);\r\n\t\tapp.component('AccordionTab', AccordionTab);\r\n\t\tapp.component('Avatar', Avatar);\r\n\t\tapp.component('Button', Button);\r\n\t\tapp.component('Calendar', Calendar);\r\n\t\tapp.component('Card', Card);\r\n\t\tapp.component('Chart', Chart);\r\n\t\tapp.component('Checkbox', Checkbox);\r\n\t\tapp.component('Column', Column);\r\n\t\tapp.component('ColumnGroup', ColumnGroup);\r\n\t\tapp.component('ContextMenu', ContextMenu);\r\n\t\tapp.component('DataTable', DataTable);\r\n\t\tapp.component('Dialog', Dialog);\r\n\t\tapp.component('Divider', Divider);\r\n\t\tapp.component('Dropdown', Dropdown);\r\n\t\tapp.component('Fieldset', Fieldset);\r\n\t\tapp.component('Image', Image);\r\n\t\tapp.component('InlineMessage', InlineMessage);\r\n\t\tapp.component('Inplace', Inplace);\r\n\t\tapp.component('InputNumber', InputNumber);\r\n\t\tapp.component('InputSwitch', InputSwitch);\r\n\t\tapp.component('InputText', InputText);\r\n\t\tapp.component('Menu', Menu);\r\n\t\tapp.component('MultiSelect', MultiSelect);\r\n\t\tapp.component('OverlayPanel', OverlayPanel);\r\n\t\tapp.component('Password', Password);\r\n\t\tapp.component('ProgressBar', ProgressBar);\r\n\t\tapp.component('ProgressSpinner', ProgressSpinner);\r\n\t\tapp.component('Row', Row);\r\n\t\tapp.component('ScrollPanel', ScrollPanel);\r\n\t\tapp.component('Splitter', Splitter);\r\n\t\tapp.component('SplitterPanel', SplitterPanel);\r\n\t\tapp.component('Sidebar', Sidebar);\r\n\t\tapp.component('Skeleton', Skeleton);\r\n\t\tapp.component('SpeedDial', SpeedDial);\r\n\t\tapp.component('SplitButton', SplitButton);\r\n\t\tapp.component('TabMenu', TabMenu);\r\n\t\tapp.component('TabView', TabView);\r\n\t\tapp.component('TabPanel', TabPanel);\r\n\t\tapp.component('Tag', Tag);\r\n\t\tapp.component('Textarea', Textarea);\r\n\t\tapp.component('Timeline', Timeline);\r\n\t\tapp.component('Toast', Toast);\r\n\t\tapp.directive('tooltip', Tooltip);\r\n\t\tapp.directive('ripple', Ripple);\r\n\t\tapp.directive('badgedirective', BadgeDirective);\r\n\t\t\t\r\n\t\tconst applicationStore = new ApplicationStore();\r\n\t\tconst session = sessionStorage.SMART_KEY;\r\n\t\tconst launchContext = localStorage.getItem(`nh-foto-sof-launch-context-${session}`);\r\n\t\tapplicationStore.SetContextValue('SessionId', JSON.parse(session), false);\r\n\t\tapplicationStore.SetContextValue('LaunchContext', launchContext);\r\n\t\tconst fhirClient = await FhirClient.oauth2.ready();\r\n\r\n\t\tapp.provide('store', applicationStore);\r\n\t\tapp.provide('fhirclient', fhirClient);\r\n\r\n\t\tapp.config.errorHandler = function(err, vm, info){\r\n\t\t\tconst error = new Error(err as string);\r\n\r\n\t\t\tconsole.error(error);\r\n\t\t\t(<any>Window).$progress.fail();\r\n\t\t\t(<any>Window).$toast.add({\r\n\t\t\t\tseverity: 'error',\r\n\t\t\t\tsummary: 'Error',\r\n\t\t\t\tdetail: error.message,\r\n\t\t\t\tlife: 5000,\r\n\t\t\t});\r\n\r\n\t\t\tfetch(new Request(`/api/Logging/Error/${session}`,\r\n\t\t\t{\r\n\t\t\t\tmethod: 'POST',\r\n\t\t\t\theaders: { 'Content-Type': 'application/json' },\r\n\t\t\t\tbody: JSON.stringify(applicationStore.Context)\r\n\t\t\t}));\r\n\t\t}\r\n\r\n\t\twindow.addEventListener('unhandledrejection', function(event) {\r\n\t\t\tconsole.error(event);\r\n            (<any>Window).$progress.fail();\r\n\t\t\t(<any>Window).$toast.add({\r\n\t\t\t\tseverity: 'error',\r\n\t\t\t\tsummary: 'Error',\r\n\t\t\t\tdetail: event.reason.message,\r\n\t\t\t\tlife: 5000,\r\n\t\t\t});\r\n\r\n\t\t\tfetch(new Request(`/api/Logging/Error/${session}`,\r\n\t\t\t{\r\n\t\t\t\tmethod: 'POST',\r\n\t\t\t\theaders: { 'Content-Type': 'application/json' },\r\n\t\t\t\tbody: JSON.stringify(applicationStore.Context)\r\n\t\t\t}));\r\n\t\t});\r\n\r\n\t\tapp.mount('#app');\r\n\t}\r\n)();","const HL7 = require('hl7-standard');\r\n\r\nexport default class Hl7Service {\r\n    static Mdm: any = {\r\n        Build: (patientId: string, pFName: string, pLName: string, encounterId: string, externalId: string, base64: string) => {\r\n            const message = new HL7();\r\n            const dateTime = new Date().toISOString().split('.')[0].replace(/[^\\d]/gi, '');\r\n            \r\n            message.createSegment('MSH');\r\n            message.set('MSH.2', '^~\\\\&'); //Encoding\r\n            message.set('MSH.3', 'FOTO'); //Sending Application\r\n            message.set('MSH.5', 'FOTO'); //Sending Application\r\n            message.set('MSH.6', 'EPIC'); //Receiving Application\r\n            message.set('MSH.7', dateTime); //Date/Time of Message\r\n            message.set('MSH.9.1', 'MDM'); //Message Type\r\n            message.set('MSH.9.2', 'T02'); //Message Type\r\n            message.set('MSH.10', dateTime); //Message Control ID\r\n            message.set('MSH.11', 'D'); //Processing ID\r\n            message.set('MSH.12', '2.3'); //Version ID\r\n    \r\n            message.createSegment('PID');\r\n            message.set('PID.3.1', patientId); //Patient Identifier\r\n            message.set('PID.3.5', 'EPI'); //Patient Identifier\r\n            message.set('PID.5.1', pLName); //Patient Name - Last\r\n            message.set('PID.5.2', pFName); //Patient Name - First\r\n    \r\n            message.createSegment('PV1');\r\n            message.set('PV1.1', '1');\r\n            message.set('PV1.19', encounterId); //Visit Number\r\n    \r\n            message.createSegment('TXA');\r\n            message.set('TXA.2', 'Questionnaire'); //Report Type\r\n            message.set('TXA.4', dateTime); //Activity Date/Time\r\n            message.set('TXA.12', externalId); //External Unique Document Number\r\n            message.set('TXA.17', 'AU'); //Document Completion Status\r\n            message.set('TXA.19', 'AV'); // Document Availability Status\r\n    \r\n            message.createSegment('OBX');\r\n            message.set('OBX.1', '1'); // Set ID\r\n            message.set('OBX.2', 'ED'); //Value Type\r\n            message.set('OBX.3', 'PDF_FILE');\r\n            message.set('OBX.4', '1');\r\n            message.set('OBX.5.3', 'PDF'); //Observation Value\r\n            message.set('OBX.5.4', 'Base64'); //Observation Value\r\n            message.set('OBX.5.5', base64); //Observation Value\r\n    \r\n            return message.build();\r\n        },\r\n        Send: async(message: any) => {\r\n            console.log(message);\r\n        }\r\n    }\r\n}\r\n","<template>\r\n    <div class=\"p-datatable p-component p-datatable-sm\">\r\n        <div class=\"p-datatable-wrapper\">\r\n            <div class=\"p-datatable-header\">Risk-Adjustment Criteria</div>\r\n\r\n            <table role=\"table\" class=\"p-datatable-table\">\r\n                <tbody role=\"rowgroup\" class=\"p-datatable-tbody\" :id=\"'rai-tbody-' + artifact.ReportId\" />\r\n            </table>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent } from '@vue/runtime-core';\r\nimport Artifact from '../../models/foto/artifact';\r\nimport { RiskAdjustedCriteria } from '../../models/foto/riskAdjustedCriteria';\r\n\r\nexport default defineComponent({\r\n    name: 'RiskAdjustmentCriteria',\r\n    props: {\r\n        artifact: Object,\r\n    },\r\n    mounted() {\r\n        const artifact: Artifact = this.artifact as Artifact;\r\n        const tBody = document.querySelector(`#rai-tbody-${artifact.ReportId}`);\r\n        let value = '<tr colspan=\"12\">';\r\n        let num = 1;\r\n\r\n        artifact.RiskAdjustedItems.forEach((item: RiskAdjustedCriteria) => {\r\n            if (num % 6 === 0) {\r\n                value += `<td role=\"cell\" colspan=\"6\">${item.Attribute}: ${item.Value}</td>`;\r\n                value += `</tr>`;\r\n                if (num !== artifact.RiskAdjustedItems.length) value += '<tr colspan=\"12\" class=\"\">';\r\n            } else {\r\n                value += `<td role=\"cell\" colspan=\"6\">${item.Attribute}: ${item.Value}</td>`;\r\n\r\n                if (num === artifact.RiskAdjustedItems.length && num % 2 !== 0)\r\n                    value += `<td role=\"cell\" colspan=\"6\"></td>`;\r\n            }\r\n            num++;\r\n        });\r\n\r\n        tBody.innerHTML = value;\r\n    },\r\n});\r\n</script>\r\n","\r\nimport { defineComponent } from '@vue/runtime-core';\r\nimport Artifact from '../../models/foto/artifact';\r\nimport { RiskAdjustedCriteria } from '../../models/foto/riskAdjustedCriteria';\r\n\r\nexport default defineComponent({\r\n    name: 'RiskAdjustmentCriteria',\r\n    props: {\r\n        artifact: Object,\r\n    },\r\n    mounted() {\r\n        const artifact: Artifact = this.artifact as Artifact;\r\n        const tBody = document.querySelector(`#rai-tbody-${artifact.ReportId}`);\r\n        let value = '<tr colspan=\"12\">';\r\n        let num = 1;\r\n\r\n        artifact.RiskAdjustedItems.forEach((item: RiskAdjustedCriteria) => {\r\n            if (num % 6 === 0) {\r\n                value += `<td role=\"cell\" colspan=\"6\">${item.Attribute}: ${item.Value}</td>`;\r\n                value += `</tr>`;\r\n                if (num !== artifact.RiskAdjustedItems.length) value += '<tr colspan=\"12\" class=\"\">';\r\n            } else {\r\n                value += `<td role=\"cell\" colspan=\"6\">${item.Attribute}: ${item.Value}</td>`;\r\n\r\n                if (num === artifact.RiskAdjustedItems.length && num % 2 !== 0)\r\n                    value += `<td role=\"cell\" colspan=\"6\"></td>`;\r\n            }\r\n            num++;\r\n        });\r\n\r\n        tBody.innerHTML = value;\r\n    },\r\n});\r\n","import { render } from \"./RiskAdjustmentCriteria.vue?vue&type=template&id=9cac019c\"\nimport script from \"./RiskAdjustmentCriteria.vue?vue&type=script&lang=ts\"\nexport * from \"./RiskAdjustmentCriteria.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","\r\nimport Hl7Service from '../../services/hl7/hl7Service';\r\nimport { defineComponent } from '@vue/runtime-core';\r\nimport { PatientReportType } from '../../models/foto/patientReportType';\r\nimport { inject } from 'vue';\r\nimport AdditionalItemTable from './AdditionalItemTable.vue';\r\nimport Artifact from '../../models/foto/artifact';\r\nimport ArtifactSummaryChart from './ArtifactSummaryChart.vue';\r\nimport Episode from '../../models/foto/episode';\r\nimport FunctionalStatusMeasureTable from './FunctionalStatusMeasureTable.vue';\r\nimport ArtifactSurveys from './ArtifactSurveys.vue';\r\nimport RiskAdjustmentCriteria from './RiskAdjustmentCriteria.vue';\r\nimport Patient from '../../models/foto/patient';\r\nimport { FunctionalAssessment } from '../../models/foto/functionalAssessment';\r\nimport { Identifier } from 'fhir/r4';\r\n\r\nexport default defineComponent({\r\n    name: 'ArtifactDetail',\r\n    components: {\r\n        AdditionalItemTable,\r\n        ArtifactSummaryChart,\r\n        FunctionalStatusMeasureTable,\r\n        ArtifactSurveys,\r\n        RiskAdjustmentCriteria,\r\n    },\r\n    setup: function(): any {\r\n        const store = inject('store');\r\n        const patient = (store as any).GetContextValue('FotoPatient');\r\n\r\n        return {\r\n            store,\r\n            patient,\r\n        };\r\n    },\r\n    props: {\r\n        episode: Episode,\r\n    },\r\n    data: function(): any {\r\n        return {\r\n            error: null,\r\n            artifacts: [],\r\n            inContextArtifact: null,\r\n            artifactVisitValue: 0,\r\n            loadingDetails: false,\r\n            updatingVisitNumber: false,\r\n        };\r\n    },\r\n    async created() {\r\n        this.$Progress.start();\r\n        this.loadingDetails = true;\r\n\r\n        try{\r\n            this.artifacts = await this.store.Artifact.ForEpisode(this.episode.ExternalEpisodeId);\r\n            this.inContextArtifact = this.artifacts[0];\r\n            this.store.SetContextValue('SelectedArtifact', this.inContextArtifact);\r\n        }\r\n        catch(ex: any){\r\n            this.$emit('Error', ex);\r\n            this.error = ex;\r\n            Promise.reject(ex);\r\n        }\r\n\r\n        this.$Progress.finish();\r\n        this.loadingDetails = false;\r\n    },\r\n    computed: {\r\n        panelBodyHeader(){\r\n            let header = `${this.getformattedDate(this.inContextArtifact.SurveyDateTimeCompleted)} - ${PatientReportType[this.inContextArtifact.ReportType].toString()} Summary - Completed`;\r\n\r\n            if([0, 1].includes(this.inContextArtifact.ReportType) && this.inContextArtifact.FunctionalAssessments.length > 0){\r\n                const primaryMeasureAssessment = this.inContextArtifact.FunctionalAssessments.filter((fa: FunctionalAssessment) => fa.Descriptor.toLowerCase() === 'physical fs primary measure')[0];\r\n\r\n                if (primaryMeasureAssessment) {\r\n                    const scoreArrLen = primaryMeasureAssessment.FunctionalScoreSummaries?.length;\r\n                    header += ` - ${primaryMeasureAssessment?.FunctionalScoreSummaries[scoreArrLen - 1]?.FunctionalScore}`;\r\n                } else header += ' - N/A';\r\n            }\r\n\r\n            return header;\r\n        },\r\n        primaryAssessment(){\r\n            if (this.inContextArtifact.FunctionalAssessments.length > 0)\r\n                return this.inContextArtifact.FunctionalAssessments.filter((fa: FunctionalAssessment) => fa.Descriptor.toLowerCase() === 'physical fs primary measure')[0];\r\n            else\r\n                return null;\r\n        },\r\n        menuItems(){\r\n            const items = [\r\n                {\r\n                    label: 'View',\r\n                    icon: 'pi pi-eye',\r\n                    command: async () => { await this.viewReport() },\r\n                },\r\n                {\r\n                    label: 'Download',\r\n                    icon: 'pi pi-file-pdf',\r\n                    command: async () => { await this.downloadReport() },\r\n                }\r\n            ];\r\n\r\n            if(this.store.Fhir.State.Context.LaunchedByResource === 'Practitioner')\r\n                items.unshift({\r\n                    label: 'Upload to MyChart',\r\n                    icon: 'pi pi-cloud-upload',\r\n                    command: async () => { await this.uploadReport() },\r\n                });\r\n\r\n            return items;\r\n        }\r\n    },\r\n    methods: {\r\n        createPanelHeader(artifact: Artifact){\r\n            return `${this.getformattedDate(artifact.SurveyDateTimeCompleted)} Functional ${PatientReportType[artifact.ReportType].toString()} Summary`\r\n        },\r\n        artifactSelected(event: any){\r\n            this.inContextArtifact = this.artifacts[event.index];\r\n            this.store.SetContextValue('SelectedArtifact', this.inContextArtifact);\r\n        },\r\n        toggleArtifactVisitNumOp(event: any) {\r\n            this.$refs[`artifactVisitNumOp-${this.inContextArtifact.ReportId}`].toggle(event);\r\n        },\r\n        async launchSurvey() {\r\n            try{\r\n                this.store.AddLog(`Launching survey for episode ${this.episode.EpisodeId}`);\r\n                const surveyDetails = await this.store.Episode.GetSurvey(this.episode.EpisodeId);\r\n                window.open(surveyDetails.Url);\r\n            }\r\n            catch(e){\r\n                Promise.reject(e);\r\n            }\r\n        },\r\n        async updateVisitNumber(event: any) {\r\n            try{\r\n                const artifact = this.artifacts.filter((a: Artifact) => a.ReportId === this.inContextArtifact.ReportId)[0];\r\n    \r\n                if (artifact.Visit !== this.artifactVisitValue){\r\n                    this.store.AddLog(`Updating visit for report ${this.inContextArtifact.ReportId} with value ${this.artifactVisitValue}`);\r\n                    this.updatingVisitNumber = true;\r\n                    this.$Progress.start();\r\n\r\n                    await this.store.Artifact.SetVisit(this.inContextArtifact.ReportId, this.artifactVisitValue);\r\n    \r\n                    this.$Progress.finish();\r\n                    this.updatingVisitNumber = false;\r\n                }\r\n                    \r\n                this.$refs[`artifactVisitNumOp-${this.inContextArtifact.ReportId}`].toggle(event);\r\n            }\r\n            catch(e){\r\n                Promise.reject(e);\r\n            }\r\n        },\r\n        async uploadReport() {\r\n            try{\r\n                this.store.AddLog('Uploading report to mychart');\r\n\r\n                this.$Progress.start();\r\n                const report = await this.store.Artifact.GetReport(this.inContextArtifact.ReportId);\r\n                const patient = this.store.Fhir.State.Context.Patient;\r\n                const encounter = this.store.Fhir.State.Context.Encounter;\r\n                const patientId = patient.identifier.filter((i: Identifier) => i.system.endsWith('114350.1.1'))[0]?.value;\r\n                const pFName = patient.name[0]?.given[0];\r\n                const pLName = patient.name[0]?.family;\r\n                const encounterId = encounter.identifier.filter((i: Identifier) => i.system.endsWith('698084.8'))[0]?.value;\r\n                const externalId = `${this.inContextArtifact.ReportId}_${PatientReportType[this.inContextArtifact.ReportType].toLowerCase()}`;\r\n                const base64 = Buffer.from(report).toString('base64');\r\n                const message = Hl7Service.Mdm.Build(patientId, pFName, pLName, encounterId, externalId, base64);\r\n    \r\n                this.store.AddLog('HL7 message for report', message);\r\n\r\n                await Hl7Service.Mdm.Send(message);\r\n                this.$Progress.finish();\r\n            }\r\n            catch(e){\r\n                Promise.reject(e);\r\n            }\r\n        },\r\n        async downloadReport() {\r\n            try{\r\n                this.store.AddLog(`Downloading report ${this.inContextArtifact.ReportId}`);\r\n\r\n                this.$Progress.start();\r\n                const report = await this.store.Artifact.GetReport(this.inContextArtifact.ReportId);\r\n                const blob = new Blob([new Uint8Array(report)], { type: 'application/pdf' });\r\n                const link = document.createElement('a');\r\n                const reportType = PatientReportType[this.inContextArtifact.ReportType];\r\n                const pat: Patient = this.store.GetContextValue('FotoPatient') as Patient;\r\n                const dateCompleted = new Date(this.inContextArtifact.SurveyDateTimeCompleted);\r\n                const dateStarted = new Date(this.inContextArtifact.SurveyDateTimeStarted);\r\n                const dateStr = dateCompleted.getFullYear() !== 1 \r\n                    ? `${dateCompleted.getMonth() + 1}${dateCompleted.getDate()}${dateCompleted.getFullYear()}`\r\n                    : `${dateStarted.getMonth() + 1}${dateStarted.getDate()}${dateStarted.getFullYear()}`;\r\n    \r\n                link.href = URL.createObjectURL(blob);\r\n                link.download = `${pat.Alias}_${reportType}_${dateStr}.pdf`;\r\n                link.click();\r\n                this.$Progress.finish();\r\n            }\r\n            catch(e){\r\n                Promise.reject(e);\r\n            }\r\n        },\r\n        async viewReport() {\r\n            try{\r\n                this.store.AddLog(`Viewing report ${this.inContextArtifact.ReportId}`);\r\n                this.$Progress.start();\r\n                const report = await this.store.Artifact.GetReport(this.inContextArtifact.ReportId);\r\n                const blob = new Blob([new Uint8Array(report)], { type: 'application/pdf' });\r\n                const tab = window.open('about:blank');\r\n    \r\n                tab.location = URL.createObjectURL(blob) as any;\r\n                tab.focus();\r\n                this.$Progress.finish();\r\n            }\r\n            catch(e){\r\n                Promise.reject(e);\r\n            }\r\n        },\r\n        toggle(event: any) {\r\n            const ref: any = this.$refs[`artifact_report_menu_${this.inContextArtifact.ReportId}`];\r\n            ref.toggle(event);\r\n            event.stopPropagation();\r\n        },\r\n        getformattedDate(datetime: string) {\r\n            return new Date(datetime).toISOString().split('T')[0].replace(/-/g, '/');\r\n        },\r\n    },\r\n});\r\n","import Artifact from \"./artifact\";\r\nimport EpisodeInfo from \"./episodeInfo\";\r\nimport SurveyDetails from \"./surveyDetails\";\r\n\r\nexport default class Episode  \r\n{\r\n    EpisodeId: number = null;\r\n\r\n    BodyPartId: number = null;\r\n    BodyPartText: string = null;\r\n\r\n    ImpairmentId: number = null;\r\n    ImpairmentText: string =null;\r\n    \r\n    CareTypeId: number = null;\r\n    CareTypeText: string = null;\r\n    \r\n    SurgeryTypeId: number = null;\r\n    SurgeryTypeText: string =null;\r\n    \r\n    PayerSourceId: number = null;\r\n    PayerSourceText: string = null;\r\n    \r\n    PrimaryMeasureId: number = null;\r\n    PrimaryMeasureText: string = null;\r\n\r\n    SiteId: number = null;\r\n    SiteText: string = null;\r\n    \r\n    TherapistId: number = null;\r\n    TherapistName: string = null;\r\n\r\n    SecondaryMeasureIds: Array<number> = new Array<number>();\r\n    SecondaryMeasureText: string = null;\r\n\r\n    CreateDate: Date = null;\r\n    LatestIntakeTime: Date = null;\r\n    LatestStatusTime: Date = null;\r\n    DischargeTime: Date = null;\r\n    StatusCount: number = null;\r\n    NPId: number = null;\r\n    NPDescription: string = null;\r\n    ExternalEpisodeId: string = null;\r\n    ExternalPatientId: string = null;\r\n\r\n    private DateHasValue(date: Date){\r\n        if(![1, 1969].includes(date.getFullYear()) && date !== null)\r\n            return true;\r\n\r\n        return false;\r\n    }\r\n\r\n    get Json(){\r\n        return {\r\n            ExternalPatientId: this.ExternalPatientId,\r\n            ExternalEpisodeId: this.ExternalEpisodeId,\r\n            SiteId: this.SiteId ? this.SiteId : -1,\r\n            ClinicianId: this.TherapistId ? this.TherapistId : -1,\r\n            CareTypeId: this.CareTypeId ? this.CareTypeId : -1,\r\n            BodyPartId: this.BodyPartId ? this.BodyPartId : -1,\r\n            ImpairmentId: this.ImpairmentId ? this.ImpairmentId : -1,\r\n            SurgeryTypeId: this.SurgeryTypeId ? this.SurgeryTypeId : -1,\r\n            PayerSourceId: this.PayerSourceId ? this.PayerSourceId : -1,\r\n            PrimaryMeasureId: this.PrimaryMeasureId ? this.PrimaryMeasureId : -1,\r\n            SecondaryMeasureIds: this.SecondaryMeasureIds\r\n        };\r\n    }\r\n\r\n    get Info(){\r\n        const now = new Date();\r\n        const created = new Date(this.CreateDate);\r\n        const latestIntake = new Date(this.LatestIntakeTime);\r\n        const latestStatus = new Date(this.LatestStatusTime);\r\n        const discharge = new Date(this.DischargeTime);\r\n\r\n        //discharged\r\n        if(this.DateHasValue(discharge) || (this.NPId && this.NPId > 0))\r\n            return EpisodeInfo.Discharged;\r\n\r\n        //intake overdue\r\n        if(!this.DateHasValue(latestIntake)){\r\n            const timeDiff = now.getTime() - created.getTime();\r\n            const dayDiff = timeDiff / (1000 * 3600 * 24);\r\n    \r\n            if (dayDiff >= 7) return EpisodeInfo.IntakeOverdue;\r\n        }\r\n\r\n        //status overdue\r\n        if(this.DateHasValue(latestIntake)){\r\n            let timeDiff = new Date().getTime() - latestIntake.getTime();\r\n\r\n            if(this.DateHasValue(latestStatus))\r\n                timeDiff = new Date().getTime() - latestStatus.getTime();\r\n\r\n            const dayDiff = timeDiff / (1000 * 3600 * 24);\r\n        \r\n            if (dayDiff >= 14) return EpisodeInfo.StatusOverdue;\r\n        }\r\n\r\n        //close and inactive\r\n        if(this.DateHasValue(latestStatus)){\r\n            const timeDiff = new Date().getTime() - latestStatus.getTime();\r\n            const dayDiff = timeDiff / (1000 * 3600 * 24);\r\n    \r\n            if (dayDiff >= 30 && dayDiff <= 44) return EpisodeInfo.Close;\r\n            else if (dayDiff >= 45) return EpisodeInfo.Inactive;\r\n        }\r\n\r\n        //in progress\r\n        return EpisodeInfo.InProgress;\r\n    }\r\n}","export enum PatientReportType {\r\n    Intake,\r\n    Status,\r\n    Discharge,\r\n    NonParticipation,\r\n    ADLIntake,\r\n    ADLStatus,\r\n    MDT,\r\n    MSIntake,\r\n    MSStatus\r\n}","enum EpisodeInfo{\r\n    InProgress,\r\n    IntakeOverdue,\r\n    StatusOverdue,\r\n    Close,\r\n    Inactive,\r\n    Discharged\r\n}\r\n\r\nexport default EpisodeInfo;","<template>\r\n    <table class=\"p-datatable p-component p-datatable-sm\">\r\n        <thead class=\"p-datatable-thead\" role=\"rowgroup\">\r\n            <tr role=\"row\">\r\n                <th role=\"cell\" colspan=\"2\">Functional Status Measures</th>\r\n                <th role=\"cell\" v-for=\"score in primaryAssessment.FunctionalScoreSummaries\" :key=\"score.Label\">\r\n                    {{score.Label}} Score\r\n                </th>\r\n                <th role=\"cell\" colspan=\"6\">Interpretation of FS Scores/Stages Value</th>\r\n            </tr>\r\n        </thead>\r\n        <tbody class=\"p-datatable-tbody\" role=\"rowgroup\">\r\n            <tr class=\"\" tabindex=\"0\" role=\"row\">\r\n                <td role=\"cell\" colspan=\"2\">Patient's Physical FS Primary Measure</td>\r\n                <td role=\"cell\" v-for=\"score in primaryAssessment.FunctionalScoreSummaries\" :key=\"score.Label\">{{score.FunctionalScore}}</td>\r\n\r\n                <td role=\"cell\" colspan=\"6\" v-if=\"!primaryAssessment.StagingInfo.CurrentStage && primaryAssessment.StagingInfo.IntakeStage.Stage !== 0\">\r\n                    Patient's intake functional measure is {{primaryAssessment.StagingInfo.IntakeStage.Measure}} out of 100 (higher number = greater function). This FS measure \r\n                    places the patient in Stage {{primaryAssessment.StagingInfo.IntakeStage.Stage}} and means the patient \r\n                    {{primaryAssessment.StagingInfo.StagingLevels[primaryAssessment.StagingInfo.IntakeStage.Stage - 1].Title.toLowerCase()}}\r\n                </td>\r\n\r\n                <td role=\"cell\" colspan=\"6\" v-else-if=\"primaryAssessment.StagingInfo.CurrentStage\">\r\n                    Patient's Intake FS Score was {{primaryAssessment.StagingInfo.IntakeStage.Measure}} initially placing the patient in Stage {{primaryAssessment.StagingInfo.IntakeStage.Stage}}. \r\n                    Patient's FS score now is {{primaryAssessment.StagingInfo.CurrentStage.Measure}} out of 100 ({{primaryAssessment.StagingInfo.CurrentStage.Measure - primaryAssessment.StagingInfo.IntakeStage.Measure}} \r\n                    points of functional change since intake), placing the patient in Stage {{primaryAssessment.StagingInfo.CurrentStage.Stage}} and \r\n                    means the {{primaryAssessment.StagingInfo.CurrentStage.PatientFunctionText}}\r\n                </td>\r\n\r\n                <td role=\"cell\" colspan=\"6\" v-else>\r\n                    Patient's intake functional measure is {{primaryAssessment.StagingInfo.IntakeStage.Measure}} out of 100 (higher number = greater function).\r\n                </td>\r\n            </tr>\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n            <tr class=\"\" tabindex=\"0\" role=\"row\">\r\n                <td role=\"cell\" colspan=\"2\">Risk Adjusted Statistical FOTO</td>\r\n                <td role=\"cell\">{{primaryAssessment.RiskAdjustedStatisticalFOTO}}</td>\r\n                <td role=\"cell\" v-for=\"score in primaryAssessment.FunctionalScoreSummaries.length - 1\" :key=\"score\"></td>\r\n                <td role=\"cell\" colspan=\"6\">\r\n                    Given the patient's risk-adjustment variables, like-patients nationally had a FS score of {{primaryAssessment.StagingInfo.RiskAdjustedStage.Measure}}, \r\n                    Stage {{primaryAssessment.StagingInfo.RiskAdjustedStage.Stage}}, at intake.\r\n                </td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent } from '@vue/runtime-core';\r\n\r\nexport default defineComponent({\r\n    name: 'FunctionalStatusMeasureTable',\r\n    props: {\r\n        primaryAssessment: Object,\r\n    },\r\n});\r\n</script>\r\n","\r\nimport { defineComponent } from '@vue/runtime-core';\r\n\r\nexport default defineComponent({\r\n    name: 'FunctionalStatusMeasureTable',\r\n    props: {\r\n        primaryAssessment: Object,\r\n    },\r\n});\r\n","import { render } from \"./FunctionalStatusMeasureTable.vue?vue&type=template&id=4c8bfccd\"\nimport script from \"./FunctionalStatusMeasureTable.vue?vue&type=script&lang=ts\"\nexport * from \"./FunctionalStatusMeasureTable.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script"],"sourceRoot":""}